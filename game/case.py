async def case(item, user):
    rand = random.randint(1, 100)
    if item.name == '–ú–∞–ª–µ–Ω—å–∫–∏–π —Å—É–Ω–¥—É—á–æ–∫':
        armorset = ['–•–æ–∫–∫–µ–π–Ω–∞—è –º–∞—Å–∫–∞', '–ö–æ–∂–∞–Ω—ã–π –Ω–∞–≥—Ä—É–¥–Ω–∏–∫', '–ö–æ–∂–∞–Ω—ã–µ —à—Ç–∞–Ω—ã', '–ë–µ—Ä—Ü—ã', '–ù–∏–∂–Ω–µ–µ –±–µ–ª—å—ë –†–∞—Å–∫—É–ª–æ–≤–æ–π']
        eat = ['–õ—É—á—à–µ –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–π', '–ë–æ–ª—å—à–æ–π —Ö–µ—Ä –æ–≥—Ä–∞', '–ú–∞–ª–æ–µ –∑–µ–ª—å–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è']
        last = '–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç –Ω–∞ –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å'
    elif item.name == '–®–∫–∞—Ç—É–ª–∫–∞ –ö–µ—Ñ–∏—Ä–∞':
        armorset = ['–®–ª—è–ø–∞ —Ñ–æ–∫—É—Å–Ω–∏–∫–∞', '–ö–æ–º–±–∏–Ω–µ–∑–æ–Ω —Å—Ç–∞–ª–∫–µ—Ä–∞', '–ù–∏–∂–Ω–µ–µ –±–µ–ª—å—ë –†–∞—Å–∫—É–ª–æ–≤–æ–π', '–ö—Ä–æ—Å—ã –∞–¥–∏–¥–∞—Å']
        eat = ['–õ—É—á—à–µ –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–π', '–ë–æ–ª—å—à–æ–π —Ö–µ—Ä –æ–≥—Ä–∞', '–ú–∞–ª–æ–µ –∑–µ–ª—å–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è']
        last = '–î–µ—Ç–µ–∫—Ç–æ—Ä –∞–Ω–æ–º–∞–ª–∏–π'
    elif item.name == '–û–≥—Ä–æ–º–Ω—ã–π —Å—É–Ω–¥—É–∫':
        armorset = ['–ö–µ–ø–∫–∞ –∞–¥–∏–¥–∞—Å', '–ù–æ—á–Ω—É—à–∫–∞ –†–∞—Å–∫—É–ª–æ–≤–æ–π', '–ù–∏–∂–Ω–µ–µ –±–µ–ª—å—ë –†–∞—Å–∫—É–ª–æ–≤–æ–π', '–¢—É—Ñ–µ–ª—å–∫–∏ –†–∞—Å–∫—É–ª–æ–≤–æ–π']
        eat = ['–õ—É—á—à–µ –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–π', '–ë–æ–ª—å—à–æ–π —Ö–µ—Ä –æ–≥—Ä–∞', '–°—Ä–µ–¥–Ω–µ–µ –∑–µ–ª—å–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è']
        last = '–†–µ—Ü–µ–ø—Ç –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –º–∞–ª–æ–≥–æ –∑–µ–ª—å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è'
    elif item.name == 'Ashot case':
        armorset = ['–ö–æ–∂–∞–Ω—ã–π —à–ª–µ–º', '–ë—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç', '–°–ø–æ—Ä—Ç–∏–≤–∫–∏ –∞–¥–∏–¥–∞—Å', '–ö–æ–∂–∞–Ω—ã–µ –±–æ—Ç–∏–Ω–∫–∏', '–ù–∏–∂–Ω–µ–µ –±–µ–ª—å—ë –†–∞—Å–∫—É–ª–æ–≤–æ–π']
        eat = ['–®–∞—É—Ä–º–∞', '–î–≤–æ–π–Ω–∞—è —à–∞—É—Ä–º–∞']
        last = '–†–µ—Ü–µ–ø—Ç –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–µ–ª—å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è'
    elif item.name == '–û–ø—É—Å—Ç–æ—à–µ–Ω–Ω—ã–π —Å—É–Ω–¥—É–∫':
        armorset = ['–ì–æ—Ä–Ω–∞—è —à–∞–ø–∫–∞', '–ñ–∏–ª–µ—Ç —Å–∫–∞–ª–æ–ª–∞–∑–∞', '–ö–æ—Ä–æ—Ç–∫–∏–µ —à–æ—Ä—Ç—ã', '–ì–æ—Ä–Ω—ã–µ –∫—Ä–æ—Å—Å–æ–≤–∫–∏', '–ù–∏–∂–Ω–µ–µ –±–µ–ª—å—ë –†–∞—Å–∫—É–ª–æ–≤–æ–π']
        eat = ['–û–Ω –Ω–∞–∑—ã–≤–∞–µ—Ç —ç—Ç–æ "—è–±–ª–æ–∫–æ"']
        last = '–î–µ—Ç–µ–∫—Ç–æ—Ä –∞–Ω–æ–º–∞–ª–∏–π'
    elif item.name == '–°—É–Ω–¥—É–∫ —â–∏—Ç–æ–Ω–æ—Å—Ü–µ–≤':
        rand = random.randint(1, 100)
        if rand <= 22:
            winnerItem = '–ö—Ä—ã—à–∫–∞ –æ—Ç –º—É—Å–æ—Ä–Ω–∏–∫–∞'
        elif rand <= 41:
            winnerItem = '–ü–æ–∫—Ä—ã—à–∫–∞ —Å–æ —Å–≤–∞–ª–∫–∏'
        elif rand <= 57:
            winnerItem = '–î–µ—Ä–µ–≤—è–Ω–Ω—ã–π —â–∏—Ç'
        elif rand <= 70:
            winnerItem = '–©–∏—Ç –æ—Ö—Ä–∞–Ω–Ω–∏–∫–∞'
        elif rand <= 80:
            winnerItem = '–©–∏—Ç –ø–æ–∫–æ—Ä–∏—Ç–µ–ª—è –®–∞–∏-–•—É–ª—É–¥–∞'
        elif rand <= 88:
            winnerItem = '–ñ–µ–ª–µ–∑–Ω—ã–π —â–∏—Ç'
        elif rand <= 94:
            winnerItem = '–©–∏—Ç –±–æ–º–∂–∞'
        elif rand <= 99:
            winnerItem = '–ó–æ–ª–æ—Ç–∞—è –ø–æ–∫—Ä—ã—à–∫–∞'
        elif rand == 100:
            winnerItem = '–©–∏—Ç –≤–µ—Ä–Ω–æ—Å—Ç–∏ –†–∞—Å–∫—É–ª–æ–≤–æ–π'
        success = await db.addItem(winnerItem, user)
        name, size, bonus, atk_block, expires = await db.items(winnerItem, check=True)
        if success == False:
            item.active = 1
            await item.save()
            text = "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ."
            return text
        else:
            text = "–ü—Ä–∏–º–µ–Ω–∏–≤ —Å–∞–º—ã–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω–∏—è –ø–æ –≤—Å–∫—Ä—ã—Ç–∏—é —ç—Ç–∏—Ö —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—É–Ω–¥—É–∫–æ–≤, —Ç—ã –Ω–∞–∫–æ–Ω–µ—Ü —Ä–∞—Å–ø–∞—Ö–Ω—É–ª —ç—Ç–æ—Ç –∫–µ–π—Å. –¢–æ—á–Ω–µ–µ, —Ç–æ —á—Ç–æ –æ—Ç –Ω–µ–≥–æ –æ—Å—Ç–∞–ª–æ—Å—å –ø–æ—Å–ª–µ –º–æ–Ω–æ—Ç–æ–Ω–Ω–æ–≥–æ –±–∏—Ç—å—è –º–æ–ª–æ—Ç–∫–æ–º.\n–í–Ω—É—Ç—Ä–∏ —Ç—ã –Ω–∞—à—ë–ª{}".format(name)
        item.active = 0
        await item.save()
        await achprog(user, ach='cases')
        return text
    elif item.name == '–ê–º—Ñ–æ—Ä–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ø–æ–º–æ—â–∏':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(InlineKeyboardButton('–ï–¥–∞', callback_data="extraCase_eat"))
        markup.add(InlineKeyboardButton('–ó–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è', callback_data="extraCase_heal"))
        markup.add(InlineKeyboardButton('–°–≤–∏—Ç–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏', callback_data="extraCase_tp"))
        text = "_–ü–æ—Ç–µ—Ä–µ–≤ —ç—Ç—É —à—Ç—É–∫–æ–≤–∏–Ω—É, —Ç—ã –ø—Ä–∏–∑–≤–∞–ª –¥–∂–∏–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–µ–±–µ —Ç—Ä–∏ –≤–µ—â–∏ –Ω–∞ –≤—ã–±–æ—Ä —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ:_"
        user = await db.Users.get(id=item.idplayer)
        await bot.send_message(user.user_id, text, reply_markup=markup, parse_mode='markdown')
        text = "–ü–æ—Ç–µ—Ä–µ—Ç—å..."
        return text
    elif item.name == '–ê–ø—Ç–µ—á–∫–∞':
        armorset = ['–ö–æ–ª–ø–∞–∫ –≥–ª–∞–≤–≤—Ä–∞—á–∞', '–•–∞–ª–∞—Ç –≥–ª–∞–≤—Ä–∞—á–∞', '–®—Ç–∞–Ω—ã –≥–ª–∞–≤–≤—Ä–∞—á–∞', '–¢–∞–ø–æ—á–∫–∏ –≥–ª–∞–≤–≤—Ä–∞—á–∞']
        moneyBonus = random.randint(10, 35)
        user = await db.Users.get(id=item.idplayer)
        user.money += moneyBonus
        await user.save()
        armor = random.choice(armorset)
        success = await db.addItem(armor, user)
        name, size, bonus, atk_block, expires = await db.items(armor, check=True)
        if success == False:
            item.active = 1
            await item.save()
            text = "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ. –û—Ç–∫—Ä—ã—Ç—å –∞–ø—Ç–µ—á–∫—É –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è."
            return text
        else:
            text = "*–†–∞—Å–ø–∞—Ö–Ω—É–≤ —Å—É–º–∫—É —Å –∫—Ä–∞—Å–Ω—ã–º –∫—Ä–µ—Å—Ç–æ–º, —Ç—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª*\n{}".format(name)
        item.active = 0
        await item.save()
        success = await db.addItem('–£—Å–ø–æ–∫–∞–∏–≤–∞—é—â–µ–µ', user)
        name, size, bonus, atk_block, expires = await db.items('–£—Å–ø–æ–∫–∞–∏–≤–∞—é—â–µ–µ', check=True)
        if success == False:
            item.active = 1
            await item.save()
            text += "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ. –û—Ç–∫—Ä—ã—Ç—å –∞–ø—Ç–µ—á–∫—É –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è."
            return text
        else:
            text += "\n{}".format(name)
        text += "\nüí∞{}".format(moneyBonus)
        item.active = 0
        await item.save()
        await achprog(user, ach='cases')
        return text
    elif item.name == '–°—É–Ω-–¥—É–∫':
        user = await db.Users.get(id=item.idplayer)
        armorset = ['–®–ª–µ–º –∏–∑ —Ñ–æ–ª—å–≥–∏', '–ú–∞–π–∫–∞ –∏–∑ –ø–∞–∫–µ—Ç–∞', '–ú–æ–¥–Ω—ã–µ —à—Ç–∞–Ω—ã', '–ù–ï–∫—Ä–æ—Å—Å–æ–≤–∫–∏']
        winnerItem = random.choice(armorset)
        success = await db.addItem(winnerItem, user)
        name, size, bonus, atk_block, expires = await db.items(winnerItem, check=True)
        if success == False:
            item.active = 1
            await item.save()
            text = "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ. –û—Ç–∫—Ä—ã—Ç—å —Å—É–Ω-–¥—É–∫ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è."
            return text
        else:
            text = "–í—ã –æ—Ç–∫—Ä—ã–ª–∏ —Å—É–Ω-–¥—É–∫. –í–Ω—É—Ç—Ä–∏ –≤—ã –Ω–∞—à–ª–∏ {}".format(name)
        item.active = 0
        await item.save()
        return text
    elif item.name == '–°—Ö—Ä–æ–Ω —Å—Ç–∞–ª–∫–µ—Ä–∞':
        if item.active != 1: return
        await item.delete()
        user = await db.Users.get(id=item.idplayer)
        if int(time.time()) >= item.expires:
            newHp = int(user.nowhp / 2)
            text = "–û—Ç–∫—Ä—ã–≤ —Å—É–Ω–¥—É–∫, –Ω–∞ —Ç–µ–±—è –¥—ã—Ö–Ω—É–ª–æ –æ–±–ª–∞—á–∫–æ –ø—ã–ª–∏... –†–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–π. –£–≤—ã, —Ä–∞–¥–∏–∞—Ü–∏—è —Ä–∞–∑—ä–µ–ª–∞ —Ç–æ —á—Ç–æ –Ω–∞—Ö–æ–¥–∏–ª–æ—Å—å –≤–Ω—É—Ç—Ä–∏ —Ä—é–∫–∑–∞–∫–∞\n\n- {}‚ù§Ô∏è".format(newHp)
            await db.Users.filter(id=user.id).update(nowhp=newHp)
        else:
            rand = random.randint(1, 100)
            if rand >= 80:
                randomItems = ['–ü–∞–ª–∫–∞-–∫–æ–ø–∞–ª–∫–∞', '–ö–∞–º–µ–Ω—å –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω—ã–π', '–ö—É—Å–æ–∫ –º–µ—Ç–∞–ª–ª–æ–ª–æ–º–∞', '–ê–π—Ä–∏—Å', '–ö–∞–º–µ–Ω–Ω—ã–π —Ü–≤–µ—Ç–æ–∫', '–°–∏—Ç–µ–Ω–∫–∞', '–ö–∞–º–µ–Ω—å –ê–Ω–¥—Ä–∏–∫–æ–ª—å']
                item = random.choice(randomItems)
                randomLvl = random.randint(1, 4)
                success = await db.addArt(item, user, randomLvl)
                if success:
                    text = "–û—Ç–∫—Ä—ã–≤ —Å—Ö—Ä–æ–Ω —Å –ø–æ–º–æ—â—å—é —Ç–∞–Ω—Ü–µ–≤ —Å –±—É–±–Ω–æ–º –∏ –ª—é–±–∏–º–æ–π —Ä–∞–±–æ—Ç—ã –º–æ–ª–æ—Ç–∫–æ–º, –≤–Ω—É—Ç—Ä–∏ —Ç—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª {} {} —É—Ä–æ–≤–Ω—è.".format(item, randomLvl)
                else:
                    newHp = int(user.nowhp / 2)
                    text = "–û—Ç–∫—Ä—ã–≤ —Å—É–Ω–¥—É–∫, –Ω–∞ —Ç–µ–±—è –¥—ã—Ö–Ω—É–ª–æ –æ–±–ª–∞—á–∫–æ –ø—ã–ª–∏... –†–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–π. –£–≤—ã, —Ä–∞–¥–∏–∞—Ü–∏—è —Ä–∞–∑—ä–µ–ª–∞ —Ç–æ —á—Ç–æ –Ω–∞—Ö–æ–¥–∏–ª–æ—Å—å –≤–Ω—É—Ç—Ä–∏ —Ä—é–∫–∑–∞–∫–∞\n\n- {}‚ù§Ô∏è".format(newHp)
                    await db.Users.filter(id=user.id).update(nowhp=newHp)
            else:
                success = await db.addItem('–î–µ—Ç–µ–∫—Ç–æ—Ä –∞–Ω–æ–º–∞–ª–∏–π', user)
                if success == True:
                    text = "–û—Ç–∫—Ä—ã–≤ —Å—Ö—Ä–æ–Ω —Å –ø–æ–º–æ—â—å—é —Ç–∞–Ω—Ü–µ–≤ —Å –±—É–±–Ω–æ–º –∏ –ª—é–±–∏–º–æ–π —Ä–∞–±–æ—Ç—ã –º–æ–ª–æ—Ç–∫–æ–º, –≤–Ω—É—Ç—Ä–∏ —Ç—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª –¥–µ—Ç–µ–∫—Ç–æ—Ä –∞–Ω–æ–º–∞–ª–∏–π."
                else:
                    newHp = int(user.nowhp / 2)
                    text = "–û—Ç–∫—Ä—ã–≤ —Å—É–Ω–¥—É–∫, –Ω–∞ —Ç–µ–±—è –¥—ã—Ö–Ω—É–ª–æ –æ–±–ª–∞—á–∫–æ –ø—ã–ª–∏... –†–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–π. –£–≤—ã, —Ä–∞–¥–∏–∞—Ü–∏—è —Ä–∞–∑—ä–µ–ª–∞ —Ç–æ —á—Ç–æ –Ω–∞—Ö–æ–¥–∏–ª–æ—Å—å –≤–Ω—É—Ç—Ä–∏ —Ä—é–∫–∑–∞–∫–∞\n\n- {}‚ù§Ô∏è".format(newHp)
                    await db.Users.filter(id=user.id).update(nowhp=newHp)
        return text
    item.active = 0
    await item.save()
    if rand <= 15:
        winnerItem = random.choice(armorset)
    elif rand > 15 and rand <= 30:
        winnerItem = random.choice(eat)
    elif rand > 30 and rand <= 40:
        winnerItem = last
    else:
        winnerItem = '–ù–∏—á–µ–≥–æ'
    user = await db.Users.get(id=item.idplayer)
    text = "–ü—Ä–∏–º–µ–Ω–∏–≤ —Å–∞–º—ã–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏—Å–ø–æ—Å–æ–±–ª–µ–Ω–∏—è –ø–æ –≤—Å–∫—Ä—ã—Ç–∏—é —ç—Ç–∏—Ö —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å—É–Ω–¥—É–∫–æ–≤, —Ç—ã –Ω–∞–∫–æ–Ω–µ—Ü —Ä–∞—Å–ø–∞—Ö–Ω—É–ª —ç—Ç–æ—Ç –∫–µ–π—Å. –¢–æ—á–Ω–µ–µ, —Ç–æ —á—Ç–æ –æ—Ç –Ω–µ–≥–æ –æ—Å—Ç–∞–ª–æ—Å—å –ø–æ—Å–ª–µ –º–æ–Ω–æ—Ç–æ–Ω–Ω–æ–≥–æ –±–∏—Ç—å—è –º–æ–ª–æ—Ç–∫–æ–º."
    if winnerItem != '–ù–∏—á–µ–≥–æ':
        success = await db.addItem(winnerItem, user)
        if success == False:
            item.active = 1
            await item.save()
            text = "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ. –û—Ç–∫—Ä—ã—Ç—å —Å—É–Ω–¥—É–∫ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è."
            return text
        name, size, bonus, atk_block, expires = await db.items(winnerItem, check=True)
        text += "\n–í–Ω—É—Ç—Ä–∏ —Å—É–Ω–¥—É–∫–∞ —Ç—ã –Ω–∞—à—ë–ª {}".format(name)
    else:
        await db.addItem('–û—Å—Ç–∞–Ω–∫–∏ –≥–µ—Ä–æ–µ–≤', user, arg='1')
        text += "\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–Ω—É—Ç—Ä–∏ —Ç—ã –Ω–∏—á–µ–≥–æ, –ø–æ–ª–µ–∑–Ω–æ–≥–æ –¥–ª—è —Å–µ–±—è, –Ω–µ –æ–±–Ω–∞—Ä—É–∂–∏–ª... –ï—Å–ª–∏ —Ç–µ–±–µ –Ω–µ –Ω—É–∂–Ω—ã, –∫–æ–Ω–µ—á–Ω–æ, –æ—Å—Ç–∞–Ω–∫–∏ –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö ''–≥–µ—Ä–æ–µ–≤'', —á—Ç–æ –ø–æ—à–ª–∏ –Ω–∞ —Å–≤–∞–ª–∫—É."
    await achprog(user, ach='cases')
    return text






async def extraCase(call, idp): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    do = call.data.split('_')
    use = do[1]
    checkdonate = await db.Inventory.exists(name='–ê–º—Ñ–æ—Ä–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ø–æ–º–æ—â–∏', active=1, idplayer=idp.id)
    if checkdonate:
        checkdonate = await db.Inventory.get(name='–ê–º—Ñ–æ—Ä–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ø–æ–º–æ—â–∏', active=1, idplayer=idp.id).first()
        if use == 'tp':
            success = await db.addItem('–°–≤–∏—Ç–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏', idp, arg='1')
        elif use == 'heal':
            success = await db.addItem('–ó–µ–ª—å–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è', idp, arg='1')
        elif use == 'eat':
            success = await db.addItem('–õ—É—á—à–µ –Ω–µ —Å–ø—Ä–∞—à–∏–≤–∞–π', idp, arg='1')
        if success == True:
            text = "–¢—ã —Å–¥–µ–ª–∞–ª —Å–≤–æ–π –≤—ã–±–æ—Ä\n_–î–∂–∏–Ω –ø–æ—Å–ª—É—à–Ω–æ –∏—Å–ø–æ–ª–Ω–∏–ª —Ç–≤–æ—é –ø—Ä–æ—Å—å–±—É, –∞ –∑–∞—Ç–µ–º —Ä–∞—Å—Å—Ç–∞—è–ª –≤ –≤–æ–∑–¥—É—Ö–µ –≤–º–µ—Å—Ç–µ —Å –∞–º—Ñ–æ—Ä–æ–π. –†—é–∫–∑–∞–∫ –ø–æ—Ç—è–∂–µ–ª–µ–ª_"
            await db.Inventory.filter(id=checkdonate.id).update(active=0)
        else:
            text = "–î–ª—è –Ω–∞—á–∞–ª–∞, —Ç–µ–±–µ —Å—Ç–æ–∏—Ç –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å. –ü–æ—Å–ª–µ –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å —Å–Ω–æ–≤–∞"
            markup = InlineKeyboardMarkup()
            markup.row_width = 2
            markup.add(InlineKeyboardButton('–ï–¥–∞', callback_data="extraCase_eat"))
            markup.add(InlineKeyboardButton('–ó–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è', callback_data="extraCase_heal"))
            markup.add(InlineKeyboardButton('–°–≤–∏—Ç–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏', callback_data="extraCase_tp"))
            await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
            return
    else:
        text = "–£ –≤–∞—Å —É–∂–µ –Ω–µ—Ç –∞–º—Ñ–æ—Ä—ã"
    await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, parse_mode='markdown')


async def opendonatecase(user): 
    items = ['üö•', 'üëò', 'üî∂', 'üî•', 'üß©', 'üëò', 'üî∂', 'üß©', 'üü¶', 'üüß']
    firstItem = '‚ûñ'
    secondItem = '‚ûñ'
    thirdItem = '‚ûñ'
    text = "###########\n"
    text += "# [{}{}{}] #".format(firstItem, secondItem, thirdItem)
    text += "\n###########"
    gg = await bot.send_message(user.user_id, text)
    await asyncio.sleep(0.2)
    items = ['üö•', 'üëò', 'üî∂', 'üî•', 'üß©', 'üëò', 'üî∂', 'üß©', 'üü¶', 'üüß']
    firstItem = '‚ûñ'
    secondItem = '‚ûñ'
    thirdItem = random.choice(items)
    text = "###########\n"
    text += "# [{}{}{}] #".format(firstItem, secondItem, thirdItem)
    text += "\n###########"
    gg = await bot.edit_message_text(text, user.user_id, gg.message_id)
    await asyncio.sleep(0.4)
    items = ['üö•', 'üëò', 'üî∂', 'üî•', 'üß©', 'üëò', 'üî∂', 'üß©', 'üü¶', 'üüß']
    secondItem = thirdItem
    thirdItem = random.choice(items)
    text = "###########\n"
    text += "# [{}{}{}] #".format(firstItem, secondItem, thirdItem)
    text += "\n###########"
    try:
        gg = await bot.edit_message_text(text, user.user_id, gg.message_id)
    except:
        pass
    await asyncio.sleep(0.6)
    items = ['üö•', 'üëò', 'üî∂', 'üî•', 'üß©', 'üî∂', 'üß©', 'üü¶', 'üüß']
    firstItem = secondItem
    secondItem = thirdItem
    thirdItem = random.choice(items)
    text = "###########\n"
    text += "# [{}{}{}] #".format(firstItem, secondItem, thirdItem)
    text += "\n###########"
    try:
        gg = await bot.edit_message_text(text, user.user_id, gg.message_id)
    except:
        pass
    await asyncio.sleep(0.8)
    items = ['üëò', 'üî∂', 'üî•', 'üß©', 'üî∂', 'üß©', 'üü¶', 'üüß']
    firstItem = secondItem
    secondItem = thirdItem
    thirdItem = random.choice(items)
    text = "###########\n"
    text += "# [{}{}{}] #".format(firstItem, secondItem, thirdItem)
    text += "\n###########"
    try:
        gg = await bot.edit_message_text(text, user.user_id, gg.message_id)
    except:
        pass
    await asyncio.sleep(1)
    items = ['üëò', 'üî∂', 'üî•', 'üß©', 'üî∂', 'üß©', 'üü¶', 'üüß']
    firstItem = secondItem
    secondItem = thirdItem
    thirdItem = random.choice(items)
    text = "###########\n"
    text += "# [{}{}{}] #".format(firstItem, secondItem, thirdItem)
    text += "\n###########"
    try:
        gg = await bot.edit_message_text(text, user.user_id, gg.message_id)
    except:
        pass
    await asyncio.sleep(1.5)
    items = ['üëò', 'üî∂', 'üî•', 'üß©', 'üî∂', 'üß©', 'üü¶', 'üüß']
    firstItem = secondItem
    secondItem = thirdItem
    thirdItem = random.choice(items)
    text = "###########\n"
    text += "# [{}{}{}] #".format(firstItem, secondItem, thirdItem)
    text += "\n###########"
    try:
        gg = await bot.edit_message_text(text, user.user_id, gg.message_id)
    except:
        pass
    if secondItem == 'üî•':
        newItem = await db.Inventory(name='–û—Å–∫–æ–ª–æ–∫ –æ–≥–Ω—è', active=1, size=1, idplayer=user.id, type='–ê—Ä—Ç–µ—Ñ–∞–∫—Ç')
        await newItem.save()
        await bot.send_message(user.user_id, "–í–Ω—É—Ç—Ä–∏ –≤—ã –Ω–∞—à–ª–∏ üî•–û—Å–∫–æ–ª–æ–∫ –æ–≥–Ω—è!")
        await bot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –¥–æ—Å—Ç–∞–ª –∏–∑ üì¶–ö–æ—Ä–æ–±–∫–∏ —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º üî•–û—Å–∫–æ–ª–æ–∫ –æ–≥–Ω—è".format(user.username))
    elif secondItem == 'üö•':
        newItem = await db.Inventory(name='–ê–Ω—Ç–∏-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ë–ú', active=1, size=1, idplayer=user.id, type='–ê—Ä—Ç–µ—Ñ–∞–∫—Ç')
        await newItem.save()
        await bot.send_message(user.user_id, "–í–Ω—É—Ç—Ä–∏ –≤—ã –Ω–∞—à–ª–∏ üö•–ê–Ω—Ç–∏-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ë–ú!")
        await bot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –¥–æ—Å—Ç–∞–ª –∏–∑ üì¶–ö–æ—Ä–æ–±–∫–∏ —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º üö•–ê–Ω—Ç–∏-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ë–ú".format(user.username))
    elif secondItem == 'üëò':
        newItem = await db.Inventory(name='–ü–ª–∞—â-–Ω–µ–≤–∏–¥–∏–º–∫–∞', active=1, size=1, idplayer=user.id, type='–ê—Ä—Ç–µ—Ñ–∞–∫—Ç')
        await newItem.save()
        await bot.send_message(user.user_id, "–í–Ω—É—Ç—Ä–∏ –≤—ã –Ω–∞—à–ª–∏ üëò–ü–ª–∞—â-–Ω–µ–≤–∏–¥–∏–º–∫–∞!")
        await bot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –¥–æ—Å—Ç–∞–ª –∏–∑ üì¶–ö–æ—Ä–æ–±–∫–∏ —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º üëò–ü–ª–∞—â-–Ω–µ–≤–∏–¥–∏–º–∫—É".format(user.username))
    elif secondItem == 'üî∑':
        newItem = await db.Inventory(name='–û—Å–∫–æ–ª–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏', active=1, size=1, idplayer=user.id, type='–ê—Ä—Ç–µ—Ñ–∞–∫—Ç')
        await newItem.save()
        await bot.send_message(user.user_id, "–í–Ω—É—Ç—Ä–∏ –≤—ã –Ω–∞—à–ª–∏ üî∑–û—Å–∫–æ–ª–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏!")
        await bot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –¥–æ—Å—Ç–∞–ª –∏–∑ üì¶–ö–æ—Ä–æ–±–∫–∏ —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º üî∑–û—Å–∫–æ–ª–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏".format(user.username))
    elif secondItem == 'üî∂':
        newItem = await db.Inventory(name='–ê–º—É–ª–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è', active=1, size=1, idplayer=user.id, type='–ê—Ä—Ç–µ—Ñ–∞–∫—Ç')
        await newItem.save()
        await bot.send_message(user.user_id, "–í–Ω—É—Ç—Ä–∏ –≤—ã –Ω–∞—à–ª–∏ üî∂–ê–º—É–ª–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è")
        await bot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –¥–æ—Å—Ç–∞–ª –∏–∑ üì¶–ö–æ—Ä–æ–±–∫–∏ —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º üî∂–ê–º—É–ª–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è".format(user.username))
    elif secondItem == 'üß©':
        newItem = await db.Inventory(name='–ö—É—Å–æ–∫ –ø–∞–∑–∑–ª–∞', active=1, size=0, idplayer=user.id, type='–ê—Ä—Ç–µ—Ñ–∞–∫—Ç')
        await newItem.save()
        await bot.send_message(user.user_id, '–í–Ω—É—Ç—Ä–∏ –≤—ã –Ω–∞—à–ª–∏ üß©–ö—É—Å–æ–∫ –ø–∞–∑–∑–ª–∞!')
        await bot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –¥–æ—Å—Ç–∞–ª –∏–∑ üì¶–ö–æ—Ä–æ–±–∫–∏ —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º üß©–ö—É—Å–æ–∫ –ø–∞–∑–∑–ª–∞".format(user.username))
    elif secondItem == 'üü¶':
        newItem = await db.Inventory(name='–û—Å–∫–æ–ª–æ–∫ –ª—å–¥–∞', active=1, size=1, idplayer=user.id, type='–ê—Ä—Ç–µ—Ñ–∞–∫—Ç')
        await newItem.save()
        await bot.send_message(user.user_id, "–í–Ω—É—Ç—Ä–∏ –≤—ã –Ω–∞—à–ª–∏ üü¶–û—Å–∫–æ–ª–æ–∫ –ª—å–¥–∞!")
        await bot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –¥–æ—Å—Ç–∞–ª –∏–∑ üì¶–ö–æ—Ä–æ–±–∫–∏ —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º üü¶–û—Å–∫–æ–ª–æ–∫ –ª—å–¥–∞".format(user.username))
    elif secondItem == 'üüß':
        newItem = await db.Inventory(name='–û—Å–∫–æ–ª–æ–∫ —ç—Ñ–∏—Ä–∞', active=1, size=1, idplayer=user.id, type='–ê—Ä—Ç–µ—Ñ–∞–∫—Ç')
        await newItem.save()
        await bot.send_message(user.user_id, "–í–Ω—É—Ç—Ä–∏ –≤—ã –Ω–∞—à–ª–∏ üüß–û—Å–∫–æ–ª–æ–∫ —ç—Ñ–∏—Ä–∞!")
        await bot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –¥–æ—Å—Ç–∞–ª –∏–∑ üì¶–ö–æ—Ä–æ–±–∫–∏ —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º üüß–û—Å–∫–æ–ª–æ–∫ —ç—Ñ–∏—Ä–∞".format(user.username))



async def opendonatecaseRecipy(user):
    items = ['–†–µ—Ü–µ–ø—Ç –≥–µ—Ä–æ–ò–Ω', '–†–µ—Ü–µ–ø—Ç –±–∞–º–±—É–∫', '–†–µ—Ü–µ–ø—Ç –±–æ—è—Ä—ã—à–Ω–∏–∫', '–†–µ—Ü–µ–ø—Ç –í–∏–ê–≥—Ä–æ', '–†–µ—Ü–µ–ø—Ç –ø–∞—É—á–∏–π –∞—Ñ—Ä–æ–¥–∏–∑–∏–∞–∫', '–†–µ—Ü–µ–ø—Ç –±–∞–∫–∏–Ω']
    rand = random.choice(items)
    checkRecipy = await db.Inventory.exists(name=rand, idplayer=user.id)
    if checkRecipy: newItem = await db.Inventory(name=rand, active=1, size=0, idplayer=user.id, type='–†–µ—Ü–µ–ø—Ç')
    else: newItem = await db.Inventory(name=rand, active=1, size=0, idplayer=user.id, type='–†–µ—Ü–µ–ø—Ç')
    await newItem.save()
    await bot.send_message(user.user_id, "–í–Ω—É—Ç—Ä–∏ –≤—ã –Ω–∞—à–ª–∏ üìú{}".format(rand))
    await bot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –¥–æ—Å—Ç–∞–ª –∏–∑ üì¶–ö–æ—Ä–æ–±–∫–∏ —Å —Ä–µ—Ü–µ–ø—Ç–æ–º {}".format(user.username, rand))

legendaryCaseActive = 0
legendaryCaseKvadrats = {}
legendaryCaseKvadratsOpened = []
legendaryCaseClosed = {'1': '1Ô∏è‚É£', '2': '2Ô∏è‚É£', '3': '3Ô∏è‚É£', '4': '4Ô∏è‚É£', '5': '5Ô∏è‚É£', '6': '6Ô∏è‚É£', '7': '7Ô∏è‚É£', '8': '8Ô∏è‚É£', '9': '9Ô∏è‚É£'}
async def legendaryCase(user, item):
    global legendaryCaseActive
    global legendaryCaseKvadrats
    global legendaryCaseKvadratsOpened
    if legendaryCaseActive == 0:
        legendaryCaseActive = 1
        legendaryCaseKvadrats = {}
        legendaryCaseKvadratsOpened = []
        item.active = 0
    else:
        await bot.send_message(user.user_id, "–°–µ–π—á–∞—Å –∫—Ç–æ-—Ç–æ —É–∂–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –∫–æ—Ä–æ–±–∫—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        return
    await bot.send_message(user.user_id, "–ü—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ—Å—Ç—ã - –Ω—É–∂–Ω–æ —É–≥–∞–¥–∞—Ç—å 2 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–∞ —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ. –£ –≤–∞—Å –µ—Å—Ç—å —Ç—Ä–∏ —Ö–æ–¥–∞.")
    items = ['üî∑', 'üçØ', 'üåø']
    drops = {'üî∑': 0, 'üçØ': 0, 'üåø': 0}
    one = random.choice(items)
    drops[one] += 1
    two = random.choice(items)
    drops[two] += 1
    three = random.choice(items)
    drops[three] += 1
    if drops[three] >= 3 and three in items: items.remove(three)
    if drops[three] >= 3 and three in items: items.remove(three)
    if drops[three] >= 3 and three in items: items.remove(three)
    four = random.choice(items)
    drops[four] += 1
    if drops[four] >= 3 and four in items: items.remove(four)
    if drops[four] >= 3 and four in items: items.remove(four)
    if drops[four] >= 3 and four in items: items.remove(four)
    five = random.choice(items)
    drops[five] += 1
    if drops[five] >= 3 and five in items: items.remove(five)
    if drops[five] >= 3 and five in items: items.remove(five)
    if drops[five] >= 3 and five in items: items.remove(five)
    six = random.choice(items)
    drops[six] += 1
    if drops[six] >= 3 and six in items: items.remove(six)
    if drops[six] >= 3 and six in items: items.remove(six)
    if drops[six] >= 3 and six in items: items.remove(six)
    seven = random.choice(items)
    drops[seven] += 1
    if drops[seven] >= 3 and seven in items: items.remove(seven)
    if drops[seven] >= 3 and seven in items: items.remove(seven)
    if drops[seven] >= 3 and seven in items: items.remove(seven)
    eight = random.choice(items)
    drops[eight] += 1
    if drops[eight] >= 3 and eight in items: items.remove(eight)
    if drops[eight] >= 3 and eight in items: items.remove(eight)
    if drops[eight] >= 3 and eight in items: items.remove(eight)
    nine = random.choice(items)
    drops[nine] += 1
    karty = "" + one + two + three + "\n" + four + five + six + "\n" + seven + eight + nine
    legendaryCaseKvadrats['1'] = str(one)
    legendaryCaseKvadrats['2'] = str(two)
    legendaryCaseKvadrats['3'] = str(three)
    legendaryCaseKvadrats['4'] = str(four)
    legendaryCaseKvadrats['5'] = str(five)
    legendaryCaseKvadrats['6'] = str(six)
    legendaryCaseKvadrats['7'] = str(seven)
    legendaryCaseKvadrats['8'] = str(eight)
    legendaryCaseKvadrats['9'] = str(nine)
    text = "1Ô∏è‚É£ 2Ô∏è‚É£ 3Ô∏è‚É£\n4Ô∏è‚É£ 5Ô∏è‚É£ 6Ô∏è‚É£\n7Ô∏è‚É£ 8Ô∏è‚É£ 9Ô∏è‚É£"
    markup = InlineKeyboardMarkup()
    markup.row_width = 3
    markup.add(InlineKeyboardButton('1', callback_data="donateKartochki_1"))
    markup.add(InlineKeyboardButton('2', callback_data="donateKartochki_2"))
    markup.add(InlineKeyboardButton('3', callback_data="donateKartochki_3"))
    markup.add(InlineKeyboardButton('4', callback_data="donateKartochki_4"))
    markup.add(InlineKeyboardButton('5', callback_data="donateKartochki_5"))
    markup.add(InlineKeyboardButton('6', callback_data="donateKartochki_6"))
    markup.add(InlineKeyboardButton('7', callback_data="donateKartochki_7"))
    markup.add(InlineKeyboardButton('8', callback_data="donateKartochki_8"))
    markup.add(InlineKeyboardButton('9', callback_data="donateKartochki_9"))
    await bot.send_message(user.user_id, text, reply_markup=markup)
    return item


async def donateKartochki(call, idp): 
    do = call.data.split('_')
    use = do[1]
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    global legendaryCaseKvadrats
    global legendaryCaseKvadratsOpened
    global legendaryCaseClosed
    global legendaryCaseActive
    if use in legendaryCaseKvadratsOpened:
        return
    else:
        legendaryCaseKvadratsOpened.append(use)
        await bot.delete_message(call.message.chat.id, call.message.message_id)
    drops = {'üî∑': '–ö–∞–º–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏', 'üçØ': '–ì–æ—Ä—à–æ–∫ –ª–µ–ø—Ä–µ–∫–æ–Ω–∞', 'üåø': '–ö–∞—Ä–º–∞–Ω–Ω–∞—è –¥—Ä–∏–∞–¥–∞'}
    count = 0
    for z in legendaryCaseKvadratsOpened:
        count += 1
    if count == 3:
        _count = 0
        for z in legendaryCaseKvadratsOpened:
            _count += 1 #legendaryCaseKvadrats
            if _count == 1: # 'üî∑', 'üçØ', 'üåø'
                if legendaryCaseKvadrats[z] == 'üî∑': one = '–ö–∞–º–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏'
                elif legendaryCaseKvadrats[z] == 'üçØ': one = '–ì–æ—Ä—à–æ–∫ –ª–µ–ø—Ä–µ–∫–æ–Ω–∞'
                elif legendaryCaseKvadrats[z] == 'üåø': one = '–ö–∞—Ä–º–∞–Ω–Ω–∞—è –¥—Ä–∏–∞–¥–∞'
            if _count == 2:
                if legendaryCaseKvadrats[z] == 'üî∑': two = '–ö–∞–º–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏'
                elif legendaryCaseKvadrats[z] == 'üçØ': two = '–ì–æ—Ä—à–æ–∫ –ª–µ–ø—Ä–µ–∫–æ–Ω–∞'
                elif legendaryCaseKvadrats[z] == 'üåø': two = '–ö–∞—Ä–º–∞–Ω–Ω–∞—è –¥—Ä–∏–∞–¥–∞'
            if _count == 3:
                legendaryCaseActive = 0
                if legendaryCaseKvadrats[z] == 'üî∑': three = '–ö–∞–º–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏'
                elif legendaryCaseKvadrats[z] == 'üçØ': three = '–ì–æ—Ä—à–æ–∫ –ª–µ–ø—Ä–µ–∫–æ–Ω–∞'
                elif legendaryCaseKvadrats[z] == 'üåø': three = '–ö–∞—Ä–º–∞–Ω–Ω–∞—è –¥—Ä–∏–∞–¥–∞'
                if one == two or one == three or two == three:
                    if one == two:
                        success = await db.addItem(one, idp, arg='go')
                        winner = one
                    elif two == three:
                        success = await db.addItem(two, idp, arg='go')
                        winner = two
                    elif one == three:
                        success = await db.addItem(one, idp, arg='go')
                        winner = one
                    await bot.send_message(call.message.chat.id, "–¢—ã –≤—ã–∏–≥—Ä–∞–ª {}!".format(winner))
                    resultText = "–ö–∞–∫ –≤—Å—ë –±—ã–ª–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ:\n\n\n"
                    ___count = 0
                    for x in legendaryCaseKvadrats:
                        ___count += 1
                        if ___count == 4 or ___count == 7:
                            resultText += "\n{}".format(legendaryCaseKvadrats[x])
                        else:
                            resultText += "{}".format(legendaryCaseKvadrats[x])
                    await bot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –≤—ã–∏–≥—Ä–∞–ª {}\n{}".format(idp.username, winner, resultText))
                else:
                    ___count = 0
                    await bot.send_message(call.message.chat.id, "–¢—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª. –í –∫–∞—á–µ—Å—Ç–≤–µ —É—Ç–µ—à–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–∏–∑–∞ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å üì¶–ö–æ—Ä–æ–±–∫—É —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º")
                    await opendonatecase(idp)
                    resultText = "–ö–∞–∫ –≤—Å—ë –±—ã–ª–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ:\n\n\n"
                    for x in legendaryCaseKvadrats:
                        ___count += 1
                        if ___count == 4 or ___count == 7:
                            resultText += "\n{}".format(legendaryCaseKvadrats[x])
                        else:
                            resultText += "{}".format(legendaryCaseKvadrats[x])
                    await bot.send_message(call.message.chat.id, resultText)
                    await bot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {}\n{}".format(idp.username, resultText))
                return
    else:
        ___count = 0
        text = ""
        for z in legendaryCaseKvadrats:
            ___count += 1
            if z in legendaryCaseKvadratsOpened:
                if ___count == 4 or ___count == 7:
                    text += "\n{}".format(legendaryCaseKvadrats[z])
                else:
                    text += "{}".format(legendaryCaseKvadrats[z])
            else:
                if ___count == 4 or ___count == 7:
                    text += "\n{}".format(legendaryCaseClosed[str(___count)])
                else:
                    text += "{}".format(legendaryCaseClosed[str(___count)])
        markup = InlineKeyboardMarkup()
        markup.row_width = 3
        ____count = 0
        for i in range(0, 9):
            ____count += 1
            if ____count in legendaryCaseKvadratsOpened:
                pass
            else:
                markup.add(InlineKeyboardButton('{}'.format(____count), callback_data="donateKartochki_{}".format(____count)))
        await bot.send_message(call.message.chat.id, "{}\n\n–í—ã–±–∏—Ä–∞–π –µ—â–µ".format(text), reply_markup=markup)
