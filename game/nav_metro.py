async def nav_metro(call, user): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    nav = call.data.split('_')
    navWhere = nav[2]
    if navWhere == "onsen":
        checkFrak = await db.Fraks.exists(name=user.frak)
        if checkFrak:
            await bot.edit_message_text("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤–∞–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∏–º–∏ –Ω–∞ –±–∞–∑–µ –∫–ª–∞–Ω–∞.", call.message.chat.id, call.message.message_id)
            return
        newPos = "–ò—Å—Ç–æ—á–Ω–∏–∫–∏"
        if (str(user.location) == "–ú–µ—Ç—Ä–æ") and (int(user.hp) > int(user.nowhp)) and (str(user.position) != newPos):
            user.position = newPos
            await user.save()
            text = "_–ù—É —Ç–µ–ø–µ—Ä—å —Ç–æ —è —Ç–æ—á–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É –≤ –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö —Å –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–º–∏ –¥–µ–≤—É—à–∫–∞–º–∏! –ù–µ –∑—Ä—è –∂–µ —è –∏—Å—Ç–æ–ø—Ç–∞–ª –≤—Å—é —Å—Ä–∞–Ω—É—é –ø—É—Å—Ç—ã–Ω—é –∏ –ø–æ—Ç–µ—Ä—è–ª —Å—Ç–æ–ª—å–∫–æ –∑–æ–ª–æ—Ç–∞._\n\n\n–ê –ø–æ—Ç–æ–º —Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª —Ñ–∞–Ω—Ç–∞–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –≤–æ—à—ë–ª –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é, —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã—Ö, –≥–æ—Ä—è—á–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.\n\n–ù–∏—á–µ–≥–æ –Ω–µ–æ–±—ã—á–Ω–æ–≥–æ, –∫—É—á–∞ –≤–∞–Ω–Ω —Å–æ–µ–¥–∏–Ω—ë–Ω–Ω—ã—Ö –º–µ–∂–¥—É —Å–æ–±–æ–π –ø—Ä–æ—Ç–µ–∫–∞—é—â–∏–º —Ç—Ä—É–±–∞–º–∏, –ø–æ –∫–æ—Ç–æ—Ä—ã–º —Ç–µ—á—ë—Ç –≤–æ–¥–∞."
        elif str(user.location) != "–ú–µ—Ç—Ä–æ":
            text = "–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤–Ω–µ –≥–æ—Ä–æ–¥–∞."
        elif int(user.hp) <= int(user.nowhp):
            text = "_–ü–æ—Å–ª—É—à–∞–π... –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω—É–∂–Ω—ã –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏—Å—Ü–µ–ª—è—Ç—å—Å—è, –∞ –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å—é–¥–∞ –∫–∞–∂–¥—ã–π —Ä–∞–∑ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±–∞–±—É –æ—Ö–æ—Ç–∞!_"
        elif str(user.position) == newPos:
            text = "–¢—ã –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è *CENSORED*\n–ò—Å—Ü–µ–ª–µ–Ω–∏–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ, –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å"
        else:
            text = "–û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—è. Location {} \n Hp/nowhp {}/{}\n nowPos/newPos {}/{}\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å —Å —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤ /report".format(str(user.location), str(user.nowhp), str(user.hp), str(user.position), str(newPos))
        await bot.send_message(call.message.chat.id, text, parse_mode='markdown')
        await bot.delete_message(call.message.chat.id, call.message.message_id)
    elif navWhere == "hotel":
        checkFrak = await db.Fraks.exists(name=user.frak)
        if checkFrak:
            await bot.edit_message_text("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –æ—Ç–µ–ª—å –≤–∞–º –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –Ω–æ—á–ª–µ–≥–æ–º –Ω–∞ –±–∞–∑–µ –∫–ª–∞–Ω–∞.", call.message.chat.id, call.message.message_id)
            return
        newPos = "–û—Ç–µ–ª—å"
        if (str(user.location) == "–ú–µ—Ç—Ä–æ") and (str(user.position) != newPos):
            user.position = newPos
            await user.save()
            markup = InlineKeyboardMarkup()
            markup.row_width = 2
            priceHotel = int(user.lvl * 2)
            priceHotelMin = int(user.lvl / 2)
            markup.add(InlineKeyboardButton('–û—Ç–¥—ã—Ö–∞—Ç—å –≤ –ø—Ä–µ–º–∏—É–º-–Ω–æ–º–µ—Ä–µ - üí∞{}'.format(priceHotel), callback_data="hotel_premium"))
            markup.add(InlineKeyboardButton('–û—Ç–¥—ã—Ö–∞—Ç—å –≤ —ç–∫–æ–Ω–æ–º-–Ω–æ–º–µ—Ä–µ - üí∞{}'.format(priceHotelMin), callback_data="hotel_start"))
            markup.add(InlineKeyboardButton('–£–π—Ç–∏', callback_data="hotel_return"))
            text = '_¬´–û—Ç–µ–ª—å¬ª –æ–Ω –∂–µ –±—ã–≤—à–∏–π –±–æ—Ä–¥–µ–ª—å, –∑–∞–∫—Ä—ã—Ç—ã–π –∏–∑-–∑–∞ –Ω–µ—Ö–≤–∞—Ç–∫–∏ —Ä–∞–±–æ—Ç–Ω–∏—Ü, –∫–æ–Ω–µ—á–Ω–æ, –≤—ã–≥–ª—è–¥–∏—Ç –ª—É—á—à–µ –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ —Ä–µ–º–æ–Ω—Ç–∞, –æ–¥–Ω–∞–∫–æ  –∑–∞–ø–∞—Ö –µ–≥–æ –ø—Ä–æ—à–ª–æ–π –∂–∏–∑–Ω–∏ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –∑–¥–µ—Å—å –µ—â—ë –Ω–∞–¥–æ–ª–≥–æ_'
            await bot.send_message(call.message.chat.id, text, reply_markup=markup, parse_mode='markdown')
            await bot.delete_message(call.message.chat.id, call.message.message_id)
            return
        elif str(user.location) != "–ú–µ—Ç—Ä–æ":
            text = "–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤–Ω–µ –≥–æ—Ä–æ–¥–∞."
        elif str(user.position) == newPos:
            text = "–¢—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –æ—Ç–µ–ª–µ."
        else:
            text = "–û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—è. \nLocation {}\n nowPos/newPos {}/{}\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å —Å —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ —Å–∫—Ä–∏–Ω–æ–º –ø—Ä–æ—Ñ–∏–ª—è –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É @ifellow".format(str(user.location), str(user.position), str(newPos))
        await bot.send_message(call.message.chat.id, text)
        await bot.delete_message(call.message.chat.id, call.message.message_id)
    elif navWhere == "shop":
        newPos = "–ú–∞–≥–∞–∑–∏–Ω"
        if (str(user.location) == "–ú–µ—Ç—Ä–æ") and (str(user.position) != newPos):
            user.position = newPos
            await user.save()
            await goToShop(call)
        elif str(user.location) != "–ú–µ—Ç—Ä–æ":
            text = "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞"
            await bot.send_message(call.message.chat.id, text)
            await bot.delete_message(call.message.chat.id, call.message.message_id)
        elif str(user.position) == newPos:
            text = "–¢—ã —É–∂–µ –≤ –º–∞–≥–∞–∑–∏–Ω–µ."
            await bot.send_message(call.message.chat.id, text, parse_mode='markdown')
            await bot.delete_message(call.message.chat.id, call.message.message_id)
            await goToShop(call)
    elif navWhere == "centr":
        newPos = "–ü–ª–æ—â–∞–¥—å"
        if user.location == "–ú–µ—Ç—Ä–æ":
            pass
        else:
            text = "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞."
            await bot.send_message(call.message.chat.id, text)
            await bot.delete_message(call.message.chat.id, call.message.message_id)
            return
        newPos = "–ü–ª–æ—â–∞–¥—å"
        user.position = newPos
        await user.save()
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(InlineKeyboardButton('üèã‚Äç‚ôÇ–ö–∞—á–∞–ª–∫–∞', callback_data="nav_metro_kachalka"))
        markup.add(InlineKeyboardButton('‚õ≤Ô∏è–ò—Å—Ç–æ—á–Ω–∏–∫–∏', callback_data="nav_metro_onsen"), InlineKeyboardButton('üë¥–°–∏–¥–æ—Ä–æ–≤–∏—á', callback_data="nav_metro_sidor"))
        markup.add(InlineKeyboardButton('üè´–û—Ç–µ–ª—å', callback_data="nav_metro_hotel"), InlineKeyboardButton('üë©‚Äçüíº–†–∞—Å–∫—É–ª–æ–≤–∞', callback_data="nav_metro_raskul"))
        markup.add(InlineKeyboardButton('üèú–ü–æ–∫–∏–Ω—É—Ç—å –≥–æ—Ä–æ–¥', callback_data="nav_metro_exit"))
        text = "–ü–ª–æ—â–∞–¥—å –∫–∞–∫ –ø–ª–æ—â–∞–¥—å. –í–µ–¥—å –ø–ª–æ—â–∞–¥—å –æ–Ω–∞ –∏ –≤ –•—ç–≤–µ–Ω–±—É—Ä–≥–µ –ø–ª–æ—â–∞–¥—å, –≤–µ—Ä–Ω–æ? –ó–Ω–∞–µ—à—å –∫–∞–∫ –≤—ã–≥–ª—è–¥—è—Ç –ø–ª–æ—â–∞–¥–∏, —Ç–∞–∫ –≤–æ—Ç –Ω–∞—à–∞ –ø–ª–æ—â–∞–¥—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ —Ç–∞–∫–∞—è –∂–µ, –∫–∞–∫ –∏ –≤—Å–µ –ø–ª–æ—â–∞–¥–∏, —á—Ç–æ —Ç—ã –≤–∏–¥–µ–ª –¥–æ –Ω–µ—ë. –í –æ–±—â–µ–º, –ø–ª–æ—â–∞–¥—å, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ –ø–ª–æ—â–∞–¥—å ‚Äî –≤–æ—Ç –æ–Ω–∞, –Ω–∞—à–∞ –ø–ª–æ—â–∞–¥—å –ú–µ—Ç—Ä–æ."
        await bot.send_message(call.message.chat.id, text, reply_markup=markup, parse_mode='markdown')
        await bot.delete_message(call.message.chat.id, call.message.message_id)
    elif navWhere == "exit":
        try:
            navg = nav[3]
            if navg == '1':
                newLocation = "–¢—É–Ω–Ω–µ–ª–∏ –º–µ—Ç—Ä–æ"
                if user.location == "–ú–µ—Ç—Ä–æ":
                    pass
                else:
                    await bot.send_message(call.message.chat.id, "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞")
                    await bot.delete_message(call.message.chat.id, call.message.message_id)
                    return
                user.location = newLocation
                user.progStatus = 1
                user.battleStatus = 0
                user.progLoc = '–¢—É–Ω–Ω–µ–ª–∏ –º–µ—Ç—Ä–æ|0'
                await user.save()
                text = "–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –≤ —Ç—É–Ω–Ω–µ–ª–∏ –º–µ—Ç—Ä–æ"
                await bot.send_message(call.message.chat.id, text)
                await bot.delete_message(call.message.chat.id, call.message.message_id)
                return
            elif navg == '2':
                if user.location == '–ú–µ—Ç—Ä–æ':
                    user.location = "–•—ç–≤–µ–Ω–±—É—Ä–≥"
                    user.position = "–ü–ª–æ—â–∞–¥—å"
                    user.battleStatus = 0
                    await user.save()
                    await bot.send_message(call.message.chat.id, "–í—ã —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–ª–∏—Å—å –≤ –•—ç–≤–µ–Ω–±—É—Ä–≥")
                    await bot.delete_message(call.message.chat.id, call.message.message_id)
                else:
                    await bot.send_message(call.message.chat.id, "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞")
                    await bot.delete_message(call.message.chat.id, call.message.message_id)
                    return
            else:
                markup = InlineKeyboardMarkup()
                markup.row_width = 2
                markup.add(InlineKeyboardButton('–¢—É–Ω–Ω–µ–ª–∏ –º–µ—Ç—Ä–æ', callback_data="nav_metro_exit_1"))
                markup.add(InlineKeyboardButton('–•—ç–≤–µ–Ω–±—É—Ä–≥', callback_data="nav_metro_exit_2"))
                await bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –ø–æ–π—Ç–∏", reply_markup=markup)
                await bot.delete_message(call.message.chat.id, call.message.message_id)
        except:
            markup = InlineKeyboardMarkup()
            markup.row_width = 2
            markup.add(InlineKeyboardButton('–¢—É–Ω–Ω–µ–ª–∏ –º–µ—Ç—Ä–æ', callback_data="nav_metro_exit_1"))
            markup.add(InlineKeyboardButton('–•—ç–≤–µ–Ω–±—É—Ä–≥', callback_data="nav_metro_exit_2"))
            await bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –ø–æ–π—Ç–∏", reply_markup=markup)
            await bot.delete_message(call.message.chat.id, call.message.message_id)
    elif navWhere == "kachalka":
        atk = user.atk
        hp = user.hp
        needAtk = int(3 * ((atk - 4) / 2))
        needHp = int(3 * ((hp - 9) / 2))
        halfmoney = int(user.money / 2)
        text = "–®—Ç–∞–Ω–≥–∏ –∏–∑ –ø–∞–ª–æ–∫ –∏ –ø–æ–∫—Ä—ã—à–µ–∫, —Ç—Ä–µ–Ω–∞–∂—ë—Ä—ã –∏–∑ –ø–∞–ª–æ–∫ –∏ –ø–æ–∫—Ä—ã—à–µ–∫, –¥–≤–µ—Ä—å –≤ –∑–¥–∞–Ω–∏–µ –∏–∑ –ø–∞–ª–æ–∫ –∏ –ø–æ–∫—Ä—ã—à–µ–∫... –î–∞ —á–µ–≥–æ —É–∂ —Ç–∞–∏—Ç—å ‚Äî —Å–∞–º–æ –∑–¥–∞–Ω–∏–µ —Ç–æ–∂–µ –∏–∑ –ø–∞–ª–æ–∫ –∏ –ø–æ–∫—Ä—ã—à–µ–∫. –†–∞–∑–≤–µ —á—Ç–æ —Ç–∞–±–ª–∏—á–∫–∞ ¬´–°–∞–º—ã–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω—ã–µ —Ç—Ä–µ–Ω–∞–∂—ë—Ä—ã –Ω–∞ –ª—é–±–æ–π –≤–∫—É—Å –∏ —Ü–≤–µ—Ç!¬ª —Å–¥–µ–ª–∞–Ω–∞ –Ω–µ –∏–∑ –ø–æ–∫—Ä—ã—à–µ–∫"
        text += "\n–£–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫ +1 üí¢–ê—Ç–∞–∫–∞ - {}üí∞ /kach_atk".format(str(needAtk))
        if needAtk * 2 < halfmoney:
            text += "\n–£–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫ üí¢–ê—Ç–∞–∫–∞ –Ω–∞ {}üí∞ /kach_halfatk".format(str(halfmoney))
            if needAtk * 4 < user.money:
                text += "\n–£–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫ üí¢–ê—Ç–∞–∫–∞ –Ω–∞ {}üí∞ /kach_fullatk".format(str(user.money))
        text += "\n\n–£–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫ +1 ‚ù§Ô∏è–ó–¥–æ—Ä–æ–≤—å–µ - {}üí∞ /kach_hp".format(str(needHp))
        if needHp * 2 < halfmoney:
            text += "\n–£–ª—É—á—à–∏—Ç—å ‚ù§Ô∏è–ó–¥–æ—Ä–æ–≤—å–µ –Ω–∞ {}üí∞ /kach_halfhp".format(str(halfmoney))
            if needHp * 4 < user.money:
                text += "\n–£–ª—É—á—à–∏—Ç—å ‚ù§Ô∏è–ó–¥–æ—Ä–æ–≤—å–µ –Ω–∞ {}üí∞ /kach_fullhp".format(user.money)
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(InlineKeyboardButton('–í—ã–π—Ç–∏'.format(needHp), callback_data="nav_metro_centr"))
        await bot.send_message(call.message.chat.id, text, reply_markup=markup)
    elif navWhere == "lombard":
        text = "–õ–æ–º–±–∞—Ä–¥ ‚Äî –º–µ—Å—Ç–æ —ç–ª–∏—Ç–Ω–æ–µ, –Ω–æ –Ω–µ –º–µ–Ω–µ–µ –º–µ—Ä–∑–∫–æ–µ, —á–µ–º –≤—Å–µ, —á—Ç–æ —Ç—ã –≤–∏–¥–µ–ª –¥–æ –Ω–µ–≥–æ –∏, –≤–µ—Ä–æ—è—Ç–Ω–æ, —É–≤–∏–¥–∏—à—å –ø–æ—Å–ª–µ. –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –Ω–µ—á—Ç–æ –±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ —Ç–æ–≥–æ –º—É—Å–æ—Ä–∞ –∏–∑ –æ–±—ã—á–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞. –ò –¥–∞, ''–õ–æ–º–±–∞—Ä–¥'' ‚Äî —ç—Ç–æ –≤—Å–µ–≥–æ –ª–∏—à—å –Ω–∞–∑–≤–∞–Ω–∏–µ, –Ω–µ –±–æ–ª–µ–µ.\n–í–∞—à –±–∞–ª–∞–Ω—Å: {}üíé".format(str(user.almaz))
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(InlineKeyboardButton('–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏–≥—Ä—ã', callback_data="donate_start"))
        markup.add(InlineKeyboardButton('–ú–∞–≥–∞–∑–∏–Ω üíé', callback_data="donateshop"))
        markup.add(InlineKeyboardButton('–ü—Ä–æ–¥–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç', callback_data="shopsell"))
        markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="nav_metro_centr"))
        await bot.send_message(call.message.chat.id, text, reply_markup=markup)
        await bot.delete_message(call.message.chat.id, call.message.message_id)
    elif navWhere == "raskul":
        text = "–£–¥–∏–≤–∏–≤—à–∏—Å—å, —É–≤–∏–¥–µ–≤ —Å—Ç–∞—Ä—É—é –∑–Ω–∞–∫–æ–º—É—é (—Ö–æ—Ç—è –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —ç—Ç–æ - –∑–Ω–∞–∫–æ–º—ã–π), –≤—ã –∑–∞—à–ª–∏ –≤–Ω—É—Ç—Ä—å –∑–¥–∞–Ω–∏—è –∏ –æ–∫–∞–∑–∞–ª–∏—Å—å –≤ –ê—É–∫—Ü–∏–æ–Ω–Ω–æ–º –¥–æ–º–µ –†–∞—Å–∫—É–ª–æ–≤–æ–π.\n\n–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∞ –ø—Ä–æ–¥–∞–∂—É, –ª–∏–±–æ –∂–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤"
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(InlineKeyboardButton('–ü–æ–∫—É–ø–∫–∞', callback_data="raskul_buy"))
        markup.add(InlineKeyboardButton('–ü—Ä–æ–¥–∞–∂–∞', callback_data="raskul_sell"))
        markup.add(InlineKeyboardButton('–ú–æ–∏ –ª–æ—Ç—ã', callback_data="raskul_lots"))
        markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="nav_metro_centr"))
        await bot.send_message(call.message.chat.id, text, reply_markup=markup)
        await bot.delete_message(call.message.chat.id, call.message.message_id)
    elif navWhere == 'sidor':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(InlineKeyboardButton('–í—ã–π—Ç–∏', callback_data="nav_metro_centr"))
        #checkIvent = await db.Inventory.exists(idplayer=user.id, name='–ü–∏—Å—å–º–æ –¥–ª—è –¢–∞–±–µ—Ä–Ω–∞–º', active=1)
        checkIvent = None # –ó–∞–≥–ª—É—à–∫–∞
        if checkIvent: # if not checkIvent
            await db.Inventory.filter(name='–ü–∏—Å—å–º–æ –¥–ª—è –¢–∞–±–µ—Ä–Ω–∞–º', idplayer=user.id).update(active=0)
            await db.addItem('–ü–∏—Å—å–º–æ –¥–ª—è –¢–∞–±–µ—Ä–≤–∞–º–∞', user, arg='1')
            text = "-–ö–æ—Ä–æ—á–µ, {}. –Ø —Ç–µ–±—è —Å–ø–∞—Å –∏ –≤ –±–ª–∞–≥–æ—Ä–æ–¥—Å—Ç–≤–æ –∏–≥—Ä–∞—Ç—å –Ω–µ –±—É–¥—É... –ü—Ä–∏–Ω–µ—Å—ë—à—å –º–Ω–µ –ø–∞—Ä—É üé£–ü—Ä–æ—Å—Ç—ã—Ö —É–¥–æ—á–µ–∫, –∏ –º—ã –≤ —Ä–∞—Å—á—ë—Ç–µ. –ó–∞–æ–¥–Ω–æ –ø–æ–∫–∞–∂—É —Ç–µ–±–µ —Å–≤–æ–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç, —É–∂ –ø–æ–≤–µ—Ä—å, –Ω–µ –ø–æ–∂–∞–ª–µ–µ—à—å!".format(user.username)
            await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
        else:
            await metroshop(call, user)
            return
