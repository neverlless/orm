async def shop(m1, m2, m3):
    do_work = await db.System.get(name='shop_work')
    if do_work == 0:
        await bot.edit_message_text('–í—ã –ø–æ–¥–æ—à–ª–∏ –∫ –º–∞–≥–∞–∑–∏–Ω—É –≥–¥–µ —Å—Ç–æ—è–ª –æ–¥–∏–Ω–æ–∫–∏–π –ê—à–æ—Ç. \n_-–≠–π, –ê—à–æ—Ç–∏–∫, –±—Ä–∞—Ç, –ø—Ä–æ–¥–∞–π –º–Ω–µ —á—ë-–Ω–∏–±—É–¥—å\n-–ü–∞—à—ë–ª—å –Ω–∞—Ö—É–π_', m1, m3, parse_mode = 'markdown')
        return
    else:
        pass
    user = await db.Users.get(user_id=m1)
    text = '–ë–∞–ª–∞–Ω—Å: {}üí∞\n_–¢—ã –ø–æ–¥—Ö–æ–¥–∏—à—å –∫ –Ω–µ–≤–∑—Ä–∞—á–Ω–æ–º—É —Å—Ç–µ–ª–ª–∞–∂—É —Å –≤—ã—Ü–≤–µ–≤—à–∏–º –Ω–∞–≤–µ—Å–æ–º. –û—â—É—â–µ–Ω–∏–µ, —Å–ª–æ–≤–Ω–æ –≤–ª–∞–¥–µ–ª–µ—Ü –±—Ä–æ—Å–∞–µ—Ç –≤ —è—â–∏–∫–∏ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤—Å–µ, —á—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç –ø–æ –ø—É—Ç–∏ —Å—é–¥–∞. –í–ø—Ä–æ—á–µ–º, –≤–æ–Ω —Ç–æ—Ç —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π –ø–ª–æ–¥ –≤—ã–≥–ª—è–¥–∏—Ç –∞–ø–ø–µ—Ç–∏—Ç–Ω–æ._'.format(user.money)
    counteat = 0
    countequip = 0
    countitem = 0
    shop = await db.Shop.filter(count__gt=0)
    for counts in shop:
        if counts.type == '–ï–¥–∞':
            counteat += 1
        elif counts.type == '–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞' or counts.type == '–ó–µ–ª—å–µ':
            countequip += 1
        elif counts.type == '–ë—Ä–æ–Ω—è':
            countitem += 1
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    if counteat > 0:
        markup.add(InlineKeyboardButton('üçï –ü–∏—â–∞', callback_data="shop_eat"))
    else:
        markup.add(InlineKeyboardButton('üçï –ü–∏—â–∞ (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ø—Ä–æ–¥–∞–∂–µ)', callback_data="return"))
    if countequip > 0:
        markup.add(InlineKeyboardButton('üß¢ –≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞', callback_data="shop_equip"))
    else:
        markup.add(InlineKeyboardButton('üß¢ –≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞ (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ø—Ä–æ–¥–∞–∂–µ)', callback_data="return"))
    if countitem > 0:
        markup.add(InlineKeyboardButton('üõ° –ë—Ä–æ–Ω—è', callback_data="shop_item"))
    else:
        markup.add(InlineKeyboardButton('üõ° –ë—Ä–æ–Ω—è (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ø—Ä–æ–¥–∞–∂–µ)', callback_data="return"))
    usr = await db.Users.get(user_id=m1)
    if usr.location == '–ì–æ—Ä–æ–¥':
        markup.add(InlineKeyboardButton('‚Ü©Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data="nav_city_centr"))
    elif usr.location == '–•—ç–≤–µ–Ω–±—É—Ä–≥':
        markup.add(InlineKeyboardButton('‚Ü©Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data="nav_bigcity_centr"))
    elif usr.location == '–ö–∞–≤–∞–π–Ω—è':
        markup.add(InlineKeyboardButton('‚Ü©Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data="nav_wintercity_centr"))
    await bot.edit_message_text(text, m1, m3, reply_markup=markup, parse_mode = 'markdown')


@dp.callback_query_handler(lambda call: call.from_user.id not in bannedUsers and call.data.startswith('return'))
def ret(call): 
    return

async def _shop(call, user): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    armorOld = ['–ö–æ–∂–∞–Ω—ã–π —à–ª–µ–º', '–ö–æ–∂–∞–Ω—ã–π –Ω–∞–≥—Ä—É–¥–Ω–∏–∫', '–ö–æ–∂–∞–Ω—ã–µ —à—Ç–∞–Ω—ã', '–ö–æ–∂–∞–Ω—ã–µ –±–æ—Ç–∏–Ω–∫–∏']
    sh = call.data.split('_')
    select = sh[1]
    if select == 'close':
        await db.Users.filter(id=user.id).update(position='–ü–ª–æ—â–∞–¥—å')
        await bot.edit_message_text('–í—ã –∑–∞–∫—Ä—ã–ª–∏ –º–∞–≥–∞–∑–∏–Ω.', call.message.chat.id, call.message.message_id)
        return
    elif select == 'eat':
        Type = '–ï–¥–∞'
    elif select == 'equip':
        Type = '–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞'
    elif select == 'item':
        Type = '–ë—Ä–æ–Ω—è'
    markup = InlineKeyboardMarkup(row_width=2)
    text = "–ë–∞–ª–∞–Ω—Å: {}üí∞\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏: \n".format(user.money)
    shop = await db.Shop.filter(type=Type, count__gt=0)
    for item in shop:
        if Type == '–ë—Ä–æ–Ω—è' and item.name in armorOld:
            name, size, bonus, atk_block, expires = await db.items(item.name, check=True)
            text += "\nx{} {} | {}üí∞".format(item.count, name, item.price)
            markup.add(InlineKeyboardButton('{}({}üí∞)'.format(name, item.price), callback_data="buy_{}".format(item.id)))
        elif Type != '–ë—Ä–æ–Ω—è':
            name, size, bonus, atk_block, expires = await db.items(item.name, check=True)
            text += "\nx{} {} | {}üí∞".format(item.count, name, item.price)
            markup.add(InlineKeyboardButton('{}({}üí∞)'.format(name, item.price), callback_data="buy_{}".format(item.id)))        
    markup.add(InlineKeyboardButton('‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data="backtoshop"))
    await bot.send_message(call.message.chat.id, text, reply_markup=markup, parse_mode='markdown')


async def buy(call, user): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    sh = call.data.split('_')
    select = sh[1]
    item = await db.Shop.get(id=select)
    if item.count <= 0:
        text = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–æ–≤–∞—Ä –∫–æ–Ω—á–∏–ª—Å—è."
        await bot.send_message(call.message.chat.id, text, parse_mode='markdown')
        return
    name, size, bonus, atk_block, expires = await db.items(item.name, check=True)
    if user.location == '–ì–æ—Ä–æ–¥':
        pass
    else:
        await bot.edit_message_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞", call.message.chat.id, call.message.message_id)
        return
    if user.money >= item.price:
        if item.name == '–£–ª—É—á—à–µ–Ω–Ω—ã–π —Ä—é–∫–∑–∞–∫':
            check = await db.Inventory.exists(idplayer=user.id, name='–£–ª—É—á—à–µ–Ω–Ω—ã–π —Ä—é–∫–∑–∞–∫')
            if check:
                text = "_–ü–æ–∫—É–ø–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ä—é–∫–∑–∞–∫–∞ –Ω–µ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —É–Ω–µ—Å—Ç–∏ –±–æ–ª—å—à–µ!_"
                await bot.send_message(call.message.chat.id, text, parse_mode='markdown')
                return
        success = await db.addItem(item.name, user)
        await db.specialItems(name, user)
        if success == True:
            await db.Shop.filter(id=select).update(count=F('count') - 1)
            await db.Users.filter(id=user.id).update(money=F('money') - item.price)
            await bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–£—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–æ: {}".format(item.name))                
            try:
                await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –∫—É–ø–∏–ª {} –∑–∞ {}üí∞".format(user.username, item.name, item.price))
            except:
                pass
            await achprog(user, ach='shopbuy')
            return
        else:
            await bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–ù–µ—Ç –º–µ—Å—Ç–∞ –≤ —Ä—é–∫–∑–∞–∫–µ")          
    else:
        await bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞")                



async def donateshop(call, user):
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(InlineKeyboardButton('–ü—Ä–µ–¥–º–µ—Ç—ã', callback_data="doshopItems"))
    markup.add(InlineKeyboardButton('–ü—Ä–æ—á–µ–µ', callback_data="doshopOther"))
    markup.add(InlineKeyboardButton('–û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã', callback_data="doshopCurrency"))
    text = "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–µ–¥–º–µ—Ç–æ–≤:"
    await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
shopStatus = {}


async def doshopItems(call, user):
    koltLeft = await db.System.get_or_none(name='koltLeft').first()
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(InlineKeyboardButton('üÉè–ü—Ä–æ–ø—É—Å–∫ —ç–ª–∏—Ç–Ω–æ–≥–æ –≤–æ–∏–Ω–∞', callback_data="dshopbuy_bp"))
    markup.add(InlineKeyboardButton('üì¶–ö–æ—Ä–æ–±–∫–∞ —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º', callback_data="dshopbuy_lootbox1"))
    markup.add(InlineKeyboardButton('üì¶–ö–æ—Ä–æ–±–∫–∞ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏', callback_data="dshopbuy_lootbox2"))
    markup.add(InlineKeyboardButton('üì¶–ö–æ—Ä–æ–±–∫–∞ —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏', callback_data="dshopbuy_lootbox3"))
    markup.add(InlineKeyboardButton('üî∑–û—Å–∫–æ–ª–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏', callback_data="dshopbuy_energyOsk"))
    markup.add(InlineKeyboardButton('üî•–û—Å–∫–æ–ª–æ–∫ –æ–≥–Ω—è', callback_data="dshopbuy_fireOsk"))
    markup.add(InlineKeyboardButton('üî∑–ö–∞–º–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏', callback_data="dshopbuy_energyCum"))
    markup.add(InlineKeyboardButton('üçØ–ì–æ—Ä—à–æ–∫ –ª–µ–ø—Ä–µ–∫–æ–Ω–∞', callback_data="dshopbuy_leprekon"))
    markup.add(InlineKeyboardButton('üåø–ö–∞—Ä–º–∞–Ω–Ω–∞—è –¥—Ä–∏–∞–¥–∞', callback_data="dshopbuy_driada"))
    markup.add(InlineKeyboardButton('üüß–û—Å–∫–æ–ª–æ–∫ —ç—Ñ–∏—Ä–∞', callback_data="dshopbuy_etherium"))
    markup.add(InlineKeyboardButton('üéü–ë–∏–ª–µ—Ç –Ω–∞ —Ç–æ—Ç —Å–≤–µ—Ç', callback_data="dshopbuy_bilet"))
    markup.add(InlineKeyboardButton('üé£–í–µ—Å—å–º–∞ –Ω–µ–ø—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞', callback_data="dshopbuy_udochka"))
    if koltLeft.value >= 1:
        markup.add(InlineKeyboardButton('üó°–ö–æ–ª—å—Ç', callback_data="dshopbuy_kolt"))
        markup.add(InlineKeyboardButton('üó°–ó–æ–ª–æ—Ç–æ–π –∫–æ–ª—å—Ç', callback_data="dshopbuy_goldkolt"))
    checkTp = await db.Inventory.exists(name='–ü—è—Ç—ã–π —Å–µ–∫—Ç–æ—Ä', idplayer=user.id)
    if not checkTp: markup.add(InlineKeyboardButton('üìú–°–≤–∏—Ç–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –Ω–∞ –ø—è—Ç—ã–π —Å–µ–∫—Ç–æ—Ä –ø–∏—Ä–∞–º–∏–¥—ã', callback_data="dshopbuy_fifthSector"))
    markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="donateshop"))
    text = "\n\nüÉè–ü—Ä–æ–ø—É—Å–∫ —ç–ª–∏—Ç–Ω–æ–≥–æ –≤–æ–∏–Ω–∞ (300üíé). –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –Ω–∞–≥—Ä–∞–¥ —Å –ø—Ä–æ–ø—É—Å–∫–∞ –∏—Å–ø—ã—Ç–∞–Ω–∏–π."
    text += "\n\nüì¶–ö–æ—Ä–æ–±–∫–∞ —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º (75üíé) | –í–Ω—É—Ç—Ä–∏ –ª–µ–∂–∏—Ç üî•–û—Å–∫–æ–ª–æ–∫ –û–≥–Ω—è, üî∂–ê–º—É–ª–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è, üö•–ê–Ω—Ç–∏-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ë–ú, üëò–ü–ª–∞—â-–Ω–µ–≤–∏–¥–∏–º–∫–∞, üß©–ö—É—Å–æ–∫ –ø–∞–∑–∑–ª–∞, üüß–û—Å–∫–æ–ª–æ–∫ —ç—Ñ–∏—Ä–∞ –∏–ª–∏ üü¶–û—Å–∫–æ–ª–æ–∫ –ª—å–¥–∞!"
    text += "\n\nüì¶–ö–æ—Ä–æ–±–∫–∞ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ (200üíé) | –í–Ω—É—Ç—Ä–∏ –ª–µ–∂–∏—Ç: üî∑–ö–∞–º–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏, üçØ–ì–æ—Ä—à–æ–∫ –ª–µ–ø—Ä–µ–∫–æ–Ω–∞ –∏–ª–∏ üåø–ö–∞—Ä–º–∞–Ω–Ω–∞—è –¥—Ä–∏–∞–¥–∞"
    text += "\n\nüì¶–ö–æ—Ä–æ–±–∫–∞ —Å —Ä–µ—Ü–µ–ø—Ç–æ–º (50üíé) | –ü–æ–ø—ã—Ç–∞–π—Ç–µ —É–¥–∞—á—É –∏ –¥–æ—Å—Ç–∞–Ω—å—Ç–µ –∏–∑–Ω—É—Ç—Ä–∏ –æ–¥–∏–Ω –∏–∑ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –¥–ª—è –∫–æ—Ç–µ–ª–∫–∞!"
    text += "\n\nüî∑–û—Å–∫–æ–ª–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏ (225üíé). –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–∞—Å—Å–∏–≤–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É 5‚ö°Ô∏è, –µ—Å–ª–∏ —ç–Ω–µ—Ä–≥–∏—è –≤—ã—à–µ 5‚ö°Ô∏è, –Ω–æ –Ω–µ –≤—ã—à–µ 70‚ö°Ô∏è"
    text += "\n\nüî•–û—Å–∫–æ–ª–æ–∫ –æ–≥–Ω—è (150üíé). –ë–ª–∞–≥–æ–¥–∞—Ä—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –∞—É—Ä–µ, –ø–æ—Å–ª–µ –≤–∞—à–µ–π –∞—Ç–∞–∫–∏ –º–æ–Ω—Å—Ç—Ä—ã –Ω–∞—á–∏–Ω–∞—é—Ç –≥–æ—Ä–µ—Ç—å –∏–∑-–∑–∞ —á–µ–≥–æ –ø–æ–ª—É—á–∞—é—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ 5% (10% –≤ –ö–∞–≤–∞–π–Ω–µ) –æ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è"
    text += "\n\nüî∑–ö–∞–º–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏ (550üíé). –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–∞—Å—Å–∏–≤–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É 7‚ö°Ô∏è"
    text += "\n\nüçØ–ì–æ—Ä—à–æ–∫ –ª–µ–ø—Ä–µ–∫–æ–Ω–∞ (525üíé). –ü—Ä–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–µ –≤ PvE –∏ —Å–º–µ—Ä—Ç–∏ –æ—Ç –≥–æ–ª–æ–¥–∞ –º–æ–Ω–µ—Ç—ã –Ω–µ —Ç—Ä–∞—Ç—è—Ç—Å—è, –æ–¥–Ω–∞–∫–æ —Å –º–æ–Ω—Å—Ç—Ä–æ–≤ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å 65% –º–æ–Ω–µ—Ç."
    text += "\n\nüåø–ö–∞—Ä–º–∞–Ω–Ω–∞—è –¥—Ä–∏–∞–¥–∞ (475üíé). –£–¥–≤–∞–∏–≤–∞–µ—Ç –≤—ã–ø–∞–¥–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤"
    text += "\n\nüüß–û—Å–∫–æ–ª–æ–∫ —ç—Ñ–∏—Ä–∞ (200üíé). –í –∫–æ–Ω—Ü–µ –±–∏—Ç–≤—ã —Å –º–æ–Ω—Å—Ç—Ä–æ–º –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ‚ô•Ô∏è, —Ä–∞–≤–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —É–±–∏—Ç—ã—Ö –º–æ–Ω—Å—Ç—Ä–æ–≤, —É–º–Ω–æ–∂–µ–Ω–Ω–æ–º—É –Ω–∞ 1.5 (—Å—á—ë—Ç—á–∏–∫ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç –ø–∞–¥–∞–µ—Ç –Ω–∞ 1)"
    text += "\n\nüéü–ë–∏–ª–µ—Ç –Ω–∞ —Ç–æ—Ç —Å–≤–µ—Ç (10üíé). –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫ –º–µ—Å—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–º–µ—Ä—Ç–∏"
    text += "\n\nüé£–í–µ—Å—å–º–∞ –Ω–µ–ø—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞ (1050üíé). –ü–æ–∑–≤–æ–ª—è–µ—Ç –ª–æ–≤–∏—Ç—å —Å–∞–º—É—é –ª—É—á—à—É—é —Ä—ã–±—É –≤ –ü—Ä—É–¥—É —Å –≤—ã—Å–æ–∫–∏–º —à–∞–Ω—Å–æ–º."
    if not checkTp: text += "\n\nüìú–°–≤–∏—Ç–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –Ω–∞ –ø—è—Ç—ã–π —Å–µ–∫—Ç–æ—Ä –ø–∏—Ä–∞–º–∏–¥—ã (300üíé). –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –ø—è—Ç—ã–π —Å–µ–∫—Ç–æ—Ä –ø–µ—Å—á–∞–Ω–æ–π –ø–∏—Ä–∞–º–∏–¥—ã."
    if koltLeft.value >= 1:
        text += "\n\nüî•–≠–∫—Å–∫–ª—é–∑–∏–≤ (–æ—Å—Ç–∞–ª–æ—Å—å {})\n\nüó°–ö–æ–ª—å—Ç (750üíé). –í –æ—Ç–ª–∏—á–∏–∏ –æ—Ç –æ–±—ã—á–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è, –µ–≥–æ –∞—Ç–∞–∫–∞ –Ω–∞–Ω–æ—Å–∏—Ç –º–µ–Ω—å—à–µ —É—Ä–æ–Ω–∞, –Ω–æ –µ—Å—Ç—å —à–∞–Ω—Å –Ω–∞–Ω–µ—Å—Ç–∏ –¥–æ 6 –≤—ã—Å—Ç—Ä–µ–ª–æ–≤ –∑–∞ —Ö–æ–¥. –û—Å–æ–±—ã–π –Ω–∞–≤—ã–∫ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å –±–æ–ª—å—à–∏–º —à–∞–Ω—Å–æ–º –Ω–∞–Ω–µ—Å—Ç–∏ –±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã—Å—Ç—Ä–µ–ª–æ–≤ –∑–∞ —Ö–æ–¥. –ï—Å–ª–∏ –∫–æ–ª—å—Ç —Å–º–æ–≥ –≤—ã—Å—Ç—Ä–µ–ª–∏—Ç—å 6 —Ä–∞–∑ –∑–∞ —Ö–æ–¥, –æ–Ω –Ω–∞–Ω–æ—Å–∏—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ö—Ä–∏—Ç –≤ —Ä–∞–∑–º–µ—Ä–µ 500% –∞—Ç–∞–∫–∏. –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Ç–∞–∫ –∂–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –±–æ–Ω—É—Å +5üì¶".format(koltLeft.value)
        text += "\n\nüó°–ó–æ–ª–æ—Ç–æ–π –∫–æ–ª—å—Ç (1050üíé). –≠–ª–∏—Ç–Ω–∞—è –≤–∞—Ä–∏–∞—Ü–∏—è –æ–±—ã—á–Ω–æ–≥–æ –∫–æ–ª—å—Ç–∞. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å—é —è–≤–ª—è–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞–Ω–µ—Å–µ–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –≥—Ä–∞–≤–∏—Ä–æ–≤–∫–∏ –Ω–∞ –æ—Ä—É–∂–∏–µ, –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç –≤–∏–¥–µ—Ç—å –ø–æ–≤–µ—Ä–∂–µ–Ω–Ω—ã–π –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ –ø—Ä–∏ –ø–æ—Ä–∞–∂–µ–Ω–∏–∏ –≤ PvP. –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Ç–∞–∫ –∂–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –±–æ–Ω—É—Å +5üì¶"
    await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)


async def doshopOther(call, user):
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    donateinv = await db.Inventory.filter(name='–î–æ–Ω–∞—Ç –∏–Ω–≤', idplayer=user.id).count()
    priceDonateInv = 25 * (donateinv + 1)
    if priceDonateInv > 75:
        priceDonateInv = 75
    skillsReset = await db.Inventory.filter(name='–°–±—Ä–æ—Å –Ω–∞–≤—ã–∫–æ–≤', idplayer=user.id).count()
    priceSkillsReset = 100 * (skillsReset + 1)
    markup.add(InlineKeyboardButton('+5üì¶', callback_data="dshopbuy_1"))
    markup.add(InlineKeyboardButton('+200üì¶(ü•ò)', callback_data="dshopbuy_kotelokLimit"))
    markup.add(InlineKeyboardButton('–°–º–µ–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –æ—Ä—É–∂–∏—è', callback_data="dshopbuy_7"))
    markup.add(InlineKeyboardButton('–°–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º', callback_data="dshopbuy_4"))
    markup.add(InlineKeyboardButton('‚ö°Ô∏è–ë—É—Å—Ç–µ—Ä—ã', callback_data="dshopbuy_8"))
    #markup.add(InlineKeyboardButton('‚ö°Ô∏è–ë—É—Å—Ç–µ—Ä—ã –ö–æ—Ç–æ–º–∏', callback_data="dshopbuy_kotomiBoost"))
    markup.add(InlineKeyboardButton('–°–±—Ä–æ—Å –Ω–∞–≤—ã–∫–æ–≤', callback_data="dshopbuy_skillsReset"))
    markup.add(InlineKeyboardButton('‚ô•Ô∏èToH supporter', callback_data="dshopbuy_supporter"))
    markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="donateshop"))
    text = "+5üì¶({}üíé). –ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –Ω–∞ 5üì¶. –°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ü–µ–Ω–∞ - 25üíé(+25 –∫–∞–∂–¥—ã–π —Ä–∞–∑, –¥–æ 75üíé –∑–∞ 5üì¶)".format(priceDonateInv)
    text += "\n+200üì¶(ü•ò)(50üíé). –ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∫–æ—Ç–µ–ª–∫–∞ –Ω–∞ 200üì¶"
    text += "\n\n–°–º–µ–Ω–∞ –Ω–∏–∫–Ω–µ–π–º–∞(50üíé). –í—ã –º–æ–∂–µ—Ç–µ —Å–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º, –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–∞—Å –Ω–µ —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç (–∏–ª–∏ –Ω–µ—Ç)"
    text += "\n\n‚ö°Ô∏è–ë—É—Å—Ç–µ—Ä—ã. –í–∫–ª—é—á–∞–µ—Ç—Å—è —Ä–µ–∂–∏–º –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –≤ –ª–æ–∫–∞—Ü–∏—è—Ö (–ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∑–∞–Ω–∏–º–∞–µ—Ç –º–∏–Ω—É—Ç—É, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–∞–µ–º–æ–≥–æ –æ–ø—ã—Ç–∞ –∏ –∑–æ–ª–æ—Ç–∞ –ø–æ–≤—ã—à–µ–Ω–æ –Ω–∞ 25%)"
    #text += "\n\n‚ö°Ô∏è–ë—É—Å—Ç–µ—Ä—ã –ö–æ—Ç–æ–º–∏(25üíé). –ù–∞ —Å—É—Ç–∫–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–∞–µ–º–æ–≥–æ –æ–ø—ã—Ç–∞ –ö–æ—Ç–æ–º–∏ —É–¥–≤–∞–∏–≤–∞–µ—Ç—Å—è."
    text += "\n\n–°–±—Ä–æ—Å –Ω–∞–≤—ã–∫–æ–≤ ({}üíé). –ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ /skills —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º üîò (–ö—Ä–æ–º–µ –∫–∞—Ä–º–∞–Ω–Ω–æ–π —Å–º–µ–∫–∞–ª–∫–∏)".format(priceSkillsReset)
    text += "\n\n‚ô•Ô∏èToH supporter (500üíé). –ù–∞–±–æ—Ä –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Ö1üì¶–ö–æ—Ä–æ–±–∫–∞ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏, +5üì¶, 15 –¥–Ω–µ–π ‚ö°Ô∏è–ë—É—Å—Ç–µ—Ä–æ–≤ –∏ —Ç–∏—Ç—É–ª –≤ –ø—Ä–æ—Ñ–∏–ª–µ ‚ô•Ô∏èToH supporter‚ô•Ô∏è –Ω–∞ –º–µ—Å—è—Ü"
    await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)


async def doshopCurrency(call, user):
    text = "–û–±–º–µ–Ω üíé –Ω–∞ –≤–∞–ª—é—Ç—É –≥–æ—Ä–æ–¥–æ–≤\n"
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    text += "\n–ü–æ–∫—É–ø–∫–∞ üîª (–ö—É—Ä—Å - 1üíé=3üîª)"
    markup.add(InlineKeyboardButton('–ü–æ–∫—É–ø–∫–∞ üîª', callback_data="dshopbuy_9"))
    if user.lvl >= 15:
        text += "\n–ü–æ–∫—É–ø–∫–∞ üßä (–ö—É—Ä—Å - 1üíé=45üßä)"
        markup.add(InlineKeyboardButton('–ü–æ–∫—É–ø–∫–∞ üßä', callback_data="dshopbuy_10"))
    if user.lvl >= 35:
        text += "\n–ü–æ–∫—É–ø–∫–∞ ‚ô¶Ô∏è (–ö—É—Ä—Å - 1üíé=1‚ô¶Ô∏è)"
        markup.add(InlineKeyboardButton('–ü–æ–∫—É–ø–∫–∞ ‚ô¶Ô∏è', callback_data="dshopbuy_11"))
    if user.lvl >= 50:
        text += "\n–ü–æ–∫—É–ø–∫–∞ üíß (–ö—É—Ä—Å - 1üíé=1üíß)"
        markup.add(InlineKeyboardButton('–ü–æ–∫—É–ø–∫–∞ üíß', callback_data="dshopbuy_12"))
    if user.lvl >= 75:
        text += "\n–ü–æ–∫—É–ø–∫–∞ üóù (–ö—É—Ä—Å - 1üíé=3üóù)"
        markup.add(InlineKeyboardButton('–ü–æ–∫—É–ø–∫–∞ üóù', callback_data="dshopbuy_13"))
    markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="donateshop"))
    await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)

async def dshopbuy(call, user):
    sh = call.data.split('_')
    select = sh[1]
    donateinv = await db.Inventory.filter(name='–î–æ–Ω–∞—Ç –∏–Ω–≤', idplayer=user.id).count()
    priceDonateInv = 25 * (donateinv + 1)
    if priceDonateInv > 75:
        priceDonateInv = 75
    if select == '1':
        if user.almaz >= priceDonateInv:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - priceDonateInv,
                                                        inventorySizeMax=F('inventorySizeMax') + 5)
            await db.Inventory.create(name='–î–æ–Ω–∞—Ç –∏–Ω–≤', type='–î–æ–Ω–∞—Ç', size=0, bonus=0, active=0, idplayer=user.id)
            await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ +5üì¶", call.message.chat.id, call.message.message_id)
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª +5üì¶".format(user.username))
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == '2':
        markup = InlineKeyboardMarkup(row_width=2)
        if user.almaz >= 50:
            text = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É"
            if user.frak != '–í–∞–≤–∏–ª–æ–Ω':
                markup.add(InlineKeyboardButton('–í–∞–≤–∏–ª–æ–Ω', callback_data="donateSelectFrak_1"))
            if user.item != '–ù–µ–±–µ—Å–Ω—ã–µ —Ä—ã—Ü–∞—Ä–∏':
                markup.add(InlineKeyboardButton('–ù–µ–±–µ—Å–Ω—ã–µ —Ä—ã—Ü–∞—Ä–∏', callback_data="donateSelectFrak_2"))
            if user.item != '–≠–≥–∏–¥–∞':
                markup.add(InlineKeyboardButton('–≠–≥–∏–¥–∞', callback_data="donateSelectFrak_5"))
            if user.item != '–ê–≤–∞–Ω–≥–∞—Ä–¥ –§–µ–Ω–∏–∫—Å–∞':
                markup.add(InlineKeyboardButton('–ê–≤–∞–Ω–≥–∞—Ä–¥ –§–µ–Ω–∏–∫—Å–∞', callback_data="donateSelectFrak_4"))
            await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
            return
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == '3':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        if user.almaz >= 50:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 50)
            text = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤–æ–µ –æ—Ä—É–∂–∏–µ"
            if user.item != '–ú–µ—á':
                markup.add(InlineKeyboardButton('–ú–µ—á', callback_data="donateSelectItem_mech"))
            if user.item != '–ü–∏—Å—Ç–æ–ª–µ—Ç —Å –Ω–æ–∂–æ–º':
                markup.add(InlineKeyboardButton('–ü–∏—Å—Ç–æ–ª–µ—Ç —Å –Ω–æ–∂–æ–º', callback_data="donateSelectItem_pistol"))
            if user.item != '–ö–æ–ø—å—ë':
                markup.add(InlineKeyboardButton('–ö–æ–ø—å—ë', callback_data="donateSelectItem_kopie"))
            if user.item != '–ö–∞—Ç–∞–Ω–∞':
                markup.add(InlineKeyboardButton('–ö–∞—Ç–∞–Ω–∞', callback_data="donateSelectItem_katana"))
            await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
            return
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == '4':
        if user.almaz >= 50:
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª —Å–º–µ–Ω—É –Ω–∏–∫–Ω–µ–π–º–∞".format(user.username))
            await bot.send_message(call.message.chat.id, "–ù–∞–∑–æ–≤–∏ —Å–≤–æ—ë –∏–º—è, –ø—É—Ç–Ω–∏–∫.")
            shopStatus[call.from_user.id] = 'reg_nick'
            text = "–ù–∞—á–∞–ª—Å—è –ø—Ä–æ—Ü–µ—Å—Å —Å–º–µ–Ω—ã –Ω–∏–∫–Ω–µ–π–º–∞..."
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 50)
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == '5':
        if user.almaz >= 5:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 5)
            success = await db.addItem('–ê–º—Ñ–æ—Ä–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ø–æ–º–æ—â–∏', user)
            text = "–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üè∫–ê–º—Ñ–æ—Ä–∞ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ø–æ–º–æ—â–∏"
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª –ê–º—Ñ–æ—Ä—É —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –ø–æ–º–æ—â–∏".format(user.username))
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == 'lootbox1':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        if user.almaz >= 75:
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª –ö–æ—Ä–æ–±–∫—É —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º".format(user.username))
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 75)
            text = "–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üì¶–ö–æ—Ä–æ–±–∫—É —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º. –°–º–æ—Ç—Ä–∏–º —á—Ç–æ –≤–Ω—É—Ç—Ä–∏..."
            await opendonatecase(user)
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == 'lootbox2':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        if user.almaz >= 200:
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª –ö–æ—Ä–æ–±–∫—É —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏".format(user.username))
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 200)
            text = "–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üì¶–ö–æ—Ä–æ–±–∫—É —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏. –û—Ç–∫—Ä—ã—Ç—å –µ—ë –º–æ–∂–Ω–æ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ."
            await bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            await db.addItem('–ö–æ—Ä–æ–±–∫–∞ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏', user, arg='a')
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == 'lootbox3':
        if user.almaz >= 50:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 50)
            await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üì¶–ö–æ—Ä–æ–±–∫—É —Å —Ä–µ—Ü–µ–ø—Ç–æ–º. –°–º–æ—Ç—Ä–∏–º —á—Ç–æ –≤–Ω—É—Ç—Ä–∏...", call.message.chat.id, call.message.message_id)
            await opendonatecaseRecipy(user)
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª –ö–æ—Ä–æ–±–∫—É —Å —Ä–µ—Ü–µ–ø—Ç–æ–º".format(user.username))
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé"
    elif select == '7':
        if user.almaz >= 45:
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª —Å–º–µ–Ω—É –æ—Ä—É–∂–∏—è".format(user.username))
            await bot.send_message(call.message.chat.id, "–ù–∞–∑–æ–≤–∏ –∏–º—è —Å–≤–æ–µ–≥–æ –æ—Ä—É–∂–∏—è")
            shopStatus[call.from_user.id] = 'change_weaponName'
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 45)
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == '8':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(InlineKeyboardButton('1 —á–∞—Å', callback_data="buyBooster_1h"))
        markup.add(InlineKeyboardButton('3 —á–∞—Å–∞', callback_data="buyBooster_3h"))
        markup.add(InlineKeyboardButton('5 —á–∞—Å–æ–≤', callback_data="buyBooster_5h"))
        markup.add(InlineKeyboardButton('12 —á–∞—Å–æ–≤', callback_data="buyBooster_12h"))
        markup.add(InlineKeyboardButton('24 —á–∞—Å–∞', callback_data="buyBooster_24h"))
        markup.add(InlineKeyboardButton('30 –¥–Ω–µ–π', callback_data="buyBooster_30d"))
        text = "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ ‚ö°Ô∏è–ë—É—Å—Ç–µ—Ä—ã.\n1 —á–∞—Å - 10üíé\n3 —á–∞—Å–∞ - 20üíé\n5 —á–∞—Å–æ–≤ - 30üíé\n12 —á–∞—Å–æ–≤ - 50üíé\n24 —á–∞—Å–∞ - 65üíé\n30 –¥–Ω–µ–π - 900üíé"
        await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
        return
    elif select == 'bilet':
        if user.almaz >= 5:
            success = await db.addItem('–ë–∏–ª–µ—Ç –Ω–∞ —Ç–æ—Ç —Å–≤–µ—Ç', user)
            if success == True:
                await db.Users.filter(id=user.id).update(almaz=F('almaz') - 5)
                await bot.edit_message_text('–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üéü–ë–∏–ª–µ—Ç –Ω–∞ —Ç–æ—Ç —Å–≤–µ—Ç.', call.message.chat.id, call.message.message_id)
            else:
                await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ. –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞", call.message.chat.id, call.message.message_id)
            return
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == '9':
        await bot.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ üîª. –ö—É—Ä—Å - 1üíé=3üîª. –î–ª—è –æ—Ç–º–µ–Ω—ã - ''–û—Ç–º–µ–Ω–∞''", call.message.chat.id, call.message.message_id)
        shopStatus[call.from_user.id] = 'exchangeCheshuya'
    elif select == '10':
        await bot.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ üßä. –ö—É—Ä—Å - 1üíé=45üßä. –î–ª—è –æ—Ç–º–µ–Ω—ã - ''–û—Ç–º–µ–Ω–∞''", call.message.chat.id, call.message.message_id)
        shopStatus[call.from_user.id] = 'exchangeSosun'
    elif select == '11':
        await bot.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ ‚ô¶Ô∏è. –ö—É—Ä—Å - 1üíé=1‚ô¶Ô∏è. –î–ª—è –æ—Ç–º–µ–Ω—ã - ''–û—Ç–º–µ–Ω–∞''", call.message.chat.id, call.message.message_id)
        shopStatus[call.from_user.id] = 'exchangeRadar'
    elif select == '12':
        await bot.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ üíß. –ö—É—Ä—Å - 1üíé=1üíß. –î–ª—è –æ—Ç–º–µ–Ω—ã - ''–û—Ç–º–µ–Ω–∞''", call.message.chat.id, call.message.message_id)
        shopStatus[call.from_user.id] = 'exchangeOcus'
    elif select == '13':
        await bot.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –Ω–∞ üóù. –ö—É—Ä—Å - 1üíé=3üóù. –î–ª—è –æ—Ç–º–µ–Ω—ã - ''–û—Ç–º–µ–Ω–∞''", call.message.chat.id, call.message.message_id)
        shopStatus[call.from_user.id] = 'exchangeMetro'

    elif select == 'kotelokLimit':
        if user.almaz >= 50:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 50, kotelokLimit=F('kotelokLimit') + 200)
            await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ +200üì¶(ü•ò)", call.message.chat.id, call.message.message_id)
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª +200üì¶(ü•ò)".format(user.username))
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == 'supporter':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        if user.almaz >= 500:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 500)
            await bot.edit_message_text("–ü–æ–∫—É–ø–∞–µ–º...", call.message.chat.id, call.message.message_id)
            await db.addBoost(user, lvl=360)
            if user.supporter >= time.time(): await db.Users.filter(id=user.id).update(booster=F('booster') + 2592000)
            else: await db.Users.filter(id=user.id).update(supporter=time.time() + 2592000)
            await db.addItem('–ö–æ—Ä–æ–±–∫–∞ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏', user, arg='a')
            await db.Users.filter(id=user.id).update(inventorySizeMax=F('inventorySizeMax') + 5)
            await bot.send_message(user.user_id, "–ü–æ–∫—É–ø–∫–∞ –Ω–∞–±–æ—Ä–∞ ToH supporter –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–∏—Ç—É–ª —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /badges")
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª —Å–∞–ø–ø–æ—Ä—Ç–µ—Ä".format(user.username))
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == 'bp':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        if user.almaz >= 300:
            if user.bpStatus == 0:
                await db.Users.filter(id=user.id).update(almaz=F('almaz') - 300, bpStatus=1)
                await bot.edit_message_text("–ü–æ–∫—É–ø–∞–µ–º...", call.message.chat.id, call.message.message_id)
                goldAward = 0
                healAward = 0
                boostAward = 0
                finalAward = ""
                for i in range(0, user.bpLvl):
                    goldAward += 700
                    if i % 2 == 0:
                        for z in range(0, 4):
                            await db.addItem('–ó–µ–ª—å–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è', user, arg='1')
                            healAward += 1
                    if i in [5, 10, 15, 20, 25]: #–Ω—É –∏–ª–∏ –º–æ–∂–Ω–æ 1, 50, 100
                        await db.addBoost(user, lvl=6)
                        boostAward += 6
                    if i == 25:
                        finalAward = " 1üåø 5üîò 5+5üìú 2 ü™ô–ú–æ–Ω–µ—Ç–∞ –≤–æ–∑–≤—ã—à–µ–Ω–∏—è"
                        await db.Users.filter(id=user.id).update(uppts=F('uppts') + 5)
                        for i in range(0, 5):
                            await db.addItem('–°–≤–∏—Ç–æ–∫ –±–∞—à–Ω–∏', user, arg='1')
                        for i in range(0, 5):
                            await db.addItem('–¢—É–Ω–Ω–µ–ª—å–Ω—ã–π —Å–≤–∏—Ç–æ–∫', user, arg='1')
                        await db.addItem('–ö–∞—Ä–º–∞–Ω–Ω–∞—è –¥—Ä–∏–∞–¥–∞', user, arg='1')
                        await db.Inventory(name='–ú–æ–Ω–µ—Ç–∞ –≤–æ–∑–≤—ã—à–µ–Ω–∏—è', idplayer=user.id, active=6, bonus=0, size=0, type='–ü—Ä–æ—á–µ–µ', atk_block=0, expires=0, count=0, lvl=0)
            else:
                await bot.edit_message_text("–£ –≤–∞—Å —É–∂–µ –∫—É–ø–ª–µ–Ω –ø—Ä–æ–ø—É—Å–∫ –Ω–∞ —ç—Ç–æ—Ç —Å–µ–∑–æ–Ω", call.message.chat.id, call.message.message_id)
                return
            await db.Users.filter(id=user.id).update(money=F('money') + goldAward)
            await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üÉè–ü—Ä–æ–ø—É—Å–∫ —ç–ª–∏—Ç–Ω–æ–≥–æ –≤–æ–∏–Ω–∞.\n–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã:\n{}üí∞ {}üß™ {}‚ö°Ô∏è 1ü™ô\n{}".format(goldAward, healAward, boostAward, finalAward), call.message.chat.id, call.message.message_id)
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª –ø–ª–∞—Ç–Ω—ã–π –ë–ü".format(user.username))
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == 'kotomiBoost':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        if user.almaz >= 25:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 25)
            await bot.edit_message_text("–ü–æ–∫—É–ø–∞–µ–º...", call.message.chat.id, call.message.message_id)
            checkIvent = await db.Ivent.exists(idplayer=user.id)
            if checkIvent:
                ivent = await db.Ivent.get(idplayer=user.id).first()
                if ivent.booster >= time.time(): await db.Ivent.filter(idplayer=user.id).update(booster=F('booster') + 86400)
                else: await db.Ivent.filter(id=ivent.id).update(booster=time.time() + 86400)
                await bot.send_message(user.user_id, "–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ ‚ö°Ô∏è–ë—É—Å—Ç–µ—Ä—ã –ö–æ—Ç–æ–º–∏ –Ω–∞ 24 —á–∞—Å–∞.")
                await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª –±—É—Å—Ç–µ—Ä—ã –ö–æ—Ç–æ–º–∏".format(user.username))
            else:
                await bot.edit_message_text("–í—ã –Ω–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ –∏–≤–µ–Ω—Ç–µ", call.message.chat.id, call.message.message_id)
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == 'fifthSector':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        await bot.edit_message_text("–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ", call.message.chat.id, call.message.message_id)
        if user.almaz >= 300:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 300)
            await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üìú–°–≤–∏—Ç–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –Ω–∞ –ø—è—Ç—ã–π —Å–µ–∫—Ç–æ—Ä –ø–∏—Ä–∞–º–∏–¥—ã", call.message.chat.id, call.message.message_id)
            await db.addItem('–ü—è—Ç—ã–π —Å–µ–∫—Ç–æ—Ä', user, arg='a')
            await db.Inventory.filter(name='–ü—è—Ç—ã–π —Å–µ–∫—Ç–æ—Ä', idplayer=user.id).update(active=0)
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª üìú–°–≤–∏—Ç–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –Ω–∞ –ø—è—Ç—ã–π —Å–µ–∫—Ç–æ—Ä –ø–∏—Ä–∞–º–∏–¥—ã".format(user.username))
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == 'energyOsk':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        if user.almaz >= 225:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 225)
            await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üî∑–û—Å–∫–æ–ª–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏", call.message.chat.id, call.message.message_id)
            await db.addItem('–û—Å–∫–æ–ª–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏', user, arg='a')
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª üî∑–û—Å–∫–æ–ª–æ–∫ —ç–Ω–µ—Ä–≥–∏–∏".format(user.username))
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == 'fireOsk':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        if user.almaz >= 150:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 150)
            await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üî•–û—Å–∫–æ–ª–æ–∫ –æ–≥–Ω—è", call.message.chat.id, call.message.message_id)
            await db.addItem('–û—Å–∫–æ–ª–æ–∫ –æ–≥–Ω—è', user, arg='a')
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª üî•–û—Å–∫–æ–ª–æ–∫ –æ–≥–Ω—è".format(user.username))
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == 'energyCum':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        if user.almaz >= 550:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 550)
            await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üî∑–ö–∞–º–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏", call.message.chat.id, call.message.message_id)
            await db.addItem('–ö–∞–º–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏', user, arg='a')
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª üî∑–ö–∞–º–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏".format(user.username))
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == 'leprekon':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        if user.almaz >= 525:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 525)
            await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üçØ–ì–æ—Ä—à–æ–∫ –ª–µ–ø—Ä–µ–∫–æ–Ω–∞", call.message.chat.id, call.message.message_id)
            await db.addItem('–ì–æ—Ä—à–æ–∫ –ª–µ–ø—Ä–µ–∫–æ–Ω–∞', user, arg='a')
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª üçØ–ì–æ—Ä—à–æ–∫ –ª–µ–ø—Ä–µ–∫–æ–Ω–∞".format(user.username))
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == 'driada':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        if user.almaz >= 475:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 475)
            await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üåø–ö–∞—Ä–º–∞–Ω–Ω–∞—è –¥—Ä–∏–∞–¥–∞", call.message.chat.id, call.message.message_id)
            await db.addItem('–ö–∞—Ä–º–∞–Ω–Ω–∞—è –¥—Ä–∏–∞–¥–∞', user, arg='a')
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª üåø–ö–∞—Ä–º–∞–Ω–Ω–∞—è –¥—Ä–∏–∞–¥–∞".format(user.username))
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == 'skillsReset':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        skillsReset = await db.Inventory.filter(name='–°–±—Ä–æ—Å –Ω–∞–≤—ã–∫–æ–≤', idplayer=user.id).count()
        priceSkillsReset = 100 * (skillsReset + 1)
        if user.almaz >= priceSkillsReset:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - priceSkillsReset)
            skills = {'masterWeapon': user.masterWeapon, 'luckerAvtomat': user.luckerAvtomat, 'krazha': user.krazha, 'antikrazha': user.antikrazha, 'reactionPvP': user.reactionPvP}
            prices = {}
            rewardedSkillsPts = 0
            for z in skills:
                while skills[z] > 0:
                    if skills[z] == 1: prices[z] = 1
                    elif skills[z] == 2: prices[z] = 3
                    elif skills[z] == 3: prices[z] = 6
                    elif skills[z] == 4: prices[z] = 10
                    elif skills[z] == 5: prices[z] = 15
                    elif skills[z] == 6: prices[z] = 21
                    elif skills[z] == 7: prices[z] = 28
                    elif skills[z] == 8: prices[z] = 36
                    elif skills[z] == 9: prices[z] = 45
                    elif skills[z] == 10: prices[z] = 55
                    else: skills[z] = 0
                    skills[z] -= 1
                    rewardedSkillsPts += prices[z]
            await db.Users.filter(id=user.id).update(masterWeapon=0, luckerAvtomat=0, krazha=0, antikrazha=0, reactionPvP=0, uppts=F('uppts') + rewardedSkillsPts)
            newItem = await db.Inventory(name='–°–±—Ä–æ—Å –Ω–∞–≤—ã–∫–æ–≤', idplayer=user.id, active=0, type='–ü—Ä–æ—á–µ–µ', size=0, bonus=0, atk_block=0, expires=0)
            await newItem.save()
            await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ —Å–±—Ä–æ—Å –Ω–∞–≤—ã–∫–æ–≤. –í–∞–º –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ {}üîò".format(rewardedSkillsPts), call.message.chat.id, call.message.message_id)
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} —Å–±—Ä–æ—Å–∏–ª –Ω–∞–≤—ã–∫–∏ –∑–∞ {}üíé. –ü–æ–ª—É—á–µ–Ω–æ {}üîò".format(user.username, priceSkillsReset, rewardedSkillsPts))
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    elif select == 'kolt':
        koltLeft = await db.System.get_or_none(name='koltLeft').first()
        if koltLeft.value >= 1:
            markup = InlineKeyboardMarkup()
            markup.row_width = 2
            if user.almaz >= 750:
                await db.Users.filter(id=user.id).update(almaz=F('almaz') - 750, inventorySizeMax=F('inventorySizeMax') + 5)
                await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üó°–ö–æ–ª—å—Ç –∏ +5üì¶", call.message.chat.id, call.message.message_id)
                await db.addItem('–ö–æ–ª—å—Ç', user, arg='a')
                await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª üó°–ö–æ–ª—å—Ç –∏ +5üì¶".format(user.username))
                await db.System.filter(name='koltLeft').update(value=F('value') - 1)
            else:
                await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
        else:
            await bot.edit_message_text("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ø—Ä–æ–¥–∞–∂–µ.", call.message.chat.id, call.message.message_id)
    elif select == 'goldkolt':
        koltLeft = await db.System.get_or_none(name='koltLeft').first()
        if koltLeft.value >= 1:
            markup = InlineKeyboardMarkup()
            markup.row_width = 2
            if user.almaz >= 1050:
                await db.Users.filter(id=user.id).update(almaz=F('almaz') - 1050, inventorySizeMax=F('inventorySizeMax') + 5)
                await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üó°–ó–æ–ª–æ—Ç–æ–π –∫–æ–ª—å—Ç –∏ +5üì¶", call.message.chat.id, call.message.message_id)
                await db.addItem('–ó–æ–ª–æ—Ç–æ–π –∫–æ–ª—å—Ç', user, arg='a')
                await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª üó°–ó–æ–ª–æ—Ç–æ–π –∫–æ–ª—å—Ç –∏ +5üì¶".format(user.username))
                await db.System.filter(name='koltLeft').update(value=F('value') - 1)
            else:
                await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
        else:
            await bot.edit_message_text("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ø—Ä–æ–¥–∞–∂–µ.", call.message.chat.id, call.message.message_id)

    elif select == 'udochka':
        if user.almaz >= 1050:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 1050)
            await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üé£–í–µ—Å—å–º–∞ –Ω–µ–ø—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞", call.message.chat.id, call.message.message_id)
            await db.addItem('–í–µ—Å—å–º–∞ –Ω–µ–ø—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞', user, arg='a')
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª üé£–í–µ—Å—å–º–∞ –Ω–µ–ø—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞".format(user.username))
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé", call.message.chat.id, call.message.message_id)
    else:
        await bot.edit_message_text("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –ø—Ä–æ–¥–∞–∂–µ.", call.message.chat.id, call.message.message_id)







@dp.message_handler(lambda m: shopStatus and m.from_user.id in shopStatus and shopStatus[m.from_user.id]=='exchangeSosun')
async def changerToSosun(m):
    try:
        value = int(m.text)
    except:
        shopStatus[m.from_user.id] = None
        await bot.send_message(m.chat.id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ. –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        return
    if value > 0:
        user = await db.Users.get(user_id=m.from_user.id)
        await bot.send_message(user.user_id, "–ù–∞—á–∞–ª—Å—è –ø—Ä–æ—Ü–µ—Å—Å –æ–±–º–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        if user.almaz >= value:
            await bot.send_message(ifellow, "–ò–≥—Ä–æ–∫ {} –æ–±–º–µ–Ω–∏–≤–∞–µ—Ç {} –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –Ω–∞ —Å–Ω—É–Ω—Ü—ã".format(user.id, value))
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - value)
            newValue = value * 45
            await db.Users.filter(id=user.id).update(kawaiCurrency=F('kawaiCurrency') + newValue)
            await bot.send_message(user.user_id, '–í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–º–µ–Ω—è–ª–∏ {}üíé –Ω–∞ {}üßä'.format(value, newValue))
            await bot.send_message(ifellow, "–û–±–º–µ–Ω –∑–∞–≤–µ—Ä—à—ë–Ω.")
            shopStatus[m.from_user.id] = None
    else:
        await bot.send_message(m.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        shopStatus[m.from_user.id] = None

@dp.message_handler(lambda m: shopStatus and m.from_user.id in shopStatus and shopStatus[m.from_user.id]=='exchangeCheshuya')
async def exchangeCheshuya(m):
    try:
        value = int(m.text)
    except:
        shopStatus[m.from_user.id] = None
        await bot.send_message(m.chat.id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ. –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        return
    if value > 0:
        user = await db.Users.get(user_id=m.from_user.id)
        await bot.send_message(user.user_id, "–ù–∞—á–∞–ª—Å—è –ø—Ä–æ—Ü–µ—Å—Å –æ–±–º–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        if user.almaz >= value:
            await bot.send_message(ifellow, "–ò–≥—Ä–æ–∫ {} –æ–±–º–µ–Ω–∏–≤–∞–µ—Ç {} –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –Ω–∞ –ß–µ—à—É—é".format(user.id, value))
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - value)
            newValue = value * 3
            await db.Users.filter(id=user.id).update(heavenCurrency=F('heavenCurrency') + newValue)
            await bot.send_message(user.user_id, '–í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–º–µ–Ω—è–ª–∏ {}üíé –Ω–∞ {}üîª'.format(value, newValue))
            await bot.send_message(ifellow, "–û–±–º–µ–Ω –∑–∞–≤–µ—Ä—à—ë–Ω.")
            shopStatus[m.from_user.id] = None
    else:
        await bot.send_message(m.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        shopStatus[m.from_user.id] = None

@dp.message_handler(lambda m: shopStatus and m.from_user.id in shopStatus and shopStatus[m.from_user.id]=='exchangeOcus')
async def exchangeOcus(m):
    try:
        value = int(m.text)
    except:
        shopStatus[m.from_user.id] = None
        await bot.send_message(m.chat.id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ. –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        return
    if value > 0:
        user = await db.Users.get(user_id=m.from_user.id)
        await bot.send_message(user.user_id, "–ù–∞—á–∞–ª—Å—è –ø—Ä–æ—Ü–µ—Å—Å –æ–±–º–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        if user.almaz >= value:
            await bot.send_message(ifellow, "–ò–≥—Ä–æ–∫ {} –æ–±–º–µ–Ω–∏–≤–∞–µ—Ç {} –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –Ω–∞ –°–∏—Ç–µ–Ω—å".format(user.id, value))
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - value)
            newValue = value
            await db.Users.filter(id=user.id).update(oceanCurrency=F('oceanCurrency') + newValue)
            await bot.send_message(user.user_id, '–í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–º–µ–Ω—è–ª–∏ {}üíé –Ω–∞ {}üíß'.format(value, newValue))
            await bot.send_message(ifellow, "–û–±–º–µ–Ω –∑–∞–≤–µ—Ä—à—ë–Ω.")
            shopStatus[m.from_user.id] = None
    else:
        await bot.send_message(m.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        shopStatus[m.from_user.id] = None

@dp.message_handler(lambda m: shopStatus and m.from_user.id in shopStatus and shopStatus[m.from_user.id]=='exchangeRadar')
async def exchangeRadar(m):
    try:
        value = int(m.text)
    except:
        shopStatus[m.from_user.id] = None
        await bot.send_message(m.chat.id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ. –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        return
    if value > 0:
        user = await db.Users.get(user_id=m.from_user.id)
        await bot.send_message(user.user_id, "–ù–∞—á–∞–ª—Å—è –ø—Ä–æ—Ü–µ—Å—Å –æ–±–º–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        if user.almaz >= value:
            await bot.send_message(ifellow, "–ò–≥—Ä–æ–∫ {} –æ–±–º–µ–Ω–∏–≤–∞–µ—Ç {} –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –Ω–∞ –†—é–º–±—ã".format(user.id, value))
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - value)
            newValue = value
            await db.Users.filter(id=user.id).update(radarCurrency=F('radarCurrency') + newValue)
            await bot.send_message(user.user_id, '–í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–º–µ–Ω—è–ª–∏ {}üíé –Ω–∞ {}‚ô¶Ô∏è'.format(value, newValue))
            await bot.send_message(ifellow, "–û–±–º–µ–Ω –∑–∞–≤–µ—Ä—à—ë–Ω.")
            shopStatus[m.from_user.id] = None
    else:
        await bot.send_message(m.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        shopStatus[m.from_user.id] = None

@dp.message_handler(lambda m: shopStatus and m.from_user.id in shopStatus and shopStatus[m.from_user.id]=='exchangeMetro')
async def exchangeRadar(m):
    try:
        value = int(m.text)
    except:
        shopStatus[m.from_user.id] = None
        await bot.send_message(m.chat.id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ. –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        return
    if value > 0:
        user = await db.Users.get(user_id=m.from_user.id)
        await bot.send_message(user.user_id, "–ù–∞—á–∞–ª—Å—è –ø—Ä–æ—Ü–µ—Å—Å –æ–±–º–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")
        if user.almaz >= value:
            await bot.send_message(ifellow, "–ò–≥—Ä–æ–∫ {} –æ–±–º–µ–Ω–∏–≤–∞–µ—Ç {} –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ –Ω–∞ –ö–ª—é—á–∏".format(user.id, value))
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - value)
            newValue = value * 3
            await db.Users.filter(id=user.id).update(metroCurrency=F('metroCurrency') + newValue)
            await bot.send_message(user.user_id, '–í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–º–µ–Ω—è–ª–∏ {}üíé –Ω–∞ {}üóù'.format(value, newValue))
            await bot.send_message(ifellow, "–û–±–º–µ–Ω –∑–∞–≤–µ—Ä—à—ë–Ω.")
            shopStatus[m.from_user.id] = None
    else:
        await bot.send_message(m.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        shopStatus[m.from_user.id] = None



async def buyBooster(call, user):
    sh = call.data.split('_')
    f = sh[1]
    if f == '1h':
        if user.almaz >= 10:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 10)
            await db.addBoost(user, lvl=1)
            text = "–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ ‚ö°Ô∏è–ë—É—Å—Ç–µ—Ä –Ω–∞ —á–∞—Å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –≤ —Å–≤–æ—ë–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ."
        else: text = "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé"
    elif f == '3h':
        if user.almaz >= 20:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 20)
            await db.addBoost(user, lvl=3)
            text = "–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ ‚ö°Ô∏è–ë—É—Å—Ç–µ—Ä –Ω–∞ 3 —á–∞—Å–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –≤ —Å–≤–æ—ë–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ."
        else: text = "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé"
    elif f == '5h':
        if user.almaz >= 30:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 30)
            await db.addBoost(user, lvl=5)
            text = "–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ ‚ö°Ô∏è–ë—É—Å—Ç–µ—Ä –Ω–∞ 5 —á–∞—Å–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –≤ —Å–≤–æ—ë–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ."
        else: text = "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé"
    elif f == '12h':
        if user.almaz >= 50:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 50)
            await db.addBoost(user, lvl=12)
            text = "–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ ‚ö°Ô∏è–ë—É—Å—Ç–µ—Ä –Ω–∞ 12 —á–∞—Å–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –≤ —Å–≤–æ—ë–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ."
        else: text = "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé"
    elif f == '24h':
        if user.almaz >= 65:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 65)
            await db.addBoost(user, lvl=24)
            text = "–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ ‚ö°Ô∏è–ë—É—Å—Ç–µ—Ä –Ω–∞ 24 —á–∞—Å–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –≤ —Å–≤–æ—ë–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ."
        else: text = "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé"
    elif f == '30d':
        if user.almaz >= 900:
            await db.Users.filter(id=user.id).update(almaz=F('almaz') - 900)
            await db.addBoost(user, lvl=730)
            text = "–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ ‚ö°Ô∏è–ë—É—Å—Ç–µ—Ä –Ω–∞ 1 –º–µ—Å—è—Ü. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –≤ —Å–≤–æ—ë–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ."
        else: text = "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé"
    await bot.edit_message_text(text, call.message.chat.id, call.message.message_id)

@dp.message_handler(lambda m: shopStatus and m.from_user.id in shopStatus and shopStatus[m.from_user.id]=='change_weaponName')
async def changename_weapon(m):
    await db.Users.filter(user_id=m.from_user.id).update(visualitem=m.text)
    await bot.send_message(m.chat.id, "–ì–æ—Ç–æ–≤–æ!")
    shopStatus[m.from_user.id] = None


async def donateSelectItem(call, user):
    sh = call.data.split('_')
    f = sh[1]
    if f == 'mech':
        item = "–ú–µ—á"
    elif f == 'pistol':
        item = "–ü–∏—Å—Ç–æ–ª–µ—Ç —Å –Ω–æ–∂–æ–º"
    elif f == 'katana':
        item = "–ö–∞—Ç–∞–Ω–∞"
    elif f == 'kopie':
        item = "–ö–æ–ø—å—ë"
    await user.refresh_from_db()
    checkWeapon = await db.Inventory.exists(name=item, idplayer=user.id)
    if checkWeapon:
        await bot.edit_message_text("–£–≤—ã, —Ç–∞–∫–æ–µ –æ—Ä—É–∂–∏–µ —Ç–µ–±–µ —É–∂–µ –≤—ã–¥–∞–≤–∞–ª–æ—Å—å.", call.message.chat.id, call.message.message_id)
        return
    success = await db.addItem(item, user)
    if success:
        await bot.edit_message_text("–ù–æ–≤–æ–µ –æ—Ä—É–∂–∏–µ - –≤—Å–µ–≥–¥–∞ —Ö–æ—Ä–æ—à–æ!", call.message.chat.id, call.message.message_id)
        await logBot.send_message(tradeChat, "[–ê–†–°–ï–ù–ê–õ] –ò–≥—Ä–æ–∫ {} –≤–∑—è–ª {}".format(user.username, item))
    else:
        await bot.edit_message_text("–ù–æ–≤–æ–µ –æ—Ä—É–∂–∏–µ - –≤—Å–µ–≥–¥–∞ —Ö–æ—Ä–æ—à–æ!.. –ë—ã–ª–æ –±—ã –º–µ—Å—Ç–æ...", call.message.chat.id, call.message.message_id)

async def donateSelectFrak(call, user):
    sh = call.data.split('_')
    f = sh[1]
    fraksIdChats = {'–ù–µ–±–µ—Å–Ω—ã–µ —Ä—ã—Ü–∞—Ä–∏': -1001467052649, '–í–∞–≤–∏–ª–æ–Ω': -1001196802578, '–≠–≥–∏–¥–∞': -1001321956949, '–ê–≤–∞–Ω–≥–∞—Ä–¥ –§–µ–Ω–∏–∫—Å–∞': -1001320424099}
    if user.frak != '–í–∞–≤–∏–ª–æ–Ω' and user.frak != '–ù–µ–±–µ—Å–Ω—ã–µ —Ä—ã—Ü–∞—Ä–∏' and user.frak != '–ê–≤–∞–Ω–≥–∞—Ä–¥ –§–µ–Ω–∏–∫—Å–∞' and user.frak != '–ì—Ä—è–∑–Ω–æ–µ –Ω–µ–±–æ' and user.frak != '–≠–≥–∏–¥–∞':
        try:
            await bot.kick_chat_member(fraksIdChats[user.frak], call.from_user.id)
        except:
            pass
    if f == '1':
        await db.Users.filter(id=user.id).update(almaz=F('almaz') - 50, frak="–í–∞–≤–∏–ª–æ–Ω")
        await user.refresh_from_db(fields=['frak'])
        link = 'https://t.me/joinchat/R1XCEpHn9JeFp0Q5'
    elif f == '2':
        await db.Users.filter(id=user.id).update(almaz=F('almaz') - 50, frak="–ù–µ–±–µ—Å–Ω—ã–µ —Ä—ã—Ü–∞—Ä–∏")
        await user.refresh_from_db(fields=['frak'])
        link = 'https://t.me/joinchat/V3FyacqbIgbb6oP0'
    elif f == '3':
        await db.Users.filter(id=user.id).update(almaz=F('almaz') - 50, frak="–ì—Ä—è–∑–Ω–æ–µ –Ω–µ–±–æ")
        await user.refresh_from_db(fields=['frak'])
        link = 'https://t.me/joinchat/Kd-6VBY61CSikVObkJdJJQ'
    elif f == '4':
        await db.Users.filter(id=user.id).update(almaz=F('almaz') - 50, frak="–ê–≤–∞–Ω–≥–∞—Ä–¥ –§–µ–Ω–∏–∫—Å–∞")
        await user.refresh_from_db(fields=['frak'])
        link = 'https://t.me/joinchat/ArRWh0UMj5BiNDVi'
    elif f == '5':
        await db.Users.filter(id=user.id).update(almaz=F('almaz') - 50, frak="–≠–≥–∏–¥–∞")
        await user.refresh_from_db(fields=['frak'])
        link = "https://t.me/joinchat/Tst2VTk3ix8IZlJW"
    await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} —Å–º–µ–Ω–∏–ª –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É –Ω–∞ {}".format(user.username, user.frak))
    await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ —Å–º–µ–Ω–∏–ª–∏ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É –Ω–∞ {}\n–°—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ —á–∞—Ç –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ {}".format(user.frak, link), call.message.chat.id, call.message.message_id)

@dp.message_handler(lambda m: shopStatus and m.from_user.id in shopStatus and shopStatus[m.from_user.id]=='reg_nick')
async def change_nick(m):
    global nicks
    txt = await nick_parser(m.text, reg=True)
    markup = types.ReplyKeyboardMarkup(row_width=2)
    item1 = types.KeyboardButton('–î–∞')
    item2 = types.KeyboardButton('–ù–µ—Ç')
    markup.row(item1, item2)
    await bot.send_message(m.chat.id, '–¢–≤–æ—ë –∏–º—è - {}?'.format(txt), reply_markup=markup)
    nicks[m.from_user.id] = txt
    shopStatus[m.from_user.id] = 'reg_nick_1'

@dp.message_handler(lambda m: shopStatus and m.from_user.id in shopStatus and shopStatus[m.from_user.id]=='reg_nick_1')
async def change_nick_1(m):
    global nicks
    if m.text == "–î–∞":
        checknick = await db.Users.exists(username=nicks[m.from_user.id])
        if checknick:
            checknick = await db.Users.get(username=nicks[m.from_user.id]).first()
            if checknick.username == nicks[m.from_user.id] and checknick.user_id != m.from_user.id:
                await bot.send_message(m.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–∞–∫–æ–≥–æ –≥–µ—Ä–æ—è –º—ã —É–∂–µ –∑–Ω–∞–µ–º. –ú–æ–∂–µ—Ç, —Ç–µ–±—è –∑–æ–≤—É—Ç –∫–∞–∫-–Ω–∏–±—É–¥—å –µ—â–µ?\n–ï—Å–ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—ã–ª–∞–∑–∏—Ç —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ /report")
                shopStatus[m.from_user.id] = 'reg_nick'
                return
        await db.Users.filter(user_id=m.from_user.id).update(username=nicks[m.from_user.id])
        shopStatus[m.from_user.id] = None
        await user.refresh_from_db()
        await profile(m, user)
    elif m.text == "–ù–µ—Ç":
        await bot.send_message(m.chat.id, "–¢–æ–≥–¥–∞ –Ω–∞–∑–æ–≤–∏ —Å–≤–æ—ë –Ω–∞—Å—Ç–æ—è—â–µ–µ –∏–º—è!")
        shopStatus[m.from_user.id] = 'reg_nick'



async def shopsell(call, user):
    await bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–°–º–æ—Ç—Ä–∏–º —á—Ç–æ –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å...") 
    await bot.delete_message(call.message.chat.id, call.message.message_id)
    if user.location == '–•—ç–≤–µ–Ω–±—É—Ä–≥' and user.position == '–ü–ª–æ—â–∞–¥—å' or user.location == '–ì–æ—Ä–æ–¥' and user.position == '–ü–ª–æ—â–∞–¥—å' or user.location == '–ö–∞–≤–∞–π–Ω—è' and user.position == '–ü–ª–æ—â–∞–¥—å':
        pass
    else:
        await bot.edit_message_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –ø–ª–æ—â–∞–¥–∏", call.message.chat.id, call.message.message_id)
        return
    inventory = await db.Inventory.filter(~Q(type="–†–∞—Å—Ç–µ–Ω–∏–µ"), idplayer=user.id, active=1)
    text = "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –Ω–∞ –ø—Ä–æ–¥–∞–∂—É:\n\n"
    passed = 0
    for item in inventory:
        checkShop = await db.Shop.filter(name=item.name).order_by('-id').limit(1)
        if checkShop:
            for z in checkShop:
                price = int(z.price / 3)
                text += "{} - {}üí∞ /lombard_sell_{}\n".format(item.name, price, item.id)
            passed = 1
    if passed == 0:
        text = "–ù—É –∏ —á—Ç–æ —ç—Ç–æ —Ç—ã –º–Ω–µ –ø—Ä–∏–Ω—ë—Å? –ï—â–µ –±—ã –∫–æ–Ω—Å–µ—Ä–≤–Ω—ã—Ö –±–∞–Ω–æ–∫ –Ω–∞—Å–æ–±–∏—Ä–∞–ª! –ú–Ω–µ —Ç–∞–∫–æ–π —Ö–ª–∞–º –Ω–µ –Ω—É–∂–µ–Ω!"
    if len(text) > 4096:
        for x in range(0, len(text), 4096):
            await bot.send_message(call.message.chat.id, text[x:x+4096])
    else:
        await bot.send_message(call.message.chat.id, text)


async def backtoshop(call, user):
    m1 = call.from_user.id
    m2 = call.message.chat.id
    m3 = call.message.message_id
    await shop(m1, m2, m3)

@dp.message_handler(lambda m:m.text and m.text.startswith('/lombard_sell_'))
async def lombardsell(m):
    result = m.text.replace('/lombard_sell_', '', 1).replace('@TowerOfHeaven_bot', '', 1)
    itemId = result
    item = await db.Inventory.get_or_none(id=itemId)
    if item:
        items = await db.Inventory.filter(name=item.name, idplayer=item.idplayer, active=1).count()
        if items > 1:
            coinUserStatus[m.from_user.id] = 'sellItem_{}'.format(item.id)
            await bot.send_message(m.chat.id, "–£ —Ç–µ–±—è x{} {}. –í–≤–µ–¥–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–≤–∞–µ–º—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤.".format(items, item.name))
            return
    user = await db.Users.get(user_id=m.from_user.id)
    if user.location != '–•—ç–≤–µ–Ω–±—É—Ä–≥' and user.location != '–ö–∞–≤–∞–π–Ω—è' and user.location != '–ì–æ—Ä–æ–¥':
        await bot.send_message(m.chat.id, "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞")
        return
    if not item or item.active != 1 or item.idplayer != user.id:
        text = "–û—à–∏–±–∫–∞. –ü—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        await bot.send_message(m.chat.id, text)
        return
    else:
        await db.Inventory.filter(id=itemId).delete()
        checkShop = await db.Shop.filter(name=item.name).order_by('-id').limit(1)
        if checkShop:
            for z in checkShop:
                price = int(z.price / 3)
        await db.Users.filter(id=user.id).update(money=F('money') + int(price))
        checkInSell = await db.Shop.filter(name=item.name).order_by('-count').limit(1)
        await db.Shop.filter(id=checkInSell[0].id).update(count=F('count') + 1)
        text = "–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ {} –∑–∞ {}üí∞\n".format(item.name, price)
        await logBot.send_message(tradeChat, "[–õ–û–ú–ë–ê–†–î] –ò–≥—Ä–æ–∫ {} –ø—Ä–æ–¥–∞–ª {} –∑–∞ {}üí∞".format(user.username, item.name, price))
        await achprog(user, ach='lombarder')
        await bot.send_message(m.chat.id, text)




@dp.message_handler(lambda m: coinUserStatus and m.from_user.id == m.chat.id and m.from_user.id in coinUserStatus and coinUserStatus[m.from_user.id] and coinUserStatus[m.from_user.id].startswith('sellItem_'))
async def lombardSellStep2(m):
    user = await db.Users.get(user_id=m.from_user.id)
    _itemId = coinUserStatus[m.from_user.id].split("_")
    itemId =  _itemId[1]
    if not itemId:
        coinUserStatus[m.from_user.id] = None
    item = await db.Inventory.get_or_none(id=itemId)
    if not item:
        coinUserStatus[m.from_user.id] = None
    coinUserStatus[m.from_user.id] = None
    success = 0
    checkOther = await db.Inventory.filter(name=item.name, active=1, idplayer=item.idplayer).count()
    try:
        count = int(m.text)
    except:
        await bot.send_message(m.chat.id, "–¢—ã –≤–≤—ë–ª –Ω–µ —á–∏—Å–ª–æ. –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")
        return
    if count > 0:
        pass
    else:
        await bot.send_message(m.chat.id, "–û—à–∏–±–∫–∞")
        return
    if count > checkOther: count = checkOther 
    items = await db.Inventory.filter(name=item.name, idplayer=item.idplayer, active=1).limit(count)
    success = 0
    price = 0
    profit = 0
    for x in items:
        if user.location != '–•—ç–≤–µ–Ω–±—É—Ä–≥' and user.location != '–ö–∞–≤–∞–π–Ω—è' and user.location != '–ì–æ—Ä–æ–¥':
            await bot.send_message(m.chat.id, "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞")
            return
        if not item or item.active != 1 or item.idplayer != user.id:
            text = "–û—à–∏–±–∫–∞. –ü—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
            await bot.send_message(m.chat.id, text)
            return
        else:
            itm = await db.Inventory.get(id=x.id)
            await itm.delete()
            checkShop = await db.Shop.filter(name=x.name).order_by('-id').limit(1)
            if checkShop:
                for z in checkShop:
                    price = int(z.price / 3)
            await db.Users.filter(id=user.id).update(money=F('money') + int(price))
            checkInSell = await db.Shop.filter(name=item.name).order_by('-count').limit(1)
            await db.Shop.filter(id=checkInSell[0].id).update(count=F('count') + 1)
            success += 1
            profit += price
            await achprog(user, ach='lombarder')
    await bot.send_message(m.chat.id, "–¢—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–ª —Ö{} {} –∏ –ø–æ–ª—É—á–∏–ª {}üí∞".format(success, item.name, profit))
    await logBot.send_message(tradeChat, "[–õ–û–ú–ë–ê–†–î] –ò–≥—Ä–æ–∫ {} –ø—Ä–æ–¥–∞–ª x{} {} –∑–∞ {}üí∞".format(user.username, success, item.name, profit))






###############
#   –°–ö–£–ü–©–ò–ö   #
###############
async def bomjsell(call, user):
    if user.location == '–•—ç–≤–µ–Ω–±—É—Ä–≥' and user.position == '–ü–ª–æ—â–∞–¥—å':
        pass
    else:
        await bot.edit_message_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –ø–ª–æ—â–∞–¥–∏", call.message.chat.id, call.message.message_id)
        return
    inventory = await db.Inventory.filter(idplayer=user.id, active=1, type='–•–ª–∞–º')
    text = "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –Ω–∞ –ø—Ä–æ–¥–∞–∂—É:\n\n"
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    passed = 0
    for item in inventory:
        if item.name == '–ü–µ—Ä–æ —è—Å—Ç—Ä–µ–±–∞':
            pass
        else:
            passed = 1
            name, size, bonus, atk_block, expires = await db.items(item.name, check=True)
            text += "{}\n".format(name)
            markup.add(InlineKeyboardButton('–ü—Ä–æ–¥–∞—Ç—å {}'.format(name), callback_data="bomj_sell_{}".format(item.id)))
    if passed == 0:
        await bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–í–∞–º –Ω–µ—á–µ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å")
        return                
    await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, parse_mode = 'markdown', reply_markup=markup)


async def bomj_sell(call, user):
    sh = call.data.split('_')
    itemId = sh[2]
    item = await db.Inventory.exists(id=itemId)
    if item:
        item = await db.Inventory.get(id=itemId)
    else:
        await bot.edit_message_text("–û—à–∏–±–∫–∞. –ü—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.", call.message.chat.id, call.message.message_id)
        return
    if item.active != 1:
        text = "–û—à–∏–±–∫–∞. –ü—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, parse_mode = 'markdown')
        return
    else:
        await db.Inventory.filter(id=itemId).delete()
        price = random.randint(20, 55)
        await db.Users.filter(id=user.id).update(money=F('money') + int(price))
        if user.quest == '–ü–æ—Å—Ç–∞–≤—â–∏–∫':
            quest = await db.tempQuest.filter(user_id=user.user_id, quest=user.quest, status=0)
            if quest:
                await db.tempQuest.filter(id=quest[0].id).update(progress=F('progress') + 1)
        text = "–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ {} –∑–∞ {}üí∞".format(item.name, price)
        await achprog(user, ach='skupshik')
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(InlineKeyboardButton('‚Ü©Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data="nav_bigcity_centr"))
        await logBot.send_message(tradeChat, "[–°–ö–£–ü–©–ò–ö] –ò–≥—Ä–æ–∫ {} –ø—Ä–æ–¥–∞–ª —Å–∫—É–ø—â–∏–∫—É {} –∑–∞ {}üí∞".format(user.username, item.name, price))
    await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, parse_mode = 'markdown', reply_markup=markup)









#####################
#      uniqShop     #
#####################

async def defShop(call, user):
    checkQuest = await db.Quests.get_or_none(name='–•—Ä–µ–Ω —Å –≥–æ—Ä—ã', idplayer=user.id)
    count = user.heavenCurrency
    if checkQuest and checkQuest.status == 2:
        
        donateinv = await db.Inventory.exists(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å', idplayer=user.id)
        kotelok = await db.Inventory.exists(name='–ö–æ—Ç–µ–ª–æ–∫', idplayer=user.id, active=1)
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        text = """üë∫–î—Ä–∞–∫–æ–Ω–æ–±–æ—Ä–µ—Ü ‚Äì –æ–Ω –∂–µ —Ö—Ä–µ–Ω —Å –≥–æ—Ä—ã (–±—É–∫–≤–∞–ª—å–Ω–æ). –¢–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü, –ø—Ä–∏–±—ã–≤—à–∏–π, –∫–∞–∫ –æ–Ω –≥–æ–≤–æ—Ä–∏—Ç, —Å –±–ª–∏–∑–ª–µ–∂–∞—â–∏—Ö –≥–æ—Ä, –≥–¥–µ –æ—Ö–æ—Ç–∞ –Ω–∞ —á–µ—à—É—é –≤–∏–≤–µ—Ä–Ω –ø–µ—Ä–µ—Å—Ç–∞–ª–∞ –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –¥–æ–ª–∂–Ω–æ–π –≤—ã–≥–æ–¥—ã.

    –°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ, –ø–æ—Ç–æ–º—É –æ–Ω –∏ –∑–¥–µ—Å—å, –≥–æ—Ç–æ–≤ —Å–ª–µ–ø–∏—Ç—å –∏–∑ —Ç–≤–æ–∏—Ö —á–µ—à—É–µ–∫ —á—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ–ª–µ–∑–Ω–æ–µ, –∞ —á–∞—Å—Ç—å –∏–∑ –Ω–∏—Ö –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–±–µ –≤ –∫–∞—Ä–º–∞–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–ª–∞—Ç—ã.

    ‚Äî–ß—Ç–æ? –ó–∞—á–µ–º –º–Ω–µ —Å—Ç–æ–ª—å–∫–æ —á–µ—à—É–µ–∫? –ê —Ç–µ–±—è –∫–æ–ª—ã—à–µ—Ç? –õ–∏–±–æ –æ–±–º–µ–Ω–∏–≤–∞–π—Å—è, –ª–∏–±–æ –ø—Ä–æ–≤–∞–ª–∏–≤–∞–π.
    –£ –≤–∞—Å {}üîª

    –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç:
    üß¢–ö–æ–ª—é—á–∞—è –º–∞—Å–∫–∞ | +41üõ° | üîª51
    ü¶∫–ë–∞–≥—Ä–æ–≤—ã–π –∂–∏–ª–µ—Ç | +57üõ° | üîª58
    üëñ–ë–∞–≥—Ä–æ–≤—ã–µ –ø–æ–Ω–æ–∂–∏ | +50üõ° | üîª55
    ü•æ–ë–æ—Ç–∏–Ω–∫–∏ —Å —à–∏–ø–∞–º–∏ | +37üõ° | üîª48
    üõ°–©–∏—Ç-–∫—Ä—ã–ª–æ | +36üõ° | üîª54
    üß´–ß–µ—à—É–π—á–∞—Ç–æ–µ —Å–Ω–∞–¥–æ–±—å–µ | ‚ù§Ô∏è+40 (–º–æ–∂–Ω–æ —Å–≤–µ—Ä—Ö –ª–∏–º–∏—Ç–∞) | üîª10
    üß®–ë–∞–≥—Ä–æ–≤–∞—è –±–æ–º–±–∞ | 20%üî™ –ø–æ –≤—Å–µ–º –Ω–∞—Ö–æ–¥—è—â–∏–º—Å—è –Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç–µ –∏–≥—Ä–æ–∫–∞–º| üîª13""".format(count)
        if donateinv:
            pass
        else:
            text += "\n\n+3üì¶. –ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å | üîª135"
            markup.add(InlineKeyboardButton('+3üì¶', callback_data="defshBuy_1"))
        if kotelok:
            pass
        else:
            text += "\nü•ò–ö–æ—Ç–µ–ª–æ–∫ | –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞—Ä–∏—Ç—å –∑–µ–ª—å—è –∏ –Ω–µ —Ç–æ–ª—å–∫–æ | üîª10"
            markup.add(InlineKeyboardButton('ü•ò–ö–æ—Ç–µ–ª–æ–∫', callback_data="defshBuy_9"))
        text += "\nüì¶–ö–æ—Ä–æ–±–∫–∞ —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º | –í–Ω—É—Ç—Ä–∏ –ª–µ–∂–∏—Ç üî•–û—Å–∫–æ–ª–æ–∫ –û–≥–Ω—è, üî∂–ê–º—É–ª–µ—Ç –∑–¥–æ—Ä–æ–≤—å—è, üö•–ê–Ω—Ç–∏-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ë–ú, üëò–ü–ª–∞—â-–Ω–µ–≤–∏–¥–∏–º–∫–∞, üß©–ö—É—Å–æ–∫ –ø–∞–∑–∑–ª–∞, üüß–û—Å–∫–æ–ª–æ–∫ —ç—Ñ–∏—Ä–∞ –∏–ª–∏ üü¶–û—Å–∫–æ–ª–æ–∫ –ª—å–¥–∞! | üîª250"
        markup.add(InlineKeyboardButton('üß¢–ö–æ–ª—é—á–∞—è –º–∞—Å–∫–∞', callback_data="defshBuy_2"))
        markup.add(InlineKeyboardButton('ü¶∫–ë–∞–≥—Ä–æ–≤—ã–π –∂–∏–ª–µ—Ç', callback_data="defshBuy_3"))
        markup.add(InlineKeyboardButton('üëñ–ë–∞–≥—Ä–æ–≤—ã–µ –ø–æ–Ω–æ–∂–∏', callback_data="defshBuy_4"))
        markup.add(InlineKeyboardButton('ü•æ–ë–æ—Ç–∏–Ω–∫–∏ —Å —à–∏–ø–∞–º–∏', callback_data="defshBuy_5"))
        markup.add(InlineKeyboardButton('üõ°–©–∏—Ç-–∫—Ä—ã–ª–æ', callback_data="defshBuy_6"))
        markup.add(InlineKeyboardButton('üß´–ß–µ—à—É–π—á–∞—Ç–æ–µ —Å–Ω–∞–¥–æ–±—å–µ', callback_data="defshBuy_7"))
        markup.add(InlineKeyboardButton('üß®–ë–∞–≥—Ä–æ–≤–∞—è –±–æ–º–±–∞', callback_data="defshBuy_8"))
        markup.add(InlineKeyboardButton('üì¶–ö–æ—Ä–æ–±–∫–∞ —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º', callback_data="defshBuy_10"))
        markup.add(InlineKeyboardButton('‚Ü©Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data="nav_bigcity_centr"))
        await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup, parse_mode='markdown')

    elif checkQuest and checkQuest.status == 1:
        if count > 0:
            await bot.edit_message_text("–ü—Ä–∏–Ω—ë—Å —Ç—ã, –∑–Ω–∞—á–∏—Ç, –¥—Ä–∞–∫–æ–Ω–æ–±–æ—Ä—Ü—É —ç—Ç—É —á–µ—à—É—é. –ü–æ–Ω—é—Ö–∞–≤ –µ—ë –∏ –ª–∏–∑–Ω—É–≤, –æ–Ω –ø—Ä–æ–∏–∑–Ω—ë—Å:\n-–û–∫–µ–π, —Ç–≤–æ–π —Ç–æ–≤–∞—Ä –Ω–µ –ø–∞–ª—ë–Ω–∫–∞. –≠—Ç–æ —Ö–æ—Ä–æ—à–æ, –Ω–æ –µ—Å–ª–∏ —Ç—ã –≤–¥—Ä—É–≥ –º–Ω–µ –ø—Ä–∏–Ω–µ—Å—ë—à—å —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ, —Ç–µ–±–µ –Ω–µ –ø–æ–∑–¥–æ—Ä–æ–≤–∏—Ç—Å—è, –ø–æ–Ω—è–ª?\n‚ö†Ô∏è–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –ü–æ–ª—É—á–µ–Ω –¥–æ—Å—Ç—É–ø –∫ üë∫–î—Ä–∞–∫–æ–Ω–æ–±–æ—Ä—Ü—É + 500üí∞", call.message.chat.id, call.message.message_id)
            checkQuest.status = 2
            await checkQuest.save()
            await db.Users.filter(id=user.id).update(money=F('money') + 500)
        else:
            await bot.edit_message_text("–ü–æ–¥–æ–π–¥—è –∫ –¥—Ä–∞–∫–æ–Ω–æ–±–æ—Ä—Ü—É, –æ–Ω –ø–æ—Å–ª–∞–ª —Ç–µ–±—è –ø–æ–¥–∞–ª—å—à–µ. –ï—Å–ª–∏ –±—ã—Ç—å —Ç–æ—á–Ω–µ–µ, —Ç–æ –ø—Ä–∏–Ω–µ—Å—Ç–∏ –µ–º—É —Ç–æ–≤–∞—Ä –¥–∞–±—ã —É–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ —Ç—ã –Ω–µ –æ—á–µ—Ä–µ–¥–Ω–æ–π –∫–∏–¥–∞–ª–∞ —Å –ê–≤–∏—Ç–æ.", call.message.chat.id, call.message.message_id)
    
    else:
        plusText = await giveQuest(user, '–•—Ä–µ–Ω —Å –≥–æ—Ä—ã')
        await bot.edit_message_text("üë∫–î—Ä–∞–∫–æ–Ω–æ–±–æ—Ä–µ—Ü - –∫–∞–∫ –∫—Ä–∞—Å–∏–≤–æ –∑–≤—É—á–∏—Ç! –•–æ—Ç—è –≤–∏–¥–æ–∫ —É –Ω–µ–≥–æ —Å—Ç—Ä—ë–º–Ω—ã–π... –ë–æ–ª—å—à–µ –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç –∫–∞–∫–æ–≥–æ-—Ç–æ –≥–æ–ø–Ω–∏–∫–∞. –° —Ö–æ–¥—É –æ–Ω –Ω–∞—á–∞–ª —Ç–µ–±–µ –∑–∞–ª–∏–≤–∞—Ç—å:\n-–ö–æ—Ä–æ—á–µ, —è —Å —Ç–æ–±–æ–π –≤ –∏–≥—Ä—É—à–∫–∏ –∏–≥—Ä–∞—Ç—å –Ω–µ –±—É–¥—É. –î–∞—ë—à—å —Ç–æ–≤–∞—Ä, —è —Ç–µ–±–µ –¥–∞—é –±—Ä–æ–Ω—é. –ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –¥–∞–≤–∞–π —É–±–µ–¥–∏–º—Å—è —á—Ç–æ —Ç—ã –Ω–µ —Å—É—ë—à—å –º–Ω–µ –ø–∞–ª—å...{}".format(plusText), call.message.chat.id, call.message.message_id)

async def defshBuy(call, user):
    sh = call.data.split('_')
    item = sh[1]
    if user.location != '–•—ç–≤–µ–Ω–±—É—Ä–≥':
        await bot.edit_message_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –•—ç–≤–µ–Ω–±—É—Ä–≥–∞")
        return
    countIvent = user.heavenCurrency
    count = countIvent
    donateinv = await db.Inventory.exists(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å', idplayer=user.id)
    try:
        if usesUsrs and usesUsrs[user.id] == 1:
            await bot.edit_message_text("–í–∞—à –∑–∞–∫–∞–∑ –µ—â–µ –≥–æ—Ç–æ–≤–∏—Ç—Å—è.", call.message.chat.id, call.message.message_id)
        else:
            await bot.edit_message_text("_–©–∞ —Å–¥–µ–ª–∞—é_\n\n–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–∫—É–ø–∫–∏ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.", call.message.chat.id, call.message.message_id, parse_mode='markdown')
            await defshopBuyGo(user, item, count, donateinv, countIvent, call)
    except:
        await bot.edit_message_text("_–©–∞ —Å–¥–µ–ª–∞—é_\n\n–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–∫—É–ø–∫–∏ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.", call.message.chat.id, call.message.message_id, parse_mode='markdown')
        await defshopBuyGo(user, item, count, donateinv, countIvent, call)


async def defshopBuyGo(user, item, count, donateinv, countIvent, call):
    usesUsrs[user.id] = 1
    count = user.heavenCurrency
    if item == '1':
        if user.heavenCurrency >= 125:
            if donateinv:
                text = "–î–ª—è —Ç–µ–±—è —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–æ–¥–∞–µ—Ç—Å—è."
            else:
                await db.Inventory.create(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å', active=0, size=0, type='–ò–≤–µ–Ω—Ç', bonus=0, idplayer=user.id)
                await db.Users.filter(id=user.id).update(inventorySizeMax=F('inventorySizeMax') + 3, heavenCurrency=F('heavenCurrency') - 125)
                text = "–¢—ã –ø—Ä–∏–æ–±—Ä—ë–ª +3üì¶"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üîª"
    elif item == '2':
        if count >= 51:
            item = await db.Inventory.create(name='–ö–æ–ª—é—á–∞—è –º–∞—Å–∫–∞', active=1, size=1, type='–ë—Ä–æ–Ω—è', bonus=41, idplayer=user.id, atk_block=2)
            await db.Users.filter(id=user.id).update(heavenCurrency=F('heavenCurrency') - 51)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üîª –Ω–∞ üß¢–ö–æ–ª—é—á–∞—è –º–∞—Å–∫–∞"
            await db.commitInventory(user, item)
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üîª"
    elif item == '3':
        if count >= 58:
            await db.Users.filter(id=user.id).update(heavenCurrency=F('heavenCurrency') - 58)
            item = await db.Inventory.create(name='–ë–∞–≥—Ä–æ–≤—ã–π –∂–∏–ª–µ—Ç', active=1, size=2, type='–ë—Ä–æ–Ω—è', bonus=57, idplayer=user.id, atk_block=2)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üîª –Ω–∞ ü¶∫–ë–∞–≥—Ä–æ–≤—ã–π –∂–∏–ª–µ—Ç"
            await db.commitInventory(user, item)
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üîª"
    elif item == '4':
        if count >= 55:
            await db.Users.filter(id=user.id).update(heavenCurrency=F('heavenCurrency') - 55)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üîª –Ω–∞ üëñ–ë–∞–≥—Ä–æ–≤—ã–µ –ø–æ–Ω–æ–∂–∏"
            addItem = await db.Inventory.create(name='–ë–∞–≥—Ä–æ–≤—ã–µ –ø–æ–Ω–æ–∂–∏', active=1, size=1, type='–ë—Ä–æ–Ω—è', bonus=50, idplayer=user.id, atk_block=2)
            await db.commitInventory(user, addItem)
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üîª"
    elif item == '5':
        if count >= 48:
            await db.Users.filter(id=user.id).update(heavenCurrency=F('heavenCurrency') - 48)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üîª –Ω–∞ ü•æ–ë–æ—Ç–∏–Ω–∫–∏ —Å —à–∏–ø–∞–º–∏"
            item = await db.Inventory.create(name='–ë–æ—Ç–∏–Ω–∫–∏ —Å —à–∏–ø–∞–º–∏', active=1, size=1, type='–ë—Ä–æ–Ω—è', bonus=37, idplayer=user.id, atk_block=2)
            await db.commitInventory(user, item)
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üîª"
    elif item == '6':
        if count >= 54:
            await db.Users.filter(id=user.id).update(heavenCurrency=F('heavenCurrency') - 54)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üîª –Ω–∞ üõ°–©–∏—Ç-–∫—Ä—ã–ª–æ"
            item = await db.Inventory.create(name='–©–∏—Ç-–∫—Ä—ã–ª–æ', active=1, size=3, type='–ë—Ä–æ–Ω—è', bonus=36, idplayer=user.id)
            await db.commitInventory(user, item)
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üîª"
    elif item == '7':
        if count >= 10:
            await db.Users.filter(id=user.id).update(heavenCurrency=F('heavenCurrency') - 10)
            item = await db.Inventory.create(name='–ß–µ—à—É–π—á–∞—Ç–æ–µ —Å–Ω–∞–¥–æ–±—å–µ', active=1, size=1, type='–ó–µ–ª—å–µ', bonus=40, idplayer=user.id)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üîª –Ω–∞ üß´–ß–µ—à—É–π—á–∞—Ç–æ–µ —Å–Ω–∞–¥–æ–±—å–µ"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üîª"
    elif item == '8':
        if count >= 13:
            await db.Users.filter(id=user.id).update(heavenCurrency=F('heavenCurrency') - 13)
            item = await db.Inventory.create(name='–ë–∞–≥—Ä–æ–≤–∞—è –±–æ–º–±–∞', active=1, size=1, type='–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞', bonus=0, idplayer=user.id)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üîª –Ω–∞ üß®–ë–∞–≥—Ä–æ–≤–∞—è –±–æ–º–±–∞"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üîª"
    elif item == '9':
        if count >= 10:
            await db.Users.filter(id=user.id).update(heavenCurrency=F('heavenCurrency') - 10)
            item = await db.Inventory.create(name='–ö–æ—Ç–µ–ª–æ–∫', active=1, size=2, type='–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞', bonus=0, idplayer=user.id)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üîª –Ω–∞ ü•ò–ö–æ—Ç–µ–ª–æ–∫"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üîª"
    elif item == '10':
        if count >= 250:
            await db.Users.filter(id=user.id).update(heavenCurrency=F('heavenCurrency') - 250)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üîª –Ω–∞ üì¶–ö–æ—Ä–æ–±–∫—É —Å —Å—é—Ä–ø—Ä–∏–∑–æ–º. –°–º–æ—Ç—Ä–∏–º —á—Ç–æ –≤–Ω—É—Ç—Ä–∏..."
            await bot.send_message(call.message.chat.id, text)
            await opendonatecase(user)
            usesUsrs[user.id] = 0
            return
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üîª"
    await bot.send_message(call.message.chat.id, text)
    usesUsrs[user.id] = 0

async def winterShop(call, user):
    checkQuest = await db.Quests.get_or_none(name='–ú–∞—Å—Ç–µ—Ä –Ω–∞ –≤—Å–µ —Ä—É–∫–∏', idplayer=user.id).first()
    if checkQuest and checkQuest.status == 2:
        donateinv = await db.Inventory.exists(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å 2', idplayer=user.id)
        count = user.kawaiCurrency
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        text = """_–õ–∞–≤–æ—á–∫–∞ –ª—ã—Å–µ–≥–æ! –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —ç—Ç–æ–≥–æ —Å–µ–∑–æ–Ω–∞:
    üß¢–®–∞–ø–∫–∞-—É—à–∞–Ω–∫–∞ | + 45üõ° -10%‚ùÑÔ∏è | üßä 1550
    üß•–ê–®—É–±–∞ | + 60üõ° -20%‚ùÑÔ∏è | üßä 2450
    ü©≥–õ–µ—Ç–Ω–∏–µ —à–æ—Ä—Ç—ã | + 52üõ° -10%‚ùÑÔ∏è | üßä 2175
    ü•æ–ó–∏–º–Ω–∏–µ –∫–∞–ª–æ—à–∏ | + 45üõ° -15%‚ùÑÔ∏è | üßä 1750 
    üõ°–°–∞–º–æ–Ω–∞–≥—Ä–µ–≤–∞—é—â–∞—è—Å—è –ø–æ–∫—Ä—ã—à–∫–∞ | + 40üõ° -20%‚ùÑÔ∏è | üßä 2300
    –£–∂–µ –≤ –ø—Ä–æ–¥–∞–∂–µ!_
    –£ –≤–∞—Å {}üßä

    –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç:""".format(count)
        if donateinv:
            pass
        else:
            text += "\n\n+3üì¶. –ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å | üßä 2025"
            markup.add(InlineKeyboardButton('+3üì¶', callback_data="wintershBuy_1"))
        text += "üì¶–ö–æ—Ä–æ–±–∫–∞ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏. –í–Ω—É—Ç—Ä–∏ –ª–µ–∂–∏—Ç: üî∑–ö–∞–º–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏, üçØ–ì–æ—Ä—à–æ–∫ –ª–µ–ø—Ä–µ–∫–æ–Ω–∞ –∏–ª–∏ üåø–ö–∞—Ä–º–∞–Ω–Ω–∞—è –¥—Ä–∏–∞–¥–∞ | üßä 9000"
        markup.add(InlineKeyboardButton('üß¢–®–∞–ø–∫–∞-—É—à–∞–Ω–∫–∞', callback_data="wintershBuy_2"))
        markup.add(InlineKeyboardButton('üß•–ê–®—É–±–∞', callback_data="wintershBuy_3"))
        markup.add(InlineKeyboardButton('ü©≥–õ–µ—Ç–Ω–∏–µ —à–æ—Ä—Ç—ã', callback_data="wintershBuy_4"))
        markup.add(InlineKeyboardButton('ü•æ–ó–∏–º–Ω–∏–µ –∫–∞–ª–æ—à–∏', callback_data="wintershBuy_5"))
        markup.add(InlineKeyboardButton('üõ°–°–∞–º–æ–Ω–∞–≥—Ä–µ–≤–∞—é—â–∞—è—Å—è –ø–æ–∫—Ä—ã—à–∫–∞', callback_data="wintershBuy_6"))
        markup.add(InlineKeyboardButton('üß´–ß–µ—à—É–π—á–∞—Ç–æ–µ —Å–Ω–∞–¥–æ–±—å–µ', callback_data="wintershBuy_7"))
        markup.add(InlineKeyboardButton('+50üì¶(ü•ò)', callback_data="wintershBuy_kotelokLimit"))
        markup.add(InlineKeyboardButton('üì¶–ö–æ—Ä–æ–±–∫–∞ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏', callback_data="wintershBuy_9"))
        markup.add(InlineKeyboardButton('‚Ü©Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data="nav_wintercity_centr"))
        text += "\nüß´–ß–µ—à—É–π—á–∞—Ç–æ–µ —Å–Ω–∞–¥–æ–±—å–µ | ‚ù§Ô∏è+40 (–º–æ–∂–Ω–æ —Å–≤–µ—Ä—Ö –ª–∏–º–∏—Ç–∞) | üßä 650"
        text += "\n+50üì¶(ü•ò) | –†–∞—Å—à–∏—Ä—è–µ—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∫–æ—Ç–µ–ª–∫–∞ (–ª–∏–º–∏—Ç –Ω–∞ –∫–∞–∂–¥—ã–π –≤–∏–¥ —Ü–≤–µ—Ç–æ–≤) –Ω–∞ 50üì¶ | üßä 1000"
        #text += "\nüîÆ–ü–æ–≥–æ–¥–Ω—ã–π —à–∞—Ä | –ü–æ–∑–≤–æ–ª—è–µ—Ç —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã | üßä 3500"
        await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup, parse_mode='markdown')


    elif checkQuest and checkQuest.status == 1:
        count = user.kawaiCurrency
        if count > 0:
            await bot.edit_message_text("–ü—Ä–∏–Ω—ë—Å —Ç—ã, –∑–Ω–∞—á–∏—Ç, –õ—ã—Å–µ–º—É —ç—Ç–æ—Ç —Å–Ω—É–Ω–µ—Ü. –ó–∞—á–µ–º-—Ç–æ –æ–Ω –ª–∏–∑–Ω—É–ª –µ–≥–æ –∏ –∑–∞–∫–∏–Ω—É–ª –≤ —Ä–æ—Ç –∏... –ó–∞—Å—Ç–æ–Ω–∞–ª, —Å—É–¥—è –ø–æ –≤—Å–µ–º—É, –æ—Ç —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è. –ß—Ç–æ —Ç—É—Ç –≤–æ–æ–±—â–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç?\n-–û –¥–∞, –º–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è... –ö–∞–∫ –∂–µ —Ö–æ—Ä–æ—à–æ... –õ–∞–¥–Ω–æ, –º–Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç —Ç–≤–æ–∏ –°–Ω—É–Ω—Ü—ã. –î–∞–≤–∞–π –¥–∞–ª—å—à–µ.\n‚ö†Ô∏è–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –ü–æ—Ç–µ—Ä—è–Ω–æ: 1 üßä–°–Ω—É–Ω–µ—Ü\n–ü–æ–ª—É—á–µ–Ω –¥–æ—Å—Ç—É–ø –∫ –õ—ã—Å–æ–º—É –∏–∑ –ë—Ä—É–∑–∑–µ—Ä—Å + 750üí∞", call.message.chat.id, call.message.message_id)
            checkQuest.status = 2
            await checkQuest.save()
            await db.Users.filter(id=user.id).update(money=F('money') + 750, kawaiCurrency=F('kawaiCurrency') - 1)
        else:
            await bot.edit_message_text("–ü–æ–¥–æ–π–¥—è –∫ –õ—ã—Å–µ–º—É, –æ–Ω –ø–æ—Å–ª–∞–ª —Ç–µ–±—è –ø–æ–¥–∞–ª—å—à–µ. –ï—Å–ª–∏ –±—ã—Ç—å —Ç–æ—á–Ω–µ–µ, —Ç–æ –≤ –ó–∞—Å–Ω–µ–∂–µ–Ω–Ω—ã–π –ª–µ—Å, –≥–¥–µ —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å üßä–°–Ω—É–Ω—Ü—ã. –ö–∞–∫–æ–π-—Ç–æ –æ–Ω –Ω–µ—Ä–≤–Ω—ã–π...", call.message.chat.id, call.message.message_id)
    
    else:
        plusText = await giveQuest(user, '–ú–∞—Å—Ç–µ—Ä –Ω–∞ –≤—Å–µ —Ä—É–∫–∏')
        await bot.edit_message_text("–ê—Ö, –∫–∞–∫–æ–π –º—É–∂—á–∏–Ω–∞! –ü–æ –≥–æ–ª–æ–º—É —Ç–æ—Ä—Å—É –≤–∏–¥–Ω–æ –Ω–∞–∫–∞—á–∞–Ω–Ω–æ–µ —Ç–µ–ª–æ, –∞ –ø–æ–∑–∞–¥–∏ –Ω–µ–≥–æ –≤–∏—Å–∏—Ç –º–Ω–æ–≥–æ –æ–¥–µ–∂–¥—ã —Å –ø–æ–¥–ø–∏—Å—è–º–∏ –Ω–∞ –Ω–∏—Ö - ''–°–∞–Ω—Ç–µ—Ö–Ω–∏–∫'', ''–ú–æ–Ω—Ç–∞–∂–Ω–∏–∫'', ''–î–æ–∫—Ç–æ—Ä''... –£—Ö —Ç—ã, –Ω–µ—É–∂–µ–ª–∏ —ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫ —á–∏–Ω–∏—Ç —Ç—Ä—É–±—ã, –ø–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ –ª–µ—á–∏—Ç –ª—é–¥–µ–π... –ß—Ç–æ?\n-–î–æ–ª–≥–æ —Å—Ç–æ—è—Ç—å –±—É–¥–µ—à—å, –Ω–µ –≤–∏–¥–∏—à—å, —É –º–µ–Ω—è –≤—ã–∑–æ–≤?.. –ê, —Å—Ç–æ–ø, —Ç–∞–∫ —Ç—ã —Ç—É—Ç –Ω–æ–≤–µ–Ω—å–∫–∏–π? –ò–Ω—Ç–∏–º –∏–ª–∏ –±—Ä–æ–Ω—è? –ï—Å–ª–∏ –±—Ä–æ–Ω—è, –¥–∞–π –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–≤–æ–∏ üßä–°–Ω—É–Ω—Ü—ã... –ù–µ –∑–Ω–∞–µ—à—å —á—Ç–æ —ç—Ç–æ? –ú–¥–∞ —É–∂.. –ò–¥–∏ –≤ –ª–µ—Å, —É–∑–Ω–∞–µ—à—å –∏–∑ —Ç—ã—Å—è—á–∏! {}".format(plusText), call.message.chat.id, call.message.message_id)



usesUsrs = {}
async def wintershopBuy(call, user):
    sh = call.data.split('_')
    item = sh[1]
    if user.location != '–ö–∞–≤–∞–π–Ω—è':
        await bot.edit_message_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –ö–∞–≤–∞–π–Ω–∏")
        return
    countIvent = user.kawaiCurrency
    count = countIvent
    try:
        if usesUsrs and usesUsrs[user.id] == 1:
            await bot.edit_message_text("–í–∞—à –∑–∞–∫–∞–∑ –µ—â–µ –≥–æ—Ç–æ–≤–∏—Ç—Å—è.", call.message.chat.id, call.message.message_id)
        else:
            donateinv = await db.Inventory.exists(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å 2', idplayer=user.id)
            await bot.edit_message_text("_–©–∞ —Å–¥–µ–ª–∞—é_\n\n–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–∫—É–ø–∫–∏ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.", call.message.chat.id, call.message.message_id, parse_mode='markdown')
            await wintershopBuyGo(user, item, count, donateinv, countIvent, call)
    except:
        await bot.edit_message_text("_–©–∞ —Å–¥–µ–ª–∞—é_\n\n–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–∫—É–ø–∫–∏ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.", call.message.chat.id, call.message.message_id, parse_mode='markdown')
        donateinv = await db.Inventory.exists(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å 2', idplayer=user.id)
        await wintershopBuyGo(user, item, count, donateinv, countIvent, call)


async def wintershopBuyGo(user, item, count, donateinv, countIvent, call):
    usesUsrs[user.id] = 1
    count = user.kawaiCurrency
    if item == '1':
        if count >= 2025:
            if donateinv:
                text = "–î–ª—è —Ç–µ–±—è —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–æ–¥–∞–µ—Ç—Å—è."
            else:
                await db.Inventory.create(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å 2', active=0, size=0, type='–ò–≤–µ–Ω—Ç', bonus=0, idplayer=user.id)
                await db.Users.filter(id=user.id).update(inventorySizeMax=F('inventorySizeMax') + 3, kawaiCurrency=F('kawaiCurrency') - 2025)
                text = "–¢—ã –ø—Ä–∏–æ–±—Ä—ë–ª +3üì¶"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –°–Ω—É–Ω—Ü–æ–≤"
    elif item == '2':
        if count >= 1550:
            await db.Users.filter(id=user.id).update(kawaiCurrency=F('kawaiCurrency') - 1550)
            item = await db.Inventory.create(name='–®–∞–ø–∫–∞-—É—à–∞–Ω–∫–∞', active=1, size=1, type='–ë—Ä–æ–Ω—è', bonus=45, idplayer=user.id, atk_block=4)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üßä –Ω–∞ üß¢–®–∞–ø–∫–∞-—É—à–∞–Ω–∫–∞"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üßä"
    elif item == '3':
        if count >= 2450:
            await db.Users.filter(id=user.id).update(kawaiCurrency=F('kawaiCurrency') - 2450)
            item = await db.Inventory.create(name='–ê–®—É–±–∞', active=1, size=2, type='–ë—Ä–æ–Ω—è', bonus=60, idplayer=user.id, atk_block=4)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üßä –Ω–∞ üß•–ê–®—É–±–∞"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üßä"
    elif item == '4':
        if count >= 2175:
            await db.Users.filter(id=user.id).update(kawaiCurrency=F('kawaiCurrency') - 2175)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üßä –Ω–∞ ü©≥–õ–µ—Ç–Ω–∏–µ —à–æ—Ä—Ç—ã"
            item = await db.Inventory.create(name='–õ–µ—Ç–Ω–∏–µ —à–æ—Ä—Ç—ã', active=1, size=1, type='–ë—Ä–æ–Ω—è', bonus=52, idplayer=user.id, atk_block=4)
            await db.commitInventory(user, item)
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üßä"
    elif item == '5':
        if count >= 1750:
            await db.Users.filter(id=user.id).update(kawaiCurrency=F('kawaiCurrency') - 1750)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üßä –Ω–∞ ü•æ–ó–∏–º–Ω–∏–µ –∫–∞–ª–æ—à–∏"
            item = await db.Inventory.create(name='–ó–∏–º–Ω–∏–µ –∫–∞–ª–æ—à–∏', active=1, size=1, type='–ë—Ä–æ–Ω—è', bonus=45, idplayer=user.id, atk_block=4)
            await db.commitInventory(user, item)
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üßä"
    elif item == '6':
        if count >= 2300:
            await db.Users.filter(id=user.id).update(kawaiCurrency=F('kawaiCurrency') - 2300)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üßä –Ω–∞ üõ°–°–∞–º–æ–Ω–∞–≥—Ä–µ–≤–∞—é—â–∞—è—Å—è –ø–æ–∫—Ä—ã—à–∫–∞"
            item = await db.Inventory.create(name='–°–∞–º–æ–Ω–∞–≥—Ä–µ–≤–∞—é—â–∞—è—Å—è –ø–æ–∫—Ä—ã—à–∫–∞', active=1, size=3, type='–ë—Ä–æ–Ω—è', bonus=40, idplayer=user.id)
            await db.commitInventory(user, item)
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üßä"
    elif item == '7':
        if count >= 650:
            await db.Users.filter(id=user.id).update(kawaiCurrency=F('kawaiCurrency') - 650)
            item = await db.Inventory.create(name='–ß–µ—à—É–π—á–∞—Ç–æ–µ —Å–Ω–∞–¥–æ–±—å–µ', active=1, size=1, type='–ó–µ–ª—å–µ', bonus=40, idplayer=user.id)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üßä –Ω–∞ üß´–ß–µ—à—É–π—á–∞—Ç–æ–µ —Å–Ω–∞–¥–æ–±—å–µ"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üßä"
    elif item == '8':
        if count >= 3500:
            await db.Users.filter(id=user.id).update(kawaiCurrency=F('kawaiCurrency') - 3500)
            item = await db.Inventory.create(name='–ü–æ–≥–æ–¥–Ω—ã–π —à–∞—Ä', active=1, size=1, type='–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞', bonus=0, idplayer=user.id)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üßä –Ω–∞ üîÆ–ü–æ–≥–æ–¥–Ω—ã–π —à–∞—Ä"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üßä"
    elif item == '9':
        if count >= 9000:
            await db.Users.filter(id=user.id).update(kawaiCurrency=F('kawaiCurrency') - 9000)
            await db.addItem('–ö–æ—Ä–æ–±–∫–∞ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏', user, arg='a')
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üßä –Ω–∞ üì¶–ö–æ—Ä–æ–±–∫—É —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏."
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üßä"
    elif item == 'kotelokLimit':
        if count >= 1000:
            await db.Users.filter(id=user.id).update(kawaiCurrency=F('kawaiCurrency') - 1000)
            await db.Users.filter(id=user.id).update(kotelokLimit=F('kotelokLimit') + 50)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üßä –Ω–∞ +50üì¶(ü•ò)"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üßä"
    await bot.send_message(call.message.chat.id, text)
    usesUsrs[user.id] = 0



async def oceanshop(call, user):
    donateinv = await db.Inventory.exists(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å 3', idplayer=user.id)
    countIvent = user.oceanCurrency
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    text = """_–í —ç—Ç–æ–º —Å–µ–∑–æ–Ω–µ —É –¢–∞–±–µ—Ä–Ω–∞–º–∞ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã:
ü•Ω–û—á–∫–∏ | + 80üõ° -10%‚òÅÔ∏è -8%‚öîÔ∏è | üíß 120
ü©±–ö—É–ø–∞–ª—å–Ω–∏–∫ –†–∞—Å–∫—É–ª–æ–≤–æ–π | + 90üõ° -25%‚òÅÔ∏è -8%‚öîÔ∏è | üíß 145
ü©≤–ü–ª–∞–≤–∫–∏ | + 75üõ° -15%‚òÅÔ∏è -8%‚öîÔ∏è | üíß 125
üõ∂–î—ã—Ä—è–≤–∞—è –ª–æ–¥–∫–∞ | + 65üõ° -25%‚òÅÔ∏è -8%‚öîÔ∏è | üíß 115
–£–∂–µ –≤ –ø—Ä–æ–¥–∞–∂–µ!_
–£ –≤–∞—Å {}üíß

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç:

üßª–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ | –ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–±–∏–≤–∞—Ç—å –≤–ª–∞–∂–Ω–æ—Å—Ç—å | 100 üí∞
""".format(countIvent)
    checkTp = await db.Inventory.exists(name='–ü—è—Ç—ã–π —Å–µ–∫—Ç–æ—Ä', idplayer=user.id)
    if not checkTp:
        markup.add(InlineKeyboardButton('üìú–°–≤–∏—Ç–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –Ω–∞ –ø—è—Ç—ã–π —Å–µ–∫—Ç–æ—Ä –ø–∏—Ä–∞–º–∏–¥—ã', callback_data="ocshBuy_9"))
        text += "\nüìú–°–≤–∏—Ç–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –Ω–∞ –ø—è—Ç—ã–π —Å–µ–∫—Ç–æ—Ä –ø–∏—Ä–∞–º–∏–¥—ã | üíß 375"
    text += "\nüé£–ü—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞ | –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä—ã–±–∞—á–∏—Ç—å –≤ –ø—Ä—É–¥–µ –û–∫—É—Å –õ–æ–∫—É—Å–∞ | üíß 150"
    if donateinv:
        pass
    else:
        text += "+4üì¶. –ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å | üíß 65"
        markup.add(InlineKeyboardButton('+4üì¶', callback_data="ocshBuy_1"))
    markup.add(InlineKeyboardButton('ü•Ω–û—á–∫–∏', callback_data="ocshBuy_2"))
    markup.add(InlineKeyboardButton('ü©±–ö—É–ø–∞–ª—å–Ω–∏–∫ –†–∞—Å–∫—É–ª–æ–≤–æ–π', callback_data="ocshBuy_3"))
    markup.add(InlineKeyboardButton('ü©≤–ü–ª–∞–≤–∫–∏', callback_data="ocshBuy_4"))
    markup.add(InlineKeyboardButton('üõ∂–î—ã—Ä—è–≤–∞—è –ª–æ–¥–∫–∞', callback_data="ocshBuy_5"))
    markup.add(InlineKeyboardButton('üßª–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ', callback_data="ocshBuy_6"))
    markup.add(InlineKeyboardButton('üé£–ü—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞', callback_data="ocshBuy_8"))
    markup.add(InlineKeyboardButton('‚Ü©Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data="nav_oceanus_centr"))
    await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup, parse_mode='markdown')

async def ocshopbuy(call, user):
    sh = call.data.split('_')
    item = sh[1]
    if user.location != '–û–∫–µ–∞–Ω—É—Å':
        await bot.edit_message_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –û–∫–µ–∞–Ω—É—Å–∞")
        return
    count = user.oceanCurrency
    donateinv = await db.Inventory.exists(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å 3', idplayer=user.id)
    try:
        if usesUsrs and usesUsrs[user.id] == 1:
            await bot.edit_message_text("–í–∞—à –∑–∞–∫–∞–∑ –µ—â–µ –≥–æ—Ç–æ–≤–∏—Ç—Å—è.", call.message.chat.id, call.message.message_id)
        else:
            await bot.edit_message_text("_–©–∞ —Å–¥–µ–ª–∞—é_\n\n–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–∫—É–ø–∫–∏ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.", call.message.chat.id, call.message.message_id, parse_mode='markdown')
            await ochopBuyGo(user, item, count, donateinv, call)
    except:
        await bot.edit_message_text("_–©–∞ —Å–¥–µ–ª–∞—é_\n\n–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–∫—É–ø–∫–∏ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.", call.message.chat.id, call.message.message_id, parse_mode='markdown')
        await ochopBuyGo(user, item, count, donateinv, call)


async def ochopBuyGo(user, item, count, donateinv, call):
    usesUsrs[user.id] = 1
    count = user.oceanCurrency
    if item == '1':
        if count >= 65:
            if donateinv:
                text = "–î–ª—è —Ç–µ–±—è —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–æ–¥–∞–µ—Ç—Å—è."
            else:
                await db.Inventory.create(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å 3', active=0, size=0, type='–ò–≤–µ–Ω—Ç', bonus=0, idplayer=user.id)
                await db.Users.filter(id=user.id).update(inventorySizeMax=F('inventorySizeMax') + 4, oceanCurrency=F('oceanCurrency') - 65)
                text = "–¢—ã –ø—Ä–∏–æ–±—Ä—ë–ª +4üì¶"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíß"
    elif item == '2':
        if count >= 120:
            await db.Users.filter(id=user.id).update(oceanCurrency=F('oceanCurrency') - 120)
            item = await db.Inventory.create(name='–û—á–∫–∏', active=1, size=1, type='–ë—Ä–æ–Ω—è', bonus=80, idplayer=user.id, atk_block=8)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üíß –Ω–∞ ü•Ω–û—á–∫–∏"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíß"
    elif item == '3':
        if count >= 145:
            await db.Users.filter(id=user.id).update(oceanCurrency=F('oceanCurrency') - 145)
            item = await db.Inventory.create(name='–ö—É–ø–∞–ª—å–Ω–∏–∫ –†–∞—Å–∫—É–ª–æ–≤–æ–π', active=1, size=2, type='–ë—Ä–æ–Ω—è', bonus=90, idplayer=user.id, atk_block=8)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üíß –Ω–∞ ü©±–ö—É–ø–∞–ª—å–Ω–∏–∫ –†–∞—Å–∫—É–ª–æ–≤–æ–π"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíß"
    elif item == '4':
        if count >= 125:
            await db.Users.filter(id=user.id).update(oceanCurrency=F('oceanCurrency') - 125)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üíß –Ω–∞ ü©≤–ü–ª–∞–≤–∫–∏"
            item = await db.Inventory.create(name='–ü–ª–∞–≤–∫–∏', active=1, size=1, type='–ë—Ä–æ–Ω—è', bonus=75, idplayer=user.id, atk_block=8)
            await db.commitInventory(user, item)
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíß"
    elif item == '5':
        if count >= 115:
            await db.Users.filter(id=user.id).update(oceanCurrency=F('oceanCurrency') - 115)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üíß –Ω–∞ üõ∂–î—ã—Ä—è–≤–∞—è –ª–æ–¥–∫–∞"
            item = await db.Inventory.create(name='–î—ã—Ä—è–≤–∞—è –ª–æ–¥–∫–∞', active=1, size=1, type='–ë—Ä–æ–Ω—è', bonus=65, idplayer=user.id, atk_block=8)
            await db.commitInventory(user, item)
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíß"
    elif item == '6':
        if user.money >= 100:
            success = await db.addItem('–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ', user)
            if success:
                await db.Users.filter(id=user.id).update(money=F('money') - 100)
                text = "–¢—ã –∫—É–ø–∏–ª üßª–ü–æ–ª–æ—Ç–µ–Ω—Ü–µ"
            else:
                text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ."
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üí∞"
    elif item == '8':
        if count >= 150:
            await db.Users.filter(id=user.id).update(oceanCurrency=F('oceanCurrency') - 150)
            item = await db.Inventory.create(name='–ü—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞', active=1, size=2, type='–†—ã–±–∞–ª–∫–∞', bonus=0, idplayer=user.id)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üíß –Ω–∞ üé£–ü—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíß"
    elif item == '9':
        if count >= 375:
            await db.Users.filter(id=user.id).update(oceanCurrency=F('oceanCurrency') - 375)
            item = await db.Inventory.create(name='–ü—è—Ç—ã–π —Å–µ–∫—Ç–æ—Ä', active=0, size=0, type='–ü—Ä–æ—á–µ–µ', bonus=0, idplayer=user.id)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üíß –Ω–∞ üìú–°–≤–∏—Ç–æ–∫ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞ –Ω–∞ –ø—è—Ç—ã–π —Å–µ–∫—Ç–æ—Ä –ø–∏—Ä–∞–º–∏–¥—ã"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíß"
    await bot.send_message(call.message.chat.id, text)
    usesUsrs[user.id] = 0


async def radarshop(call, user):
    donateinv = await db.Inventory.exists(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å 4', idplayer=user.id)
    countIvent = user.radarCurrency
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    text = """_–¢–∞–±–µ—Ä–≤–∞–º! –ò –≤–∞—à–∏–º –∏ –Ω–∞—à–∏–º! –õ—É—á—à–∞—è –±—Ä–æ–Ω—è, –∏–¥–µ–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞, –∏ –Ω–µ —Ç–æ–ª—å–∫–æ!
‚õë–®–ª–µ–º —É—Å–∏–ª–µ–Ω–Ω—ã–π | + 65üõ° -6%‚öîÔ∏è | ‚ô¶Ô∏è 300
üß•–ü–ª–∞—â-—É—è—â | + 70üõ° -6%‚öîÔ∏è | ‚ô¶Ô∏è 325
ü©≥–®–æ—Ä—Ç–∏–∫–∏ | + 60üõ° -6%‚öîÔ∏è | ‚ô¶Ô∏è 275
ü•æ–°—Ç–∞–ª–∫–µ—Ä—Å–∫–∏–µ –±–æ—Ç–∏–Ω–∫–∏ | + 50üõ° -6%‚öîÔ∏è | ‚ô¶Ô∏è 285
–£–∂–µ –≤ –ø—Ä–æ–¥–∞–∂–µ!_
–£ –≤–∞—Å {}‚ô¶Ô∏è

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç:

500üßø | –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É –°—ã—á–∞ | 40‚ô¶Ô∏è
""".format(countIvent)
    if donateinv:
        pass
    else:
        text += "+5üì¶. –ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å | ‚ô¶Ô∏è 200"
        markup.add(InlineKeyboardButton('+5üì¶', callback_data="radarBuy_1"))
    markup.add(InlineKeyboardButton('‚õë–®–ª–µ–º —É—Å–∏–ª–µ–Ω–Ω—ã–π', callback_data="radarBuy_2"))
    markup.add(InlineKeyboardButton('üß•–ü–ª–∞—â-—É—è—â', callback_data="radarBuy_3"))
    markup.add(InlineKeyboardButton('ü©≥–®–æ—Ä—Ç–∏–∫–∏', callback_data="radarBuy_4"))
    markup.add(InlineKeyboardButton('ü•æ–°—Ç–∞–ª–∫–µ—Ä—Å–∫–∏–µ –±–æ—Ç–∏–Ω–∫–∏', callback_data="radarBuy_5"))
    markup.add(InlineKeyboardButton('500üßø', callback_data="radarBuy_6"))
    markup.add(InlineKeyboardButton('‚Ü©Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data="nav_radar_centr"))
    await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup, parse_mode='markdown')

async def radarBuy(call, user):
    sh = call.data.split('_')
    item = sh[1]
    if user.location != '–†–∞–¥–∞—Ä':
        await bot.edit_message_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –†–∞–¥–∞—Ä–∞")
        return
    count = user.radarCurrency
    donateinv = await db.Inventory.exists(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å 4', idplayer=user.id)
    try:
        if usesUsrs and usesUsrs[user.id] == 1:
            await bot.edit_message_text("–í–∞—à –∑–∞–∫–∞–∑ –µ—â–µ –≥–æ—Ç–æ–≤–∏—Ç—Å—è.", call.message.chat.id, call.message.message_id)
        else:
            await bot.edit_message_text("_–©–∞ —Å–¥–µ–ª–∞—é_\n\n–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–∫—É–ø–∫–∏ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.", call.message.chat.id, call.message.message_id, parse_mode='markdown')
            await radarBuyGo(user, item, count, donateinv, call)
    except:
        await bot.edit_message_text("_–©–∞ —Å–¥–µ–ª–∞—é_\n\n–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–∫—É–ø–∫–∏ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.", call.message.chat.id, call.message.message_id, parse_mode='markdown')
        await radarBuyGo(user, item, count, donateinv, call)


async def radarBuyGo(user, item, count, donateinv, call):
    usesUsrs[user.id] = 1
    if item == '1':
        if count >= 200:
            if donateinv:
                text = "–î–ª—è —Ç–µ–±—è —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–æ–¥–∞–µ—Ç—Å—è."
            else:
                await db.Inventory.create(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å 4', active=0, size=0, type='–ò–≤–µ–Ω—Ç', bonus=0, idplayer=user.id)
                await db.Users.filter(id=user.id).update(inventorySizeMax=F('inventorySizeMax') + 5, radarCurrency=F('radarCurrency') - 200)
                text = "–¢—ã –ø—Ä–∏–æ–±—Ä—ë–ª +5üì¶"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ‚ô¶Ô∏è"
    elif item == '2':
        if count >= 300:
            await db.Users.filter(id=user.id).update(radarCurrency=F('radarCurrency') - 300)
            item = await db.Inventory.create(name='–®–ª–µ–º —É—Å–∏–ª–µ–Ω–Ω—ã–π', active=1, size=1, type='–ë—Ä–æ–Ω—è', bonus=65, idplayer=user.id, atk_block=6)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª ‚ô¶Ô∏è –Ω–∞ ‚õë–®–ª–µ–º —É—Å–∏–ª–µ–Ω–Ω—ã–π"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ‚ô¶Ô∏è"
    elif item == '3':
        if count >= 325:
            await db.Users.filter(id=user.id).update(radarCurrency=F('radarCurrency') - 325)
            item = await db.Inventory.create(name='–ü–ª–∞—â-—É—è—â', active=1, size=2, type='–ë—Ä–æ–Ω—è', bonus=70, idplayer=user.id, atk_block=6)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª ‚ô¶Ô∏è –Ω–∞ üß•–ü–ª–∞—â-—É—è—â"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ‚ô¶Ô∏è"
    elif item == '4':
        if count >= 275:
            await db.Users.filter(id=user.id).update(radarCurrency=F('radarCurrency') - 245)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª ‚ô¶Ô∏è –Ω–∞ ü©≥–®–æ—Ä—Ç–∏–∫–∏"
            item = await db.Inventory.create(name='–®–æ—Ä—Ç–∏–∫–∏', active=1, size=1, type='–ë—Ä–æ–Ω—è', bonus=60, idplayer=user.id, atk_block=6)
            await db.commitInventory(user, item)
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ‚ô¶Ô∏è"
    elif item == '5':
        if count >= 285:
            await db.Users.filter(id=user.id).update(radarCurrency=F('radarCurrency') - 255)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª ‚ô¶Ô∏è –Ω–∞ ü•æ–°—Ç–∞–ª–∫–µ—Ä—Å–∫–∏–µ –±–æ—Ç–∏–Ω–∫–∏"
            item = await db.Inventory.create(name='–°—Ç–∞–ª–∫–µ—Ä—Å–∫–∏–µ –±–æ—Ç–∏–Ω–∫–∏', active=1, size=1, type='–ë—Ä–æ–Ω—è', bonus=50, idplayer=user.id, atk_block=6)
            await db.commitInventory(user, item)
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ‚ô¶Ô∏è"
    elif item == '6':
        if count >= 40:
            await db.Users.filter(id=user.id).update(radarCurrency=F('radarCurrency') - 40, shmekli=F('shmekli') + 500)
            text = "–¢—ã —É—Å–ø–µ—à–Ω–æ –æ–±–º–µ–Ω—è–ª ‚ô¶Ô∏è –Ω–∞ 500üßø"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ‚ô¶Ô∏è"
    elif item == '8':
        if count >= 40:
            await db.Users.filter(id=user.id).update(radarCurrency=F('radarCurrency') - 40)
            await db.Users.filter(id=user.id).update(artSize=F('artSize') + 5)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª ‚ô¶Ô∏è –Ω–∞ +5üì¶ (–ú–µ—à–æ—á–µ–∫ –¥–ª—è —Ö–ª–∞–º–∞)"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç ‚ô¶Ô∏è"
    await bot.send_message(call.message.chat.id, text)
    usesUsrs[user.id] = 0


async def metroshop(call, user):
    donateinv = await db.Inventory.exists(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å 5', idplayer=user.id)
    countIvent = user.metroCurrency
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    text = """_–ö–æ–Ω—Å–µ—Ä–≤–Ω—ã—Ö –±–∞–Ω–æ–∫ –Ω–µ—Ç, –Ω–æ –µ—Å—Ç—å –∫–æ–µ-—á—Ç–æ –ø–æ–∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ:
ü•Ω–®–ª–µ–º | + 95üõ° -10%‚öîÔ∏è | üóù 120
üëï–ö–æ—Å—Ç—é–º —Ö–∏–º–∑–∞—â–∏—Ç—ã | + 110üõ° -10%‚öîÔ∏è | üóù 145
ü©≥–®–æ—Ä—Ç–∏–∫–∏ 2.0 | + 90üõ° -10%‚öîÔ∏è | üóù 125
ü•æ–ü—Ä–æ—Ç–∏–≤–æ—Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω—ã–µ –±–æ—Ç–∏–Ω–∫–∏ | + 85üõ° -10%‚öîÔ∏è | üóù 115
–£–∂–µ –≤ –ø—Ä–æ–¥–∞–∂–µ!_
–£ –≤–∞—Å {}üóù

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç:

ü§ø–ü—Ä–æ—Ç–∏–≤–æ–≥–∞–∑ | –ñ–∏–∑–Ω–µ–Ω–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º –≤ –ú–µ—Ç—Ä–æ | 2000 üí∞
üï≥–§–∏–ª—å—Ç—Ä—ã | –ü–æ–º–æ–≥—É—Ç –ø—Ä–æ–∂–∏—Ç—å —Ç–µ–±–µ –Ω–∞ 5-–ö –¥–æ–ª—å—à–µ | 1 üóù

""".format(countIvent)
    if donateinv:
        pass
    else:
        text += "+4üì¶. –ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å | üóù 150"
        markup.add(InlineKeyboardButton('+4üì¶', callback_data="mtshBuy_1"))
    text += "\nüé£–ù–µ–ø—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞ | –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä—ã–±–∞—á–∏—Ç—å –≤ –ø—Ä—É–¥–µ –û–∫—É—Å –õ–æ–∫—É—Å–∞ | üóù 150"
    text += "\nüì¶–ö–æ—Ä–æ–±–∫–∞ —Å —Ä–µ—Ü–µ–ø—Ç–æ–º | –ü–æ–ø—ã—Ç–∞–π—Ç–µ —É–¥–∞—á—É –∏ –¥–æ—Å—Ç–∞–Ω—å—Ç–µ –∏–∑–Ω—É—Ç—Ä–∏ –æ–¥–∏–Ω –∏–∑ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –¥–ª—è –∫–æ—Ç–µ–ª–∫–∞! | üóù 200"
    markup.add(InlineKeyboardButton('ü•Ω–®–ª–µ–º', callback_data="mtshBuy_2"))
    markup.add(InlineKeyboardButton('üëï–ö–æ—Å—Ç—é–º —Ö–∏–º–∑–∞—â–∏—Ç—ã', callback_data="mtshBuy_3"))
    markup.add(InlineKeyboardButton('ü©≥–®–æ—Ä—Ç–∏–∫–∏ 2.0', callback_data="mtshBuy_4"))
    markup.add(InlineKeyboardButton('ü•æ–ü—Ä–æ—Ç–∏–≤–æ—Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω—ã–µ –±–æ—Ç–∏–Ω–∫–∏', callback_data="mtshBuy_5"))
    markup.add(InlineKeyboardButton('ü§ø–ü—Ä–æ—Ç–∏–≤–æ–≥–∞–∑', callback_data="mtshBuy_6"))
    markup.add(InlineKeyboardButton('üï≥–§–∏–ª—å—Ç—Ä—ã', callback_data="mtshBuy_7"))
    markup.add(InlineKeyboardButton('üé£–ù–µ–ø—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞', callback_data="mtshBuy_8"))
    markup.add(InlineKeyboardButton('üì¶–ö–æ—Ä–æ–±–∫–∞ —Å —Ä–µ—Ü–µ–ø—Ç–æ–º', callback_data="mtshBuy_9"))
    markup.add(InlineKeyboardButton('‚Ü©Ô∏è–í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data="nav_metro_centr"))
    await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup, parse_mode='markdown')

async def mtshBuy_(call, user):
    sh = call.data.split('_')
    item = sh[1]
    if user.location != '–ú–µ—Ç—Ä–æ':
        await bot.edit_message_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –ú–µ—Ç—Ä–æ")
        return
    count = user.metroCurrency
    donateinv = await db.Inventory.exists(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å 5', idplayer=user.id)
    try:
        if usesUsrs and usesUsrs[user.id] == 1:
            await bot.edit_message_text("–í–∞—à –∑–∞–∫–∞–∑ –µ—â–µ –≥–æ—Ç–æ–≤–∏—Ç—Å—è.", call.message.chat.id, call.message.message_id)
        else:
            await bot.edit_message_text("_–ù–µ–ø–ª–æ—Ö–æ, —Ö–æ—Ä–æ—à–∏–π —Ç–æ–≤–∞—Ä..._\n\n–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–∫—É–ø–∫–∏ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.", call.message.chat.id, call.message.message_id, parse_mode='markdown')
            await mtshBuyGo(user, item, count, donateinv, call)
    except:
        await bot.edit_message_text("_–ù–µ–ø–ª–æ—Ö–æ, —Ö–æ—Ä–æ—à–∏–π —Ç–æ–≤–∞—Ä..._\n\n–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø–æ–∫—É–ø–∫–∏ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.", call.message.chat.id, call.message.message_id, parse_mode='markdown')
        await mtshBuyGo(user, item, count, donateinv, call)


async def mtshBuyGo(user, item, count, donateinv, call):
    usesUsrs[user.id] = 1
    count = user.metroCurrency
    if item == '1':
        if count >= 150:
            if donateinv:
                text = "–î–ª—è —Ç–µ–±—è —ç—Ç–æ—Ç —Ç–æ–≤–∞—Ä –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–æ–¥–∞–µ—Ç—Å—è."
            else:
                await db.Inventory.create(name='–ò–≤–µ–Ω—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å 5', active=0, size=0, type='–ò–≤–µ–Ω—Ç', bonus=0, idplayer=user.id)
                await db.Users.filter(id=user.id).update(inventorySizeMax=F('inventorySizeMax') + 4, metroCurrency=F('metroCurrency') - 150)
                text = "–¢—ã –ø—Ä–∏–æ–±—Ä—ë–ª +4üì¶"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üóù"
    elif item == '2':
        if count >= 120:
            await db.Users.filter(id=user.id).update(metroCurrency=F('metroCurrency') - 120)
            item = await db.Inventory.create(name='–®–ª–µ–º', active=1, size=1, type='–ë—Ä–æ–Ω—è', bonus=95, idplayer=user.id, atk_block=10)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üóù –Ω–∞ ü•Ω–®–ª–µ–º"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üóù"
    elif item == '3':
        if count >= 145:
            await db.Users.filter(id=user.id).update(metroCurrency=F('metroCurrency') - 145)
            item = await db.Inventory.create(name='–ö–æ—Å—Ç—é–º —Ö–∏–º–∑–∞—â–∏—Ç—ã', active=1, size=2, type='–ë—Ä–æ–Ω—è', bonus=110, idplayer=user.id, atk_block=10)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üóù –Ω–∞ üëï–ö–æ—Å—Ç—é–º —Ö–∏–º–∑–∞—â–∏—Ç—ã"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üóù"
    elif item == '4':
        if count >= 125:
            await db.Users.filter(id=user.id).update(metroCurrency=F('metroCurrency') - 125)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üóù –Ω–∞ ü©≥–®–æ—Ä—Ç–∏–∫–∏ 2.0"
            item = await db.Inventory.create(name='–®–æ—Ä—Ç–∏–∫–∏ 2.0', active=1, size=1, type='–ë—Ä–æ–Ω—è', bonus=90, idplayer=user.id, atk_block=10)
            await db.commitInventory(user, item)
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üóù"
    elif item == '5':
        if count >= 115:
            await db.Users.filter(id=user.id).update(metroCurrency=F('metroCurrency') - 115)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üóù –Ω–∞ ü•æ–ü—Ä–æ—Ç–∏–≤–æ—Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω—ã–µ –±–æ—Ç–∏–Ω–∫–∏"
            item = await db.Inventory.create(name='–ü—Ä–æ—Ç–∏–≤–æ—Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω—ã–µ –±–æ—Ç–∏–Ω–∫–∏', active=1, size=1, type='–ë—Ä–æ–Ω—è', bonus=85, idplayer=user.id, atk_block=10)
            await db.commitInventory(user, item)
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üóù"
    elif item == '6':
        if user.money >= 2000:
            success = await db.addItem('–ü—Ä–æ—Ç–∏–≤–æ–≥–∞–∑', user)
            if success:
                await db.Users.filter(id=user.id).update(money=F('money') - 2000)
                text = "–¢—ã –∫—É–ø–∏–ª ü§ø–ü—Ä–æ—Ç–∏–≤–æ–≥–∞–∑"
            else:
                text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ."
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üí∞"
    elif item == '7':
        if count >= 1:
            await db.Users.filter(id=user.id).update(metroCurrency=F('metroCurrency') - 1)
            await db.addItem('–§–∏–ª—å—Ç—Ä—ã', user, arg='1')
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üóù –Ω–∞ üï≥–§–∏–ª—å—Ç—Ä—ã"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üóù"
    elif item == '8':
        if count >= 150:
            await db.Users.filter(id=user.id).update(metroCurrency=F('metroCurrency') - 150)
            item = await db.Inventory.create(name='–ù–µ–ø—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞', active=1, size=2, type='–†—ã–±–∞–ª–∫–∞', bonus=0, idplayer=user.id)
            await db.commitInventory(user, item)
            text = "–¢—ã –æ–±–º–µ–Ω—è–ª üóù –Ω–∞ üé£–ù–µ–ø—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞"
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üóù"
    elif item == '9':
        if count >= 200:
            await db.Users.filter(id=user.id).update(metroCurrency=F('metroCurrency') - 200)
            await bot.edit_message_text("–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üì¶–ö–æ—Ä–æ–±–∫—É —Å —Ä–µ—Ü–µ–ø—Ç–æ–º. –°–º–æ—Ç—Ä–∏–º —á—Ç–æ –≤–Ω—É—Ç—Ä–∏...", call.message.chat.id, call.message.message_id)
            await opendonatecaseRecipy(user)
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} –ø—Ä–∏–æ–±—Ä—ë–ª –≤ –ú–µ—Ç—Ä–æ –ö–æ—Ä–æ–±–∫—É —Å —Ä–µ—Ü–µ–ø—Ç–æ–º".format(user.username))
            usesUsrs[user.id] = 0
            return
        else:
            text = "–£ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üóù"


    await bot.send_message(call.message.chat.id, text)
    usesUsrs[user.id] = 0










###############
#  RASKULOVA  #
###############
lotEditors = {}
lotUserStatus = {}


async def raskulova(call, user): 
    if True:
        checkQuest = await db.Quests.get_or_none(name='–ë–æ–≥–∏–Ω—è –•—ç–≤–µ–Ω–±—É—Ä–≥–∞', idplayer=user.id).first()
        if checkQuest and checkQuest.status == 1:
            checkItem = await db.Inventory.get_or_none(~Q(active=0), name='–ù–∏–∂–Ω–µ–µ –±–µ–ª—å—ë –†–∞—Å–∫—É–ª–æ–≤–æ–π', idplayer=user.id).first()
            if checkItem and checkItem.active == 1:
                text = "–ì–æ—Ä—è—á–∞—è –¥–∞–º–∞ –†–∞—Å–∫—É–ª–æ–≤–∞, —É–≤–∏–¥–µ–≤ —Ç–µ–±—è, —Å—Ä–∞–∑—É –∂–µ –ø–æ–¥–±–µ–∂–∞–ª–∞, –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∞ —Ç–≤–æ—é –ø–ª–∞–º–µ–Ω–Ω—É—é —Ä–µ—á—å –∏ –ø–æ–≤–µ–ª–∞ –≤ –∫–æ–º–æ—Ä–∫—É. –û–∫–∞–∑–∞–≤—à–∏—Å—å –≤ —Ç—ë–º–Ω–æ–º –ø–æ–º–µ—â–µ–Ω–∏–∏, –≥–ª—è–¥—è –Ω–∞ —Å–µ–∫—Å—É–∞–ª—å–Ω—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è –¥–µ–≤—É—à–∫–∏, —Ç—ã –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª –Ω–µ—á—Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ–µ –≤ –æ–±–ª–∞—Å—Ç–∏ –ø–∞—Ö–∞...\n-–ù—É —á—Ç–æ, –ø—Ä–∏–Ω—ë—Å?\n–î—Ä–æ–∂–∞—â–∏–º–∏ —Ä—É–∫–∞–º–∏ —Ç—ã –¥–æ—Å—Ç–∞–ª –∏–∑ —Ä—é–∫–∑–∞–∫–∞ –Ω–∏–∂–Ω–µ–µ –±–µ–ª—å—ë –∏ –æ—Ç–¥–∞–ª –µ–≥–æ –¥–µ–≤—É—à–∫–µ. –†–∞—Å–∫—É–ª–æ–≤–∞ –≤–∑—è–ª–∞ –±–µ–ª—å—ë –∏ —Å—Ä–∞–∑—É –∂–µ –µ—ë –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å...\n-–í—Å—ë, –≤–∞–ª–∏ –æ—Ç—Å—é–¥–∞, —Ç—É–ø–æ–π –º—É–∂–ª–∞–Ω. –ú–æ–≥–ª–∏ –±—ã —Å–Ω–∞—á–∞–ª–∞ –ø–æ–∑–∞–±–∞–≤–∏—Ç—å—Å—è, –Ω–æ —Ç—ã –≤–æ–æ–±—â–µ –Ω–∞–º—ë–∫–æ–≤ –Ω–µ –ø–æ–Ω–∏–º–∞–µ—à—å...\n–ü—Ä–∏—à–ª–æ—Å—å –≤—ã–π—Ç–∏ –∑–∞ –¥–≤–µ—Ä—å..."
                text += "\n‚ö†Ô∏è–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –ù–∞–≥—Ä–∞–¥–∞: –¥–æ—Å—Ç—É–ø –≤ –ê—É–∫—Ü–∏–æ–Ω–Ω—ã–π –¥–æ–º –†–∞—Å–∫—É–ª–æ–≤–æ–π + 500üí∞"
                await db.Users.filter(id=user.id).update(money=F('money') + 500)
                checkItem.active = 0
                checkQuest.status = 2
                await checkItem.save()
                await checkQuest.save()
                await bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            elif checkItem and checkItem.active == 2:
                text = "–í–æ–π–¥—è –≤ –ø–æ–º–µ—â–µ–Ω–∏–µ, —Ç—ã —Å—Ä–∞–∑—É –∂–µ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª –≤–µ—Å—å–º–∞ –¥—É—Ä–Ω—É—é –∞—Ç–º–æ—Å—Ñ–µ—Ä—É. –†–∞—Å–∫—É–ª–æ–≤–∞ —Å—Ç–æ—è–ª–∞ –≤–¥–∞–ª–µ–∫–µ –∏ —Å–Ω–∞—á–∞–ª–∞ –æ—Ñ–∏–≥–µ–ª–∞ —Å —Ç–≤–æ–µ–≥–æ –≤–∏–¥–∞, –ø–æ—Å–ª–µ –ø–æ–≤–µ–ª–∞ –≤ –∫–æ–º–æ—Ä–∫—É. –û–∫–∞–∑–∞–≤—à–∏—Å—å –≤ —Ç—ë–º–Ω–æ–º –ø–æ–º–µ—â–µ–Ω–∏–∏, —Ç—ã –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª —Å—Ç—Ä–∞–Ω–Ω–æ–µ –≥–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–º, —á—Ç–æ —Ç—ã —É—Å–ª—ã—à–∞–ª, –±—ã–ª–∏ —Å–ª–æ–≤–∞ –†–∞—Å–∫—É–ª–æ–≤–æ–π\n-–ù–µ–Ω–∞–≤–∏–∂—É –≤–∞—Å, —Ç—É–ø—ã—Ö —Ñ–µ—Ç–∏—à–∏—Å—Ç–æ–≤, –Ω–µ –≤—Å–µ—Ö –≤–æ–π–Ω–∞ —É–±–∏–ª–∞...\n\n–ü—Ä–∏—à—ë–ª –≤ —Å–µ–±—è —Ç—ã —É–∂–µ –Ω–∞ –ø–ª–æ—â–∞–¥–∏."
                text += "\n‚ö†Ô∏è–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –ù–∞–≥—Ä–∞–¥–∞: –¥–æ—Å—Ç—É–ø –≤ –ê—É–∫—Ü–∏–æ–Ω–Ω—ã–π –¥–æ–º –†–∞—Å–∫—É–ª–æ–≤–æ–π"
                checkItem.active = 0
                checkQuest.status = 2
                await checkItem.save()
                await checkQuest.save()
                await bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            else:
                await bot.edit_message_text("–ó–∞–π–¥—è –≤–Ω—É—Ç—Ä—å, –∫ —Ç–µ–±–µ –ø–æ–¥–æ—à–ª–∞ –†–∞—Å–∫—É–ª–æ–≤–∞ –∏ —Å–ø—Ä–æ—Å–∏–ª–∞ —á—Ç–æ —Ç–∞–º –ø–æ –¥–µ–ª—É. –£–≤—ã, —Ç—ã –Ω–µ –Ω–∞—à—ë–ª —á—Ç–æ –µ–π –æ—Ç–≤–µ—Ç–∏—Ç—å. –¢–µ–±—è –≤—ã–ø—Ä–æ–≤–æ–¥–∏–ª–∏ –∑–∞ –¥–≤–µ—Ä—å.", call.message.chat.id, call.message.message_id)
            return
        elif checkQuest and checkQuest.status == 2:
            pass
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    texts = ['–°–≤–µ—Ä—è–µ–º –ª–æ—Ç—ã...', '–£—Ç–æ—á–Ω—è–µ–º –¥–µ—Ç–∞–ª–∏...', '–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...']
    notifText = random.choice(texts)
    await bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text=notifText) 
    if user.location not in ['–•—ç–≤–µ–Ω–±—É—Ä–≥', '–ö–∞–≤–∞–π–Ω—è', '–û–∫–µ–∞–Ω—É—Å', '–†–∞–¥–∞—Ä', '–ú–µ—Ç—Ä–æ']:
        await bot.edit_message_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞", call.message.chat.id, call.message.message_id)
        return
    markup = InlineKeyboardMarkup(row_width=2)
    _kach = call.data.split('_')
    kach = _kach[1]
    if kach == 'buy':
        text = "–ê—É–∫—Ü–∏–æ–Ω–Ω—ã–π –¥–æ–º –†–∞—Å–∫—É–ª–æ–≤–æ–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—Å! –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–µ–¥–º–µ—Ç–æ–≤:"
        markup.add(InlineKeyboardButton('üçî–ï–¥–∞', callback_data="raskulselecttype_eat"))
        markup.add(InlineKeyboardButton('üî©–†–∞—Å—Ö–æ–¥–Ω–∏–∫–∏', callback_data="raskulselecttype_heals"))
        markup.add(InlineKeyboardButton('üõ°–ë—Ä–æ–Ω—è', callback_data="raskulselecttype_armor"))
        markup.add(InlineKeyboardButton('üíç–ü—Ä–æ—á–µ–µ', callback_data="raskulselecttype_other"))
        markup.add(InlineKeyboardButton('üì®–ê–≤—Ç–æ–ø–æ–∫—É–ø–∫–∞', callback_data="raskul_autobuylist"))
        return await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)
    elif kach == 'sell':
        allItems = await db.Inventory.filter(idplayer=user.id, active=1)
        commision = await db.System.get(name='commisionRaskulova')
        text = '–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—â—å –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏. –ö–æ–º–º–∏—Å–∏—è –†–∞—Å–∫—É–ª–æ–≤–æ–π —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {}%:'.format(commision.value)
        zapr = ['–û–±–ª–æ–º–æ–∫ —Å–∏–Ω–µ–≥–æ –∫–∞–º–Ω—è', 'RCA', '–¶–≤–µ—Ç–æ–∫ —Å–∞–∫—É—Ä—ã', '–†–æ–∑–∞', '–û–¥—É–≤–∞–Ω—á–∏–∫', '–û—Å—Ç–∞–Ω–∫–∏ –≥–µ—Ä–æ–µ–≤', '–ü–µ—Ä–æ —è—Å—Ç—Ä–µ–±–∞', '–¢—É—à–∫–∞ –ø–∏—Ç–æ–Ω–∞', '–ö–æ—Ç–µ–ª–æ–∫', '–ö–æ—à–µ–ª—ë–∫ –ø–∞–¥—à–µ–≥–æ –≥–µ—Ä–æ—è']
        asdasd = []
        for z in allItems:
            if str(z.name) not in zapr and str(z.name) not in asdasd:
                if z.type in ['–ê—Ä—Ç–µ—Ñ–∞–∫—Ç', '–û—Ä—É–∂–∏–µ'] or z.name == '–ë—É—Å—Ç–µ—Ä':
                    itm = await db.Inventory.filter(id=z.id).only('lvl')
                    text += "\n{} ({}) - /raskulova_sell_{}".format(z.name, itm[0].lvl, z.id)
                else:
                    text += "\n{} - /raskulova_sell_{}".format(z.name, z.id)
                    asdasd.append(str(z.name))
    elif kach == 'lots':
        allLots = await db.Raskul.filter(~Q(status=0), owner=user.id)
        text = "–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –ª–æ—Ç–æ–≤:\n"
        for z in allLots:
            text += "\n–õ–æ—Ç #{}. {} - {}{}".format(z.id, z.name, z.price, z.valute)
            markup.add(InlineKeyboardButton('–õ–æ—Ç #{}'.format(z.id), callback_data="lot_select_{}".format(z.id)))
    elif kach == 'refresh':
        lotCheck = _kach[2]
        lot = await db.Raskul.exists(id=lotCheck)
        if lot:
            lot = await db.Raskul.get(id=lotCheck)
        if lot and lot.status != 0:
            item = await db.Inventory.get(id=lot.item)
            seller = await db.Users.get(id=item.idplayer)
            lots = await db.Raskul.filter(~Q(status=0), name=item.name).order_by('price').limit(30)
            lotMin = await db.Raskul.filter(name=item.name).order_by('price').limit(1)
            lotMax = await db.Raskul.filter(name=item.name).order_by('-price').limit(1)
            text = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ {}:".format(item.name)
            for x in lotMin:
                text += "\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {}{}".format(x.price, x.valute)
            for x in lotMax:
                text += "\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {}{}\n–°–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:\n".format(x.price, x.valute)
            for z in lots:
                if item.type in ['–ê—Ä—Ç–µ—Ñ–∞–∫—Ç', '–û—Ä—É–∂–∏–µ'] or item.name == '–ë—É—Å—Ç–µ—Ä':
                    itm = await db.Inventory.filter(id=z.item).only('lvl')
                    text += "\n{} ({}) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, itm[0].lvl, z.price, z.valute, z.id)
                elif item.type in ['–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏', '–û—Å–æ–±—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏', '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏', '–ï–¥–∞']:
                    itm = await db.Inventory.filter(id=z.item).only('expires')
                    leftTime = (itm[0].expires - time.time()) / 3600
                    if leftTime > 0:
                        text += "\n{} (ü¶¥{}—á) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, round(leftTime, 2), z.price, z.valute, z.id)
                    else:
                        text += "\n{} (–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–µ) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, z.price, z.valute, z.id)
                else:
                    text += "\n{} - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, z.price, z.valute, z.id)
            lastOrder = await db.RaskulAutoBuy.filter(name=item.name, status=1).order_by('-price').limit(1)
            plusText = ""
            if lastOrder:
                plusText = "\n\n–ù–∞ —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –æ—Ä–¥–µ—Ä—ã –Ω–∞ –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫—É. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {}{}".format(lastOrder[0].price, lastOrder[0].valute)

        elif lot.status == 0:
            item = await db.Inventory.get(id=lot.item)
            lots = await db.Raskul.filter(~Q(status=0), name=lot.name).order_by('price').limit(30)
            lotMin = await db.Raskul.filter(name=lot.name).order_by('price').limit(1)
            lotMax = await db.Raskul.filter(name=lot.name).order_by('-price').limit(1)
            text = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ {}:".format(lot.name)
            for x in lotMin:
                text += "\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {}{}".format(x.price, x.valute)
            for x in lotMax:
                text += "\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {}{}\n–°–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:\n".format(x.price, x.valute)
            for z in lots:
                if item.type in ['–ê—Ä—Ç–µ—Ñ–∞–∫—Ç', '–û—Ä—É–∂–∏–µ']:
                    itm = await db.Inventory.filter(id=z.item).only('lvl')
                    text += "\n{} ({}) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, itm[0].lvl, z.price, z.valute, z.id)
                elif item.type in ['–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏', '–û—Å–æ–±—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏', '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏', '–ï–¥–∞']:
                    itm = await db.Inventory.get_or_none(id=z.item).only('expires')
                    if itm:
                        leftTime = (itm.expires - time.time()) / 3600
                        if leftTime > 0:
                            text += "\n{} (ü¶¥{}—á) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, round(leftTime, 2), z.price, z.valute, z.id)
                        else:
                            text += "\n{} (–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–µ) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, z.price, z.valute, z.id)
                else:
                    text += "\n{} - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, z.price, z.valute, z.id)
            lastOrder = await db.RaskulAutoBuy.filter(name=item.name, status=1).order_by('-price').limit(1)
            plusText = ""
            if lastOrder:
                plusText = "\n\n–ù–∞ —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –æ—Ä–¥–µ—Ä—ã –Ω–∞ –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫—É. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {}{}".format(lastOrder[0].price, lastOrder[0].valute)

        else:
            text = "–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            await bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
            return
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        markup.add(InlineKeyboardButton('–û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', callback_data="raskul_refresh_{}".format(lot.id)))
        markup.add(InlineKeyboardButton('–ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫—É', callback_data="raskul_autobuy_{}".format(lot.id)))
        await bot.send_message(call.message.chat.id, text, reply_markup=markup)
        return
    elif kach == 'kriMarket':
        markup = InlineKeyboardMarkup()
        markup.row_width = 2
        allLots = await db.KriMarket.exists(status=1, count__gt=1)
        if allLots:
            allLots = await db.KriMarket.filter(status=1, count__gt=1).order_by("priceForOne")
            text = ""
            if not allLots:
                text = "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–µ—Ç. –ó–∞—Ö–æ–¥–∏—Ç–µ –ø–æ–∑–∂–µ!"
            else:
                for lot in allLots:
                    text += f"\n{lot.count} - {lot.priceForOne}üí∞/1üíé. –ö—É–ø–∏—Ç—å - /raskulova_kriBuy_{lot.id}"
        else:
            text = "–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–µ—Ç. –ó–∞—Ö–æ–¥–∏—Ç–µ –ø–æ–∑–∂–µ!"
        markup.add(InlineKeyboardButton('–ü—Ä–æ–¥–∞—Ç—å üíé', callback_data="kriMarket_sell"))
    
    elif kach == 'autobuy':
        lotCheck = _kach[2]
        lot = await db.Raskul.get_or_none(id=lotCheck).first()
        if lot:
            lotEditors[user.user_id] = lot.id
            lotUserStatus[user.user_id] = 'autobuy'
            text = "–í—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ {} –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ - –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫–∏. –î–ª—è –æ—Ç–º–µ–Ω—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä.\n‚ö†Ô∏è–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ –±—É–¥–µ—Ç —Ö–≤–∞—Ç–∞—Ç—å —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –º–æ–º–µ–Ω—Ç –ø–æ—è–≤–ª–µ–Ω–∏—è –ª–æ—Ç–∞, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–µ–≥–æ –≤–∞—à –∑–∞–ø—Ä–æ—Å - –ø—Ä–µ–¥–º–µ—Ç –ø—Ä–∏–æ–±—Ä–µ—Ç—ë–Ω –Ω–µ –±—É–¥–µ—Ç.".format(lot.name)
            return await bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
        else:
            return

    elif kach == 'autobuylist':
        lots = await db.RaskulAutoBuy.filter(owner=user.id, status=1)
        if lots:
            text = "–ê–∫—Ç–∏–≤–Ω—ã–µ –æ—Ä–¥–µ—Ä—ã:\n"
            for lot in lots:
                text += "\n{} - {}{} (/raskulova_cancel_{})".format(lot.name, lot.price, lot.valute, lot.id)
        else:
            text = "–ê–∫—Ç–∏–≤–Ω—ã–µ –æ—Ä–¥–µ—Ä—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."


    if user.location == "–•—ç–≤–µ–Ω–±—É—Ä–≥":
        markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="nav_bigcity_centr"))
    elif user.location == '–ö–∞–≤–∞–π–Ω—è':
        markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="nav_wintercity_centr"))
    elif user.location == '–û–∫–µ–∞–Ω—É—Å':
        markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="nav_oceanus_centr"))
    elif user.location == '–†–∞–¥–∞—Ä':
        markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="nav_radar_centr"))
    elif user.location == '–ú–µ—Ç—Ä–æ':
        markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="nav_metro_centr"))
    if len(text) > 4096:
        for x in range(0, len(text), 4096):
            await bot.send_message(call.message.chat.id, text[x:x+4096])
    else:
        await bot.send_message(call.message.chat.id, text, reply_markup=markup)

lotPrice = {}


class KriBuy(StatesGroup):
    lot = State()


async def raskulova_kriBuy_(m, user):
    lotId = m.text.replace("/raskulova_kriBuy_", "@TowerOfHeaven_bot", 1)
    lot = await db.KriMarket.get_or_none(id=lotId, status=1, count__gt=0)
    if lot:
        await KriBuy.lot.set(lot=lot.id)
        await bot.send_message(m.chat.id, f"–•–æ—Ä–æ—à–æ. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –ø–æ–∫—É–ø–∫–∏!\n–î–æ—Å—Ç—É–ø–Ω–æ: {lot.count}üíé\n–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ üíé - {lot.priceForOne}\n–£ —Ç–µ–±—è {user.money} üí∞")
    else:
        await m.answer("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–ª–æ.")


@dp.message_handler(state=KriBuy.lot)
async def kriBuyLot(message: types.Message, state=FSMContext):
    if m.text.isdigit():
        if int(m.text) > 0:
            _lot = await state.get_data()
            lotId = _lot['lot']
            lot = await db.KriMarket.get_or_none(id=lotId, status=1, count__gt=0)
            if lot and lot.count > 0:
                seller = await db.Users.get_or_none(id=lot.seller).first()
                user = await db.Users.get_or_none(user_id=m.from_user.id).first()
                for i in range(1, int(m.text) + 1):
                    currentMoneyBuyer = user.money
                    currentKriBuyer = user.almaz
                    currentKriSeller = seller.almaz
                    currentMoneySeller = seller.money
                    currentKriLot = lot.count
                    priceForOne = lot.price
                    if currentMoneyBuyer >= priceForOne:
                        if currentKriLot > 0 and currentKriSeller > 0:
                            currentMoneyBuyer -= priceForOne
                            currentKriBuyer += 1
                            currentKriLot -= 1
                            currentKriSeller -= 1
                            success += 1
                            profit += priceForOne
                            text += "\n{} - ‚úÖ".format(i)
                        else:
                            text += "\n{} - ‚ùå (OOS)".format(i)
                            await db.KriMarket.filter(id=lot.id).update(status=0)
                    else:
                        text += "\n{} - ‚ùå (NM)".format(i)
                commision = await db.System.get(name='commisionKriMarket')
                realProfit = profit - int(profit * (commision.value / 100))
                currentMoneySeller += realProfit
                await db.Users.filter(id=user.id).update(almaz=currentKriBuyer, money=currentMoneyBuyer)
                await db.Users.filter(id=seller.id).update(almaz=currentKriSeller, money=currentMoneySeller)
                if currentKriLot > 0:
                    await db.KriMarket.filter(id=lot.id).update(count=currentKriLot)
                else:
                    await db.KriMarket.filter(id=lot.id).update(count=currentKriLot, status=0)
                await bot.edit_message_text(text, call.message.chat.id, call.message.message_id)
                await logBot.send_message(tradeChat, text)
                try:
                    await bot.send_message(seller.user_id, "–£ –≤–∞—Å –ø—Ä–∏–æ–±—Ä–µ–ª–∏ {}üíé –∑–∞ {}üí∞".format(success, realProfit))
                except:
                    pass
            else: await m.answer("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–ª–æ.")
        else: await m.answer("–ù—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.")
    else: await m.answer("–ù—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —á–∏—Å–ª–æ.")
    await state.finish()







@dp.message_handler(lambda m: lotUserStatus and m.from_user.id==m.chat.id and m.from_user.id in lotUserStatus and lotUserStatus[m.from_user.id]=='autobuy')
async def lotAutoBuy(m):
    try:
        price = int(m.text)
    except:
        lotUserStatus[m.from_user.id] = None
        lotEditors[m.from_user.id] = None
        return
    _lot = lotEditors[m.from_user.id]
    lot = await db.Raskul.get_or_none(id=_lot)
    if lot:
        lotEditors[m.from_user.id] = lot.id
        lotUserStatus[m.from_user.id] = 'autobuy2'
        lotPrice[m.from_user.id] = price
        await bot.send_message(m.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤.")

@dp.message_handler(lambda m: lotUserStatus and m.from_user.id==m.chat.id and m.from_user.id in lotUserStatus and lotUserStatus[m.from_user.id]=='autobuy2')
async def lotAutoBuy2(m):
    _lot = lotEditors[m.from_user.id]
    lot = await db.Raskul.get_or_none(id=_lot)
    user = await db.Users.get_or_none(user_id=m.from_user.id)
    if lot and user:
        try:
            count = int(m.text)
        except:
            lotUserStatus[m.from_user.id] = None
            lotEditors[m.from_user.id] = None
            return
        cnt = await db.RaskulAutoBuy.filter(name=lot.name, owner=user.id, status=1).only('id').count()
        if cnt + count > 50:
            await bot.send_message(m.chat.id, "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ä–¥–µ—Ä–æ–≤ –Ω–∞ –æ–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç - 50. –ú—ã —Å–æ–∑–¥–∞–¥–∏–º —Ä–æ–≤–Ω–æ —Å—Ç–æ–ª—å–∫–æ, —Å–∫–æ–ª—å–∫–æ —Å–º–æ–∂–µ–º.")
        await bot.send_message(m.chat.id, "–í–∞—à –æ—Ä–¥–µ—Ä –Ω–∞ –ø–æ–∫—É–ø–∫—É —Ä–∞–∑–º–µ—â—ë–Ω. –í —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –æ–∂–∏–¥–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.")
        for i in range(0, count):
            if cnt + i < 50:
                await db.RaskulAutoBuy.create(price=lotPrice[user.user_id], name=lot.name, owner=user.id)
        lotUserStatus[m.from_user.id] = None
        lotEditors[m.from_user.id] = None
    else:
        lotUserStatus[m.from_user.id] = None
        lotEditors[m.from_user.id] = None 



async def raskulselecttype_(call, user):
    markup = InlineKeyboardMarkup(row_width=2)
    if call.data.split("_")[1] == 'eat':
        _types = ["–ï–¥–∞", "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏", "–†–µ–¥–∫–∏–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏", "–û—Å–æ–±—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏"]
        allItems = await db.Raskul.filter(type__in=_types, status=1).order_by("price")
    elif call.data.split("_")[1] == 'heals':
        _types = ["–ó–µ–ª—å–µ", "–°—É–Ω–¥—É–∫", "–•–ª–∞–º", "–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞"]
        allItems = await db.Raskul.filter(type__in=_types, status=1).order_by("price")
    elif call.data.split("_")[1] == 'armor':
        _types = ["–ë—Ä–æ–Ω—è", "–û—Ä—É–∂–∏–µ"]
        allItems = await db.Raskul.filter(type__in=_types, status=1).order_by("price")
    elif call.data.split("_")[1] == 'other':
        _types = ["–ï–¥–∞", "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏", "–†–µ–¥–∫–∏–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏", "–û—Å–æ–±—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏", "–ë—Ä–æ–Ω—è", "–û—Ä—É–∂–∏–µ", 
        "–ó–µ–ª—å–µ", "–°—É–Ω–¥—É–∫", "–•–ª–∞–º", "–≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞"]
        allItems = await db.Raskul.filter(~Q(type__in=_types), status=1).order_by("price")
    text = "–í–∞—à –±–∞–ª–∞–Ω—Å: {}üí∞ {}üíé. –î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–æ—Ç—ã –≤ –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:".format(user.money, user.almaz)
    itms = []
    vipItems = await db.Raskul.filter(status=2, type__in=_types)
    for z in vipItems:
        text += "\nüîù{} - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, z.price, z.valute, z.id)
    count = 0
    for z in allItems:
        if str(z.name) in itms:
            pass
        else:
            count += 1
            itms.append(z.name)
            text += "\n{} - –æ—Ç {}{}. /raskulova_select_{}".format(z.name, z.price, z.valute, z.id)
    markup.add(InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥', callback_data="raskul_buy"))
    await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)


@dp.message_handler(lambda m:m.text and m.text.startswith('/raskulova_cancel_'))
async def raskulova_cancel_(m):
    if m.chat.id == m.from_user.id:
        pass
    else:
        return
    result = m.text.replace('/raskulova_cancel_', '', 1).replace('@TowerOfHeaven_bot', '', 1)
    player = await db.Users.get(user_id=m.from_user.id)
    if player.location not in ['–•—ç–≤–µ–Ω–±—É—Ä–≥', '–ö–∞–≤–∞–π–Ω—è', '–û–∫–µ–∞–Ω—É—Å', '–†–∞–¥–∞—Ä', '–ú–µ—Ç—Ä–æ']:
        await bot.send_message(m.chat.id, "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞")
        return
    lot = await db.RaskulAutoBuy.exists(id=result)
    if lot:
        pass
    else:
        await bot.send_message(m.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        return
    lot = await db.RaskulAutoBuy.get(id=result)
    if lot and lot.status != 0:
        await db.RaskulAutoBuy.filter(id=lot.id).delete()
        await m.answer("–û—Ä–¥–µ—Ä —É–¥–∞–ª—ë–Ω.")













async def lotEdit(call, user): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    if user.location not in ['–•—ç–≤–µ–Ω–±—É—Ä–≥', '–ö–∞–≤–∞–π–Ω—è', '–û–∫–µ–∞–Ω—É—Å', '–†–∞–¥–∞—Ä', '–ú–µ—Ç—Ä–æ']:
        await bot.edit_message_text("–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞", call.message.chat.id, call.message.message_id)
        return
    _kach = call.data.split('_')
    kach = _kach[1]
    lotId = _kach[2]
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    lot = await db.Raskul.exists(id=lotId)
    if lot:
        lot = await db.Raskul.get(id=lotId)
    if kach == 'editPrice':
        if lot and lot.owner == user.id:
            text = "–õ–æ—Ç #{}\n–ü—Ä–æ–¥–∞–∂–∞ {} –∑–∞ {}{}. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É.".format(lot.id, lot.name, lot.price, lot.valute)
            await bot.send_message(call.message.chat.id, text)
            lotEditors[user.user_id] = lot.id
            lotUserStatus[user.user_id] = 'editPrice'
        else:
            await bot.send_message(call.message.chat.id, "–õ–æ—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏–±–æ –æ–Ω –≤–∞–º –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç")
    elif kach == 'close':
        if lot and lot.owner == user.id:
            await db.Raskul.filter(id=lotId).update(status=0)
            await db.Inventory.filter(id=lot.item).update(active=1)
            await bot.send_message(call.message.chat.id, "–í—ã —É–¥–∞–ª–∏–ª–∏ –ª–æ—Ç")
        else:
            await bot.send_message(call.message.chat.id, "–õ–æ—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏–±–æ –æ–Ω –≤–∞–º –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç")
    elif kach == 'select':
        if lot and lot.owner == user.id:
            text = "–õ–æ—Ç #{}\n–ü—Ä–æ–¥–∞–∂–∞ {} –∑–∞ {}{}. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.".format(lot.id, lot.name, lot.price, lot.valute)
            markup.add(InlineKeyboardButton('–£–±—Ä–∞—Ç—å —Å –ø—Ä–æ–¥–∞–∂–∏', callback_data="lot_close_{}".format(lot.id)))
            #markup.add(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É', callback_data="lot_editPrice_{}".format(lot.id)))
            if user.location == "–•—ç–≤–µ–Ω–±—É—Ä–≥":
                markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="nav_bigcity_centr"))
            elif user.location == '–ö–∞–≤–∞–π–Ω—è':
                markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="nav_wintercity_centr"))
            elif user.location == '–û–∫–µ–∞–Ω—É—Å':
                markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="nav_oceanus_centr"))
            elif user.location == '–†–∞–¥–∞—Ä':
                markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="nav_radar_centr"))
            elif user.location == '–ú–µ—Ç—Ä–æ':
                markup.add(InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data="nav_metro_centr"))
            await bot.send_message(call.message.chat.id, text, reply_markup=markup)
        else:
            await bot.send_message(call.message.chat.id, "–õ–æ—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏–±–æ –æ–Ω –≤–∞–º –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç")

@dp.message_handler(lambda m: lotUserStatus and m.from_user.id==m.chat.id and m.from_user.id in lotUserStatus and lotUserStatus[m.from_user.id]=='editPrice')
async def lotEditPrice(m):
    try:
        newPrice = int(m.text)
        if newPrice >= 100000: return await m.answer("–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
    except:
        lotUserStatus[m.from_user.id] = None
        await bot.send_message(m.chat.id, "–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")
        return
    if newPrice and newPrice > 0:
        lot = await db.Raskul.get(id=lotEditors[m.from_user.id])
        user = await db.Users.get(user_id=m.from_user.id).first()
        oldPrice = lot.price
        oldCommision = int(lot.price * 0.1)
        newCommision = int(newPrice * 0.1)
        comm = oldCommision - newCommision
        if user.money - newCommision > 0:
            if lot.valute == 'üí∞':
                await db.Users.filter(user_id=m.from_user.id).update(money=F('money') + comm)
            elif lot.valute == 'üíé':
                await db.Users.filter(user_id=m.from_user.id).update(almaz=F('almaz') + comm)
        else:
            await bot.send_message(m.chat.id, "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –æ–ø–ª–∞—Ç—É –∫–æ–º–º–∏—Å–∏–∏ –†–∞—Å–∫—É–ª–æ–≤–æ–π.")
            lotUserStatus[m.from_user.id] = None
            return
        await db.Raskul.filter(id=lot.id).update(price=newPrice)
        await lot.refresh_from_db(fields=['price'])
        await bot.send_message(m.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –ª–æ—Ç #{}, –≤—ã—Å—Ç–∞–≤–∏–≤ –Ω–æ–≤—É—é —Ü–µ–Ω—É –≤ —Ä–∞–∑–º–µ—Ä–µ {}{}".format(lot.id, lot.price, lot.valute))
        lotUserStatus[m.from_user.id] = None
    else:
        await bot.send_message(m.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –í–æ–∑–º–æ–∂–Ω–æ, —Ü–µ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.")
        lotUserStatus[m.from_user.id] = None

@dp.message_handler(lambda m:m.text and m.text.startswith('/raskulova_select_'))
async def raskulova_select(m):
    if m.chat.id == m.from_user.id:
        pass
    else:
        return
    result = m.text.replace('/raskulova_select_', '', 1).replace('@TowerOfHeaven_bot', '', 1)
    player = await db.Users.get(user_id=m.from_user.id)
    if player.location not in ['–•—ç–≤–µ–Ω–±—É—Ä–≥', '–ö–∞–≤–∞–π–Ω—è', '–û–∫–µ–∞–Ω—É—Å', '–†–∞–¥–∞—Ä', '–ú–µ—Ç—Ä–æ']:
        await bot.send_message(m.chat.id, "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞")
        return
    lot = await db.Raskul.exists(id=result)
    if lot:
        pass
    else:
        await bot.send_message(m.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        return
    lot = await db.Raskul.get(id=result)
    item = await db.Inventory.get(id=lot.item)
    if lot and lot.status != 0:
        seller = await db.Users.get(id=item.idplayer)
        lots = await db.Raskul.filter(~Q(status=0), name=item.name).order_by('price').limit(30)
        lotMin = await db.Raskul.filter(name=item.name).order_by('price').limit(1)
        lotMax = await db.Raskul.filter(name=item.name).order_by('-price').limit(1)
        text = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ {}:".format(item.name)
        for x in lotMin:
            text += "\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {}{}".format(x.price, x.valute)
        for x in lotMax:
            if x.price > 50000:
                x.price = '‚ôæ'
            text += "\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {}{}\n–°–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:\n".format(x.price, x.valute)
        for z in lots:
            if item.type in ['–ê—Ä—Ç–µ—Ñ–∞–∫—Ç', '–û—Ä—É–∂–∏–µ'] or item.name == '–ë—É—Å—Ç–µ—Ä':
                itm = await db.Inventory.filter(id=z.item).only('lvl')
                text += "\n{} ({}) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, itm[0].lvl, z.price, z.valute, z.id)
            elif item.type in ['–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏', '–û—Å–æ–±—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏', '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏', '–ï–¥–∞']:
                itm = await db.Inventory.filter(id=z.item).only('expires')
                leftTime = (int(itm[0].expires) - time.time()) / 3600
                if leftTime > 0:
                    text += "\n{} (ü¶¥{}—á) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, round(leftTime, 2), z.price, z.valute, z.id)
                else:
                    text += "\n{} (–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–µ) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, z.price, z.valute, z.id)
            else:
                text += "\n{} - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, z.price, z.valute, z.id)
    elif lot.status == 0:
        lots = await db.Raskul.filter(~Q(status=0), name=lot.name).order_by('price').limit(30)
        text = "\n–°–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:\n"
        for z in lots:
            if item.type in ['–ê—Ä—Ç–µ—Ñ–∞–∫—Ç', '–û—Ä—É–∂–∏–µ'] or item.name == '–ë—É—Å—Ç–µ—Ä':
                itm = await db.Inventory.filter(id=z.item).only('lvl')
                text += "\n{} ({}) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, itm[0].lvl, z.price, z.valute, z.id)
            elif item.type in ['–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏', '–û—Å–æ–±—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏', '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏', '–ï–¥–∞']:
                itm = await db.Inventory.filter(id=z.item).only('expires')
                leftTime = (result.expires - time.time()) / 3600
                if leftTime > 0:
                    text += "\n{} (ü¶¥{}—á) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, round(leftTime, 2), z.price, z.valute, z.id)
                else:
                    text += "\n{} (–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–µ) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, z.price, z.valute, z.id)
            elif item.name == '–ü—Ä–æ—Ç–∏–≤–æ–≥–∞–∑':
                itm = await db.Inventory.filter(id=z.item).only('lvl')
                text += "\n{} ({}/100) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, itm.bonus, z.price, z.valute, z.id)
            elif item.name == '–§–∏–ª—å—Ç—Ä—ã':
                itm = await db.Inventory.filter(id=z.item).only('lvl')
                text += "\n{} ({}) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, itm.bonus, z.price, z.valute, z.id)
            else:
                text += "\n{} - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, z.price, z.valute, z.id)
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(InlineKeyboardButton('–û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', callback_data="raskul_refresh_{}".format(lot.id)))
    markup.add(InlineKeyboardButton('–ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫—É', callback_data="raskul_autobuy_{}".format(lot.id)))
    await bot.send_message(m.chat.id, text, reply_markup=markup)



@dp.message_handler(lambda m:m.text and m.text.startswith('/raskulova_buy_'))
async def raskulova_buy(m):
    if m.chat.id == m.from_user.id:
        pass
    else:
        return
    result = m.text.replace('/raskulova_buy_', '', 1).replace('@TowerOfHeaven_bot', '', 1)
    player = await db.Users.get(user_id=m.from_user.id)
    if player.ban == 1: return
    if player.location not in ['–•—ç–≤–µ–Ω–±—É—Ä–≥', '–ö–∞–≤–∞–π–Ω—è', '–û–∫–µ–∞–Ω—É—Å', '–†–∞–¥–∞—Ä', '–ú–µ—Ç—Ä–æ']:
        await bot.send_message(m.chat.id, "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞")
        return
    lot = await db.Raskul.exists(id=result)
    if lot: 
        lot = await db.Raskul.get(id=result)
        item = await db.Inventory.get(id=lot.item)
    if lot and lot.status != 0:
        item = await db.Inventory.get(id=lot.item)
        seller = await db.Users.get(id=item.idplayer)
        if item.idplayer != lot.owner:
            await bot.send_message(m.chat.id, "–õ–æ—Ç–∞ –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            await db.Raskul.filter(id=lot.id).update(status=0)
            return
        if item.idplayer == player.id:
            await bot.send_message(m.chat.id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å —Å–≤–æ–π –∂–µ –ø—Ä–µ–¥–º–µ—Ç.")
            return
        try:
            await dp.throttle(str(player.user_id), rate=1)
        except exceptions.Throttled:
            return
        if item.active == 3:
            if lot.valute == 'üíé':
                if player.almaz >= lot.price:
                    inventorySize = await db.getInventorySize(player)
                    if inventorySize + item.size > player.inventorySizeMax:
                        await bot.send_message(m.chat.id, "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ")
                        return
                    
                    commision = await db.System.get(name='commisionRaskulova')
                    cost = lot.price - int(lot.price * (commision.value / 100)) + int(lot.price * 0.1)
                    await db.Users.filter(id=player.id).update(almaz=F('almaz') - lot.price)
                    await db.Users.filter(id=seller.id).update(almaz=F('almaz') + cost)
                    await db.Inventory.filter(id=lot.item).update(idplayer=player.id, active=1)
                    await db.Raskul.filter(id=result).update(status=0)
                else:
                    await bot.send_message(m.chat.id, "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç {}".format(lot.valute))
                    return
            else:
                if player.money >= lot.price:
                    inventorySize = await db.getInventorySize(player)
                    if inventorySize + item.size > player.inventorySizeMax:
                        await bot.send_message(m.chat.id, "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ")
                        return
                    
                    commision = await db.System.get(name='commisionRaskulova')
                    cost = lot.price - int(lot.price * (commision.value / 100)) + int(lot.price * 0.1)
                    await db.Users.filter(id=player.id).update(money=F('money') - lot.price)
                    await db.Users.filter(id=seller.id).update(money=F('money') + cost)
                    await db.Inventory.filter(id=lot.item).update(idplayer=player.id, active=1)
                    await db.Raskul.filter(id=result).update(status=0)
                else:
                    await bot.send_message(m.chat.id, "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç {}".format(lot.valute))
                    return
            await db.Raskul.filter(item=lot.item).update(status=0)
            await bot.send_message(m.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ {} –∑–∞ {}{}".format(item.name, lot.price, lot.valute))
            if seller.quest == '–ü—Ä–æ–¥–∞–≤–∞–Ω' and seller.questStatus == 1:
                quest = await db.tempQuest.get(user_id=seller.user_id, quest=seller.quest, status=0).first()
                await db.tempQuest.filter(id=quest.id).update(progress=F('progress') + 1)
            await achprog(seller, ach='prodavan')
            try:
                await bot.send_message(seller.user_id, "–£ –≤–∞—Å –ø—Ä–∏–æ–±—Ä–µ–ª–∏ {} –∑–∞ {}{}".format(item.name, lot.price, lot.valute))
            except:
                pass
            await logBot.send_message(tradeChat, "{} –ø—Ä–∏–æ–±—Ä–µ–ª —É {} {} –∑–∞ {}{}".format(player.username, seller.username, item.name, lot.price, lot.valute))
            item.active = 1
            item.idplayer = player.id
            await db.commitInventory(player, item)
        else:
            await bot.send_message(m.chat.id, "–ü—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
            await db.Raskul.filter(id=lot.id).update(status=0)
    elif lot and lot.status == 0:
        lots = await db.Raskul.filter(~Q(status=0), name=lot.name).order_by('price').limit(30)
        lotMin = await db.Raskul.filter(name=lot.name).order_by('price').limit(1)
        lotMax = await db.Raskul.filter(name=lot.name).order_by('-price').limit(1)
        text = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ {}:".format(lot.name)
        for x in lotMin:
            text += "\n–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {}{}".format(x.price, x.valute)
        for x in lotMax:
            text += "\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {}{}\n–°–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:\n".format(x.price, x.valute)
        for z in lots:
            if item.type in ['–ê—Ä—Ç–µ—Ñ–∞–∫—Ç', '–û—Ä—É–∂–∏–µ'] or item.name == '–ë—É—Å—Ç–µ—Ä':
                itm = await db.Inventory.filter(id=z.item).only('lvl')
                text += "\n{} ({}) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, itm.lvl, z.price, z.valute, z.id)
            elif item.type in ['–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏', '–û—Å–æ–±—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏', '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –≥–æ—Ç–æ–≤–∫–∏', '–ï–¥–∞']:
                itm = await db.Inventory.get(id=z.item).only('expires', 'bonus')
                leftTime = (itm.expires - time.time()) / 3600
                if leftTime > 0:
                    text += "\n{} (ü¶¥{}—á) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, round(leftTime, 2), z.price, z.valute, z.id)
                else:
                    text += "\n{} (–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–µ) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, z.price, z.valute, z.id)
            elif item.name == '–ü—Ä–æ—Ç–∏–≤–æ–≥–∞–∑':
                itm = await db.Inventory.filter(id=z.item).only('lvl')
                text += "\n{} ({}/100) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, itm.bonus, z.price, z.valute, z.id)
            elif item.name == '–§–∏–ª—å—Ç—Ä—ã':
                itm = await db.Inventory.filter(id=z.item).only('lvl')
                text += "\n{} ({}) - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, itm.bonus, z.price, z.valute, z.id)
            else:
                text += "\n{} - {}{}. –ö—É–ø–∏—Ç—å - /raskulova_buy_{}".format(z.name, z.price, z.valute, z.id)
raskulSell = {}
raskulCount = {}
"""@dp.message_handler(lambda m:m.text and m.text.startswith('/raskulova_sell_'))
async def raskulova_sell(m):
    if m.chat.id == m.from_user.id:
        pass
    else:
        return
    result = m.text.replace('/raskulova_sell_', '', 1).replace('@TowerOfHeaven_bot', '', 1)
    player = await db.Users.get(user_id=m.from_user.id)
    item = await db.Inventory.exists(id=result)
    if item:
        item = await db.Inventory.get(id=result)
    zapr = ['–û–±–ª–æ–º–æ–∫ —Å–∏–Ω–µ–≥–æ –∫–∞–º–Ω—è', 'RCA', '–¶–≤–µ—Ç–æ–∫ —Å–∞–∫—É—Ä—ã', '–†–æ–∑–∞', '–û–¥—É–≤–∞–Ω—á–∏–∫', '–û—Å—Ç–∞–Ω–∫–∏ –≥–µ—Ä–æ–µ–≤', '–ü–µ—Ä–æ —è—Å—Ç—Ä–µ–±–∞', '–¢—É—à–∫–∞ –ø–∏—Ç–æ–Ω–∞', '–ö–æ—Ç–µ–ª–æ–∫', '–°–Ω—É–Ω–µ—Ü', '–ë–∞–≥—Ä–æ–≤–∞—è —á–µ—à—É—è']
    if item.active == 1 and item.name not in zapr:
        await bot.send_message(m.chat.id, "–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –ø—Ä–æ–¥–∞—Ç—å {}. –í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –ø—Ä–æ–¥–∞–∂–∏. –ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ —Ü–∏—Ñ—Ä—É)".format(item.name))
        raskulSell[m.from_user.id] = item.id
        lotUserStatus[player.user_id] = 'seller'"""
@dp.message_handler(lambda m:m.text and m.text.startswith('/raskulova_sell_'))
async def raskulova_sell(m):
    if m.chat.id == m.from_user.id:
        pass
    else:
        return
    result = m.text.replace('/raskulova_sell_', '', 1).replace('@TowerOfHeaven_bot', '', 1)
    player = await db.Users.get(user_id=m.from_user.id)
    if player.location not in ['–•—ç–≤–µ–Ω–±—É—Ä–≥', '–ö–∞–≤–∞–π–Ω—è', '–û–∫–µ–∞–Ω—É—Å', '–†–∞–¥–∞—Ä', '–ú–µ—Ç—Ä–æ']:
        await bot.send_message(m.chat.id, "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞")
        return
    if player.ban == 1: return
    item = await db.Inventory.exists(id=result)
    if item:
        item = await db.Inventory.get(id=result)
    else:
        await bot.send_message(m.chat.id, "–ü—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
        return
    zapr = ['–û–±–ª–æ–º–æ–∫ —Å–∏–Ω–µ–≥–æ –∫–∞–º–Ω—è', '–ï–±—É—à–∞—Ä', 'RCA', '–¶–≤–µ—Ç–æ–∫ —Å–∞–∫—É—Ä—ã', '–†–æ–∑–∞', '–û–¥—É–≤–∞–Ω—á–∏–∫', '–û—Å—Ç–∞–Ω–∫–∏ –≥–µ—Ä–æ–µ–≤', '–ü–µ—Ä–æ —è—Å—Ç—Ä–µ–±–∞', '–¢—É—à–∫–∞ –ø–∏—Ç–æ–Ω–∞', '–ö–æ—Ç–µ–ª–æ–∫', '–°–Ω—É–Ω–µ—Ü', '–ë–∞–≥—Ä–æ–≤–∞—è —á–µ—à—É—è', '–°–∏—Ç–µ–Ω—å', '–ö–∞—Ä—Ç–∞ –∑–∞–±—Ä–æ—à–µ–Ω–Ω–æ–≥–æ –∞—Ä—Ö–∏–≤–∞', '–î–æ–∫—É–º–µ–Ω—Ç DSFB-4', '–°—Ç—Ä–∞–Ω–Ω–∞—è –∑–∞–≥–æ—Ç–æ–≤–∫–∞']
    if item.active == 1 and item.name not in zapr:
        counts = await db.Inventory.filter(idplayer=player.id, active=1, name=item.name).count()
        lastOrder = await db.RaskulAutoBuy.filter(name=item.name, status=1).order_by('-price').limit(1)
        plusText = ""
        if lastOrder:
            plusText = "\n\n–ù–∞ —ç—Ç–æ—Ç –ø—Ä–µ–¥–º–µ—Ç –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –æ—Ä–¥–µ—Ä—ã –Ω–∞ –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫—É. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {}{}".format(lastOrder[0].price, lastOrder[0].valute)
        print(counts)
        if counts > 1:
            await bot.send_message(m.chat.id, "–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –ø—Ä–æ–¥–∞—Ç—å {}. –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–≤–∞–µ–º—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤. –£ –≤–∞—Å {} —Ç–∞–∫–∏—Ö –∂–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤. –£—á—Ç–∏—Ç–µ, —á—Ç–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—É—é –ø—Ä–æ–¥–∞–∂—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–æ—Ç–æ–≤ –∑–∞ üí∞. –ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ —Ü–∏—Ñ—Ä—É)\n\n{}".format(item.name, counts, plusText))
            raskulSell[m.from_user.id] = item.id
            lotUserStatus[player.user_id] = 'sell'
        else:
            await bot.send_message(m.chat.id, "–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –ø—Ä–æ–¥–∞—Ç—å {}. –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø—Ä–æ–¥–∞–∂–∏. –ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ —Ü–∏—Ñ—Ä—É)\n\n{}".format(item.name, plusText))
            raskulSell[m.from_user.id] = item.id
            lotUserStatus[player.user_id] = 'seller'

@dp.message_handler(lambda m: lotUserStatus and m.from_user.id==m.chat.id and m.from_user.id in lotUserStatus and lotUserStatus[m.from_user.id]=='sell')
async def raskulova_sell_step1(m):
    try:
        count = int(m.text)
    except:
        lotUserStatus[m.from_user.id] = None
        await bot.send_message(m.chat.id, "–ü—Ä–æ–¥–∞–∂–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return
    if count > 0:
        pass
    else:
        return
    await bot.send_message(m.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—É–º–º—É –ø—Ä–æ–¥–∞–∂–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ —á—Ç–æ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ª–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å –Ω–∞ —Å—á–µ—Ç—É 10% –æ—Ç –∑–∞—è–≤–ª–µ–Ω–Ω–æ–π —Å—É–º–º—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–ø–∏—à—É—Ç—Å—è –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∏ –≤–µ—Ä–Ω—É—Ç—Å—è –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–¥–∞–∂–µ –ø—Ä–µ–¥–º–µ—Ç–∞. –ï—Å–ª–∏ –≤—ã –ø–µ—Ä–µ–¥—É–º–∞–ª–∏, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ —Ü–∏—Ñ—Ä—É)")
    raskulCount[m.from_user.id] = count
    lotUserStatus[m.from_user.id] = 'seller'

async def raskulova_sell_all(m, price):
    if price > 0:
        item = await db.Inventory.get(id=raskulSell[m.from_user.id])
        count = raskulCount[m.from_user.id]
        user = await db.Users.get(user_id=m.from_user.id)
        if user.location in ['–•—ç–≤–µ–Ω–±—É—Ä–≥', '–ö–∞–≤–∞–π–Ω—è', '–û–∫–µ–∞–Ω—É—Å', '–†–∞–¥–∞—Ä', '–ú–µ—Ç—Ä–æ']:
            itemsToSell = await db.Inventory.filter(name=item.name, active=1, idplayer=user.id).count()
            itemsToSell = await db.Inventory.filter(name=item.name, active=1, idplayer=user.id).limit(count)
            for z in itemsToSell:
                checkLots = await db.Raskul.filter(~Q(status=0), owner=user.id).count()
                if checkLots < 10:
                    commision = int(price * 0.1)
                    if user.money >= commision:
                        await db.Users.filter(id=user.id).update(money=F('money') - commision)
                        await db.Raskul.create(name=z.name, item=z.id, price=price, owner=user.id, valute='üí∞', status=1, type=item.type)
                        await db.Inventory.filter(id=z.id).update(active=3)
                        await user.refresh_from_db()
                        z.active = 3
                        await db.commitInventory(user, z)
            await bot.send_message(m.chat.id, "–õ–æ—Ç—ã –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã.")
        else:
            await bot.send_message(m.chat.id, "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞.")
    lotUserStatus[m.from_user.id] = None
    raskulCount[m.from_user.id] = None
    raskulSell[m.from_user.id] = None

@dp.message_handler(lambda m: lotUserStatus and m.from_user.id==m.chat.id and m.from_user.id in lotUserStatus and lotUserStatus[m.from_user.id]=='seller')
async def raskulova_sell_step2(m):
    try:
        price = int(m.text)
    except:
        lotUserStatus[m.from_user.id] = None
        await bot.send_message(m.chat.id, "–ü—Ä–æ–¥–∞–∂–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return
    if price > 0:
        pass
    else:
        return
    if m.from_user.id in raskulCount and raskulCount[m.from_user.id] != None and raskulCount[m.from_user.id] > 1:
        await raskulova_sell_all(m, price)
        return
    item = await db.Inventory.exists(id=raskulSell[m.from_user.id])
    if item:
        item = await db.Inventory.get(id=raskulSell[m.from_user.id])
    user = await db.Users.get(user_id=m.from_user.id)
    if user.location not in ['–•—ç–≤–µ–Ω–±—É—Ä–≥', '–ö–∞–≤–∞–π–Ω—è', '–û–∫–µ–∞–Ω—É—Å', '–†–∞–¥–∞—Ä', '–ú–µ—Ç—Ä–æ']:
        await bot.send_message(m.chat.id, "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤–Ω–µ –≥–æ—Ä–æ–¥–∞")
        return
    if item and item.active == 1 and item.idplayer == user.id:
        checkLot = await db.Raskul.exists(status=1, item=item.id)
        if checkLot:
            await bot.send_message(m.chat.id, "–£ –≤–∞—Å —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –ª–æ—Ç —Å —ç—Ç–∏–º –ø—Ä–µ–¥–º–µ—Ç–æ–º")
            return
        checkCountLots = await db.Raskul.filter(status=1, owner=user.id).count()
        if checkCountLots < 10:
            newLot = await db.Raskul.create(name=item.name, item=item.id, status=0, price=price, owner=user.id, type=item.type)
            markup = InlineKeyboardMarkup(row_width=2)
            markup.add(InlineKeyboardButton('üíé', callback_data="lotValute_{}_almaz".format(newLot.id)))
            markup.add(InlineKeyboardButton('üí∞', callback_data="lotValute_{}_gold".format(newLot.id)))
            await bot.send_message(m.chat.id, "–õ–æ—Ç —Å–æ–∑–¥–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –ª–æ—Ç–∞ –¥–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.", reply_markup=markup)
        else:
            await bot.send_message(m.chat.id, "–õ–∏–º–∏—Ç –Ω–∞ –ø—Ä–æ–¥–∞–∂—É - 10 —à—Ç—É–∫.")
    else:
        await bot.send_message(m.chat.id, "–î–∞–Ω–Ω–æ–π –≤–µ—â–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –≤–∞—à–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ.")
    lotUserStatus[m.from_user.id] = None
    raskulCount[m.from_user.id] = None
    raskulSell[m.from_user.id] = None

async def lotValute_(call, user): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    _kach = call.data.split('_')
    kach = _kach[1]
    lot = await db.Raskul.get(id=kach)
    if _kach[2] == 'almaz': valute = 'üíé'
    else: valute = 'üí∞'
    if _kach[2] == 'gold' and user.money >= int(lot.price * 0.1):
        item = await db.Inventory.filter(id=lot.item).update(active=3)
        item = await db.Inventory.get(id=lot.item)
        await db.commitInventory(user, item)
        await db.Users.filter(id=user.id).update(money=F('money') - int(lot.price * 0.1))
    elif _kach[2] == 'almaz' and user.almaz >= int(lot.price * 0.1):
        item = await db.Inventory.filter(id=lot.item).update(active=3)
        item = await db.Inventory.get(id=lot.item)
        await db.commitInventory(user, item)
        await db.Users.filter(id=user.id).update(almaz=F('almaz') - int(lot.price * 0.1))
    else:
        await bot.send_message(call.message.chat.id, '–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –≤–∞–ª—é—Ç—ã –¥–ª—è –≤–∑–Ω–æ—Å–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ª–æ—Ç–∞')
        return
    await db.Raskul.filter(id=lot.id).update(valute=valute, status=1)
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    markup.add(InlineKeyboardButton('–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∏ –∑–∞–∫—Ä–µ–ø–∏—Ç—å(5üíé)', callback_data="lotDone_{}_prem".format(lot.id)))
    markup.add(InlineKeyboardButton('–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –±–µ–∑ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è', callback_data="lotDone_{}".format(lot.id)))
    await bot.edit_message_text("–í–∞–ª—é—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞. –í—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –∑–∞–∫—Ä–µ–ø–∏—Ç—å –ª–æ—Ç.", call.message.chat.id, call.message.message_id, reply_markup=markup)


async def lotDone(call, user): 
    if (call.from_user.id == call.message.chat.id):
        pass
    else:
        return
    _kach = call.data.split('_')
    kach = _kach[1]
    lot = await db.Raskul.get(id=kach)
    q = None
    try:
        if _kach[2]:
            q = _kach[2]
            if user.almaz >= 5: 
                await db.Users.filter(id=user.id).update(almaz=F('almaz') - 5)
                await db.Raskul.filter(id=lot.id).update(status=2)
                await bot.edit_message_text("–õ–æ—Ç –∑–∞–∫—Ä–µ–ø–ª—ë–Ω.", call.message.chat.id, call.message.message_id)
            else:
                await bot.send_message(call.message.chat.id, "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé")
    except:
        await bot.edit_message_text("–õ–æ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω.", call.message.chat.id, call.message.message_id)
    lotUserStatus[user.user_id] = None


async def krimarket(call, user):
    _kach = call.data.split('_')
    kach = _kach[1]
    if kach == 'sell':
        lotUserStatus[user.user_id] = 'kristallSell'
        commision = await db.System.get(name='commisionKriMarket')
        await bot.edit_message_text("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ üíé, –∫–æ—Ç–æ—Ä–æ–µ –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç—å. –ö–æ–º–º–∏—Å–∏—è –†–∞—Å–∫—É–ª–æ–≤–æ–π —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {}%".format(commision.value), call.message.chat.id, call.message.message_id)


@dp.message_handler(lambda m: lotUserStatus and m.from_user.id==m.chat.id and m.from_user.id in lotUserStatus and lotUserStatus[m.from_user.id]=='kristallSell')
async def kristallSell_step1(m):
    try:
        count = int(m.text)
    except:
        lotUserStatus[m.from_user.id] = None
        await bot.send_message(m.chat.id, "–ü—Ä–æ–¥–∞–∂–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return
    if count > 0:
        pass
    else:
        lotUserStatus[m.from_user.id] = None
        return
    lotUserStatus[m.from_user.id] = 'kristallSell2'
    user = await db.Users.get(user_id=m.from_user.id).first()
    if user.almaz >= count:
        newLot = await db.KriMarket(allCount=count, status=0, seller=user.id, count=count)
        await newLot.save()
        await bot.send_message(m.chat.id, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ 1 üíé")
    else:
        await bot.send_message(m.chat.id, "–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üíé. –£ –≤–∞—Å {}üíé. –í–≤–µ–¥–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ".format(user.almaz))


@dp.message_handler(lambda m: lotUserStatus and m.from_user.id==m.chat.id and m.from_user.id in lotUserStatus and lotUserStatus[m.from_user.id]=='kristallSell2')
async def kristallSell_step2(m):
    try:
        price = int(m.text)
    except:
        lotUserStatus[m.from_user.id] = None
        await bot.send_message(m.chat.id, "–ü—Ä–æ–¥–∞–∂–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
        return
    if price > 0:
        pass
    else:
        lotUserStatus[m.from_user.id] = None
        return
    user = await db.Users.get(user_id=m.from_user.id).first()
    checkLot = await db.KriMarket.get(status=0, seller=user.id).first()
    checkLot.priceForOne = price
    checkLot.status = 1
    await checkLot.save()
    await bot.send_message(m.chat.id, "–õ–æ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω. –ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.")
    lotUserStatus[user.user_id] = None



async def pizza_shop(m, user):
    text = """
–ú–∞–≥–∞–∑–∏–Ω üçï–ü–ò–ó–ó–êüçï (–∑–¥–µ—Å—å –Ω–µ –ø—Ä–æ–¥–∞—é—Ç –ø–∏—Ü—Ü—É, –∑–¥–µ—Å—å –µ—ë –ø–æ–∫—É–ø–∞—é—Ç)! üçï - –≤–∞–ª—é—Ç–∞, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–∞–ø—á–∏/–±–∞–≥-—Ä–µ–ø–æ—Ä—Ç—ã –∏ —Ç.–¥.).

–£ —Ç–µ–±—è {} üçï

–ù–∞ —á—Ç–æ –º–æ–∂–Ω–æ –æ–±–º–µ–Ω—è—Ç—å?

üéü–ë–∏–ª–µ—Ç –Ω–∞ —Ç–æ—Ç —Å–≤–µ—Ç (2üçï). –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫ –º–µ—Å—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–º–µ—Ä—Ç–∏
–°–º–µ–Ω–∞ –Ω–∏–∫–Ω–µ–π–º–∞(10üçï). –í—ã –º–æ–∂–µ—Ç–µ —Å–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º, –µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤–∞—Å –Ω–µ —É—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç (–∏–ª–∏ –Ω–µ—Ç)
+200üì¶(ü•ò)(10üçï). –ú–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –∏ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –∫–æ—Ç–µ–ª–∫–∞ –Ω–∞ 200üì¶
‚ô•Ô∏èToH supporter (50üçï). –ù–∞–±–æ—Ä –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Ö1üì¶–ö–æ—Ä–æ–±–∫–∞ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏, +5üì¶, 15 –¥–Ω–µ–π ‚ö°Ô∏è–ë—É—Å—Ç–µ—Ä–æ–≤ –∏ —Ç–∏—Ç—É–ª –≤ –ø—Ä–æ—Ñ–∏–ª–µ ‚ô•Ô∏èToH supporter‚ô•Ô∏è –Ω–∞ –º–µ—Å—è—Ü    
üé£–û—á–µ–Ω—å –Ω–µ–ø—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞ (50üçï). –ü–æ–∑–≤–æ–ª—è–µ—Ç –ª–æ–≤–∏—Ç—å —Ä—ã–±—É –≤ –ü—Ä—É–¥—É

_–°–ø–∏—Å–æ–∫ –±—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è..._
""".format(user.pizza)
    markup = InlineKeyboardMarkup(row_width=2)
    markup.add(InlineKeyboardButton('üéü–ë–∏–ª–µ—Ç –Ω–∞ —Ç–æ—Ç —Å–≤–µ—Ç', callback_data="pizzashop_1"))
    markup.add(InlineKeyboardButton('–°–º–µ–Ω–∞ –Ω–∏–∫–Ω–µ–π–º–∞', callback_data="pizzashop_2"))
    markup.add(InlineKeyboardButton('+200üì¶(ü•ò)', callback_data="pizzashop_3"))
    markup.add(InlineKeyboardButton('‚ô•Ô∏èToH supporter', callback_data="pizzashop_4"))
    markup.add(InlineKeyboardButton('üé£–û—á–µ–Ω—å –Ω–µ–ø—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞', callback_data="pizzashop_5"))
    await bot.send_message(m.chat.id, text, reply_markup=markup,parse_mode='markdown')

async def pizzashop(call, user):
    if call.data.split("_")[1] == '1':
        if user.pizza >= 2:
            success = await db.addItem('–ë–∏–ª–µ—Ç –Ω–∞ —Ç–æ—Ç —Å–≤–µ—Ç', user)
            if success == True:
                await db.Users.filter(id=user.id).update(pizza=F('pizza') - 2)
                await bot.edit_message_text('–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üéü–ë–∏–ª–µ—Ç –Ω–∞ —Ç–æ—Ç —Å–≤–µ—Ç.', call.message.chat.id, call.message.message_id)
                await logBot.send_message(tradeChat, f"–ò–≥—Ä–æ–∫ {user.username} ({user.id}) –ø—Ä–∏–æ–±—Ä—ë–ª –≤ –ø–∏—Ü—Ü–∞—à–æ–ø–µ üéü–ë–∏–ª–µ—Ç –Ω–∞ —Ç–æ—Ç —Å–≤–µ—Ç")
            else:
                await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ. –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞", call.message.chat.id, call.message.message_id)
            return
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üçï", call.message.chat.id, call.message.message_id)
    elif call.data.split("_")[1] == '2':
        if user.pizza >= 10:
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} ({}) –ø—Ä–∏–æ–±—Ä—ë–ª –≤ –ø–∏—Ü—Ü–∞—à–æ–ø–µ —Å–º–µ–Ω—É –Ω–∏–∫–Ω–µ–π–º–∞".format(user.username, user.id))
            await bot.edit_message_text("–ù–∞–∑–æ–≤–∏ —Å–≤–æ—ë –∏–º—è, –ø—É—Ç–Ω–∏–∫.", call.message.chat.id, call.message.message_id)
            shopStatus[call.from_user.id] = 'reg_nick'
            await db.Users.filter(id=user.id).update(pizza=F('pizza') - 10)
    elif call.data.split("_")[1] == '3':
        if user.pizza >= 10:
            await db.Users.filter(id=user.id).update(pizza=F('pizza') - 10, kotelokLimit=F('kotelokLimit') + 200)
            await bot.edit_message_text('–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ +200üì¶(ü•ò)', call.message.chat.id, call.message.message_id)
            await logBot.send_message(tradeChat, f"–ò–≥—Ä–æ–∫ {user.username} ({user.id}) –ø—Ä–∏–æ–±—Ä—ë–ª –≤ –ø–∏—Ü—Ü–∞—à–æ–ø–µ +200üì¶(ü•ò)")
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üçï", call.message.chat.id, call.message.message_id)
    elif call.data.split("_")[1] == '4':
        if user.pizza >= 50:
            await db.Users.filter(id=user.id).update(pizza=F('pizza') - 50)
            await bot.edit_message_text("–ü–æ–∫—É–ø–∞–µ–º...", call.message.chat.id, call.message.message_id)
            await db.addBoost(user, lvl=360)
            if user.supporter >= time.time(): await db.Users.filter(id=user.id).update(booster=F('booster') + 2592000)
            else: await db.Users.filter(id=user.id).update(supporter=time.time() + 2592000)
            await db.addItem('–ö–æ—Ä–æ–±–∫–∞ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏', user, arg='a')
            await db.Users.filter(id=user.id).update(inventorySizeMax=F('inventorySizeMax') + 5)
            await bot.send_message(user.user_id, "–ü–æ–∫—É–ø–∫–∞ –Ω–∞–±–æ—Ä–∞ ToH supporter –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–∏—Ç—É–ª —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /badges")
            await logBot.send_message(tradeChat, "–ò–≥—Ä–æ–∫ {} ({}) –ø—Ä–∏–æ–±—Ä—ë–ª –≤ –ø–∏—Ü—Ü–∞—à–æ–ø–µ —Å–∞–ø–ø–æ—Ä—Ç–µ—Ä".format(user.username, user.id))
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üçï", call.message.chat.id, call.message.message_id)
    elif call.data.split("_")[1] == '5':
        if user.pizza >= 50:
            success = await db.addItem('–û—á–µ–Ω—å –Ω–µ–ø—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞', user)
            if success == True:
                await db.Users.filter(id=user.id).update(pizza=F('pizza') - 50)
                await bot.edit_message_text('–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ üé£–û—á–µ–Ω—å –Ω–µ–ø—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞.', call.message.chat.id, call.message.message_id)
                await logBot.send_message(tradeChat, f"–ò–≥—Ä–æ–∫ {user.username} ({user.id}) –ø—Ä–∏–æ–±—Ä—ë–ª –≤ –ø–∏—Ü—Ü–∞—à–æ–ø–µ üé£–û—á–µ–Ω—å –Ω–µ–ø—Ä–æ—Å—Ç–∞—è —É–¥–æ—á–∫–∞")
            else:
                await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –º–µ—Å—Ç–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ. –ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞", call.message.chat.id, call.message.message_id)
            return
        else:
            await bot.edit_message_text("–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç üçï", call.message.chat.id, call.message.message_id)
