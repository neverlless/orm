class BottoStatus(StatesGroup):
    cmd = State()
    destroy = State()
    setPassword = State()
    hacking = State()



async def botProfile(m, user):
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    errors = 0
    user = await db.Users.get_or_none(user_id=m.from_user.id).first()
    if not user: return 
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    if not droid:
        droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
        if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    checkChip = await db.BotInventory.exists(idbot=droid.id, active=2, name='–ß–∏–ø –û–°')
    if droid.status == 1 and checkChip: status = "–ü–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Çüü¢"
    elif droid.status == 2 and checkChip: status = "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏‚ö†Ô∏è"
    else: status = "–í—ã–≤–µ–¥–µ–Ω –∏–∑ —Å—Ç—Ä–æ—è. –†–µ–º–æ–Ω—Ç –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.üî¥"
    atk = user.lvl * 1.5
    bonusAtk = 0
    checkBonusesToAtk = await db.BotInventory.filter(idbot=droid.id, active=2, type='–£—Ä–æ–Ω')
    if checkBonusesToAtk:
        for bonus in checkBonusesToAtk:
            bonusAtk += bonus.bonus
    fullAtk = int(atk * (bonusAtk / 100 + 1))
    """checkHpBar = await db.BotInventory.exists(idbot=droid.id, active=2, name='–ß–ò–ü –û–ó')
    if checkHpBar: hp = "{}/{}".format(droid.nowhp, droid.hp)
    else:
        hp = "UNKNOWN/{}".format(droid.hp)
        status = "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏‚ö†Ô∏è"""
    needExp = droid.lvl * 1000
    checkExpBar = await db.BotInventory.exists(idbot=droid.id, active=2, name='–ß–∏–ø –û–ü')
    if checkExpBar:
        expierence = "(‚ú®{}/{})".format(droid.exp, needExp)
    else:
        expierence = "(‚ú®UNKNOWN)"
        status = "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏‚ö†Ô∏è"
    checkWeapon = await db.BotInventory.exists(type='–û—Ä—É–∂–∏–µ', active=2, idbot=droid.id)
    if not checkWeapon: status = "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏‚ö†Ô∏è"
    inventorySize = 0
    getInventory = await db.BotInventory.filter(idbot=droid.id, active=2).only('size')
    for item in getInventory:
        inventorySize += item.size
    inventorySizeMax = 45 + (droid.lvl * 5)
    text = f"""–ë–æ—Ç-00{droid.id}-{droid.model}
–£—Ä–æ–≤–µ–Ω—å: {droid.lvl}
–û–ø—ã—Ç: {expierence}
–°—Ç–∞—Ç—É—Å: {status}
–ê—Ç–∞–∫–∞: {fullAtk}
–°–ª–æ—Ç—ã —á–∏–ø–æ–≤: {inventorySize}/{inventorySizeMax}
üîß–î–µ—Ç–∞–ª–∏: {droid.details}
"""
    if droid.status == 1 and checkChip: mainStatus = "OK"
    elif droid.status == 2 and checkChip: mainStatus = "Unstable"
    else: mainStatus = "Boot error"
    #checkChipHP = await db.BotInventory.exists(name='–ß–∏–ø –û–ó', active=2, idbot=droid.id)
    #if not checkChipHP: errors += 1
    checkChipEXP = await db.BotInventory.exists(name='–ß–∏–ø –û–ü', active=2, idbot=droid.id)
    if not checkChipEXP: errors += 1
    checkWeapon = await db.BotInventory.exists(type='–û—Ä—É–∂–∏–µ', active=2, idbot=droid.id)
    if not checkWeapon: errors += 1
    inventorySize = 0
    getInventory = await db.BotInventory.filter(idbot=droid.id, active=2).only('size')
    for item in getInventory:
        inventorySize += item.size
    inventorySizeMax = 45 + (droid.lvl * 5)
    if inventorySizeMax > 100: inventorySizeMax = 100
    
    text += "\nLOG: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
    text += f"\nLOG: –û—Å–Ω–æ–≤–Ω–∞—è —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å - {mainStatus}"

    if errors == 0 and droid.status == 1 and checkChip:
        text += "\nLOG: –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã..."
        text += f"\nLOG: –í—Ç–æ—Ä–∏—á–Ω–∞—è –û–° - –æ—à–∏–±–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
        text += "\nLOG: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –î–æ—Å—Ç—É–ø –∫ —Ç–µ—Ä–º–∏–Ω–∞–ª—É —Ä–∞–∑—Ä–µ—à–µ–Ω."
        markup.add(InlineKeyboardButton('–¢–µ—Ä–º–∏–Ω–∞–ª', callback_data="botCMD"))
    elif errors > 0 and droid.status == 1 and checkChip:
        text += "\nLOG: –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã..."
        text += f"\nLOG: –í—Ç–æ—Ä–∏—á–Ω–∞—è –û–° - –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏!"
        if not checkChipEXP:
            text += f"\nLOG: –í—Ç–æ—Ä–∏—á–Ω–∞—è –û–° - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —á–∏–ø –û–ü"
        #if not checkChipHP:
            #text += f"\nLOG: –í—Ç–æ—Ä–∏—á–Ω–∞—è –û–° - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —á–∏–ø –û–ó"
        if inventorySizeMax - inventorySize < 5:
            text += f"\nLOG: –í—Ç–æ—Ä–∏—á–Ω–∞—è –û–° - –ø–∞–º—è—Ç—å –Ω–∞–≥—Ä—É–∂–µ–Ω–∞"
        if not checkWeapon:
            text += f"\nLOG: –í—Ç–æ—Ä–∏—á–Ω–∞—è –û–° - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ—Ä—É–∂–∏–µ"
        text += "\nLOG: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –î–æ—Å—Ç—É–ø –∫ —Ç–µ—Ä–º–∏–Ω–∞–ª—É —Ä–∞–∑—Ä–µ—à–µ–Ω."
        markup.add(InlineKeyboardButton('–¢–µ—Ä–º–∏–Ω–∞–ª', callback_data="botCMD"))
    elif droid.status == 2:
        text += "\nLOG: –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã..."
        text += "\nLOG: –û—à–∏–±–∫–∞ –º–æ–¥—É–ª—è –ø–æ–∏—Å–∫–∞ –æ—à–∏–±–æ–∫. –î–∞–ª—å–Ω–µ–π—à–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞."
    else:
        text += "\nLOG: –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã. –î–∞–ª—å–Ω–µ–π—à–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞."
    await bot.send_message(m.chat.id, text, reply_markup=markup)


async def botProfileCallback(call, user):
    markup = InlineKeyboardMarkup()
    markup.row_width = 2
    errors = 0
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    if not droid:
        droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
        if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    checkChip = await db.BotInventory.exists(idbot=droid.id, active=2, name='–ß–∏–ø –û–°')
    if droid.status == 1 and checkChip: status = "–ü–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Çüü¢"
    elif droid.status == 2 and checkChip: status = "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏‚ö†Ô∏è"
    else: status = "–í—ã–≤–µ–¥–µ–Ω –∏–∑ —Å—Ç—Ä–æ—è. –†–µ–º–æ–Ω—Ç –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.üî¥"
    hp = droid.hp
    checkBonusesToHp = await db.BotInventory.filter(idbot=droid.id, active=2, type='–ó–¥–æ—Ä–æ–≤—å–µ')
    for bonus in checkBonusesToHp:
        hp += bonus.bonus
    """checkHpBar = await db.BotInventory.exists(idbot=droid.id, active=2, name='–ß–ò–ü –û–ó')
    if checkHpBar: hp = "{}/{}".format(droid.nowhp, droid.hp)
    else:
        hp = "UNKNOWN/{}".format(droid.hp)
        status = "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏‚ö†Ô∏è"""
    needExp = droid.lvl * 1000
    checkExpBar = await db.BotInventory.exists(idbot=droid.id, active=2, name='–ß–∏–ø –û–ü')
    if checkExpBar:
        expierence = "(‚ú®{}/{})".format(droid.exp, needExp)
    else:
        expierence = "(‚ú®UNKNOWN)"
        status = "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏‚ö†Ô∏è"
    checkWeapon = await db.BotInventory.exists(type='–û—Ä—É–∂–∏–µ', active=2, idbot=droid.id)
    if not checkWeapon: status = "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏‚ö†Ô∏è"
    inventorySize = 0
    getInventory = await db.BotInventory.filter(idbot=droid.id, active=2).only('size')
    for item in getInventory:
        inventorySize += item.size
    inventorySizeMax = 45 + (droid.lvl * 5)
    if inventorySizeMax > 100: inventorySizeMax = 100
    text = f"""–ë–æ—Ç-00{droid.id}-{droid.model}
–£—Ä–æ–≤–µ–Ω—å: {droid.lvl}
–û–ø—ã—Ç: {expierence}
–°—Ç–∞—Ç—É—Å: {status}
–ó–¥–æ—Ä–æ–≤—å–µ: {hp}
–°–ª–æ—Ç—ã —á–∏–ø–æ–≤: {inventorySize}/{inventorySizeMax}
üîß–î–µ—Ç–∞–ª–∏: {droid.details}

"""
    if droid.status == 1 and checkChip: mainStatus = "OK"
    elif droid.status == 2 and checkChip: mainStatus = "Unstable"
    else: mainStatus = "Boot error"
    checkChipHP = await db.BotInventory.exists(name='–ß–∏–ø –û–ó', active=2, idbot=droid.id)
    if not checkChipHP: errors += 1
    #checkChipEXP = await db.BotInventory.exists(name='–ß–∏–ø –û–ü', active=2, idbot=droid.id)
    #if not checkChipEXP: errors += 1
    checkWeapon = await db.BotInventory.exists(type='–û—Ä—É–∂–∏–µ', active=2, idbot=droid.id)
    if not checkWeapon: errors += 1
    inventorySize = 0
    getInventory = await db.BotInventory.filter(idbot=droid.id, active=2).only('size')
    for item in getInventory:
        inventorySize += item.size
    inventorySizeMax = 45 + (droid.lvl * 5)
    if inventorySizeMax > 100: inventorySizeMax = 100

    text += "\nLOG: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
    text += f"\nLOG: –û—Å–Ω–æ–≤–Ω–∞—è —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å - {mainStatus}"

    if errors == 0 and droid.status == 1 and checkChip:
        text += "\nLOG: –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã..."
        text += f"\nLOG: –í—Ç–æ—Ä–∏—á–Ω–∞—è –û–° - –æ—à–∏–±–æ–∫ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
        text += "\nLOG: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –î–æ—Å—Ç—É–ø –∫ —Ç–µ—Ä–º–∏–Ω–∞–ª—É —Ä–∞–∑—Ä–µ—à–µ–Ω."
        markup.add(InlineKeyboardButton('–¢–µ—Ä–º–∏–Ω–∞–ª', callback_data="botCMD"))
    elif errors > 0 and droid.status == 1 and checkChip:
        text += "\nLOG: –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã..."
        text += f"\nLOG: –í—Ç–æ—Ä–∏—á–Ω–∞—è –û–° - –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏!"
        if not checkChipEXP:
            text += f"\nLOG: –í—Ç–æ—Ä–∏—á–Ω–∞—è –û–° - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —á–∏–ø –û–ü"
        #if not checkChipHP:
            #text += f"\nLOG: –í—Ç–æ—Ä–∏—á–Ω–∞—è –û–° - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —á–∏–ø –û–ó"
        if inventorySizeMax - inventorySize < 5:
            text += f"\nLOG: –í—Ç–æ—Ä–∏—á–Ω–∞—è –û–° - –ø–∞–º—è—Ç—å –Ω–∞–≥—Ä—É–∂–µ–Ω–∞"
        if not checkWeapon:
            text += f"\nLOG: –í—Ç–æ—Ä–∏—á–Ω–∞—è –û–° - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ—Ä—É–∂–∏–µ"
        text += "\nLOG: –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –î–æ—Å—Ç—É–ø –∫ —Ç–µ—Ä–º–∏–Ω–∞–ª—É —Ä–∞–∑—Ä–µ—à–µ–Ω."
        markup.add(InlineKeyboardButton('–¢–µ—Ä–º–∏–Ω–∞–ª', callback_data="botCMD"))
    elif droid.status == 2:
        text += "\nLOG: –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã..."
        text += "\nLOG: –û—à–∏–±–∫–∞ –º–æ–¥—É–ª—è –ø–æ–∏—Å–∫–∞ –æ—à–∏–±–æ–∫. –î–∞–ª—å–Ω–µ–π—à–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞."
    else:
        text += "\nLOG: –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã. –î–∞–ª—å–Ω–µ–π—à–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞."
    await bot.edit_message_text(text, call.message.chat.id, call.message.message_id, reply_markup=markup)


async def botCMD(call, user):
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    if not droid:
        droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
        if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    checkChip = await db.BotInventory.exists(name='–ß–∏–ø –û–°', active=2, idbot=droid.id)
    if droid.status == 1 and checkChip:
        cmdPass = True
    elif droid.status == 1 and checkChip:
        cmdPass = True
    elif droid.status == 2:
        cmdPass = False
    else:
        cmdPass = False
    if cmdPass:
        text = f"BOT-00{droid.id}-{droid.model} terminal"
        text += "\n\n–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–∏—Å—Ç–µ–º—ã. –î–ª—è –ø–æ–º–æ—â–∏ –≤–≤–µ–¥–∏—Ç–µ help"
        await BottoStatus.cmd.set()
    else:
        text = "–û–°: –î–æ—Å—Ç—É–ø –∫ —Ç–µ—Ä–º–∏–Ω–∞–ª—É –∑–∞–ø—Ä–µ—â—ë–Ω"
    await bot.edit_message_text(text, call.message.chat.id, call.message.message_id)

async def botCMDReturn(m, user):
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    if not droid:
        droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
        if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    checkChip = await db.BotInventory.exists(name='–ß–∏–ø –û–°', active=2, idbot=droid.id)
    if droid.status == 1 and checkChip:
        cmdPass = True
    elif droid.status == 1 and checkChip:
        cmdPass = True
    elif droid.status == 2:
        cmdPass = False
    else:
        cmdPass = False
    if cmdPass:
        text = f"BOT-00{droid.id}-{droid.model} terminal"
        text += "\n\n–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–∏—Å—Ç–µ–º—ã. –î–ª—è –ø–æ–º–æ—â–∏ –≤–≤–µ–¥–∏—Ç–µ help"
        await BottoStatus.cmd.set()
    else:
        text = "–û–°: –î–æ—Å—Ç—É–ø –∫ —Ç–µ—Ä–º–∏–Ω–∞–ª—É –∑–∞–ø—Ä–µ—â—ë–Ω"
    await bot.send_message(m.chat.id, text)

@dp.message_handler(lambda m: m.chat.id == m.from_user.id, state=BottoStatus.cmd)
async def cmdBot(m, state=FSMContext):
    user = await db.Users.get_or_none(user_id=m.from_user.id).first()
    if not user: return
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    if not droid:
        droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
        if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    errors = 0
    checkChip = await db.BotInventory.exists(name='–ß–∏–ø –û–°', active=2, idbot=droid.id)
    if droid.status == 1 and checkChip: mainStatus = "OK"
    elif droid.status == 2 and checkChip: mainStatus = "Unstable"
    else: mainStatus = "Boot error"
    if droid.status == 1 and checkChip:
        cmdPass = True
    elif droid.status == 1 and checkChip:
        cmdPass = True
    elif droid.status == 2:
        cmdPass = False
    else:
        cmdPass = False
    if not cmdPass:
        text = "–û–°: –î–æ—Å—Ç—É–ø –∫ —Ç–µ—Ä–º–∏–Ω–∞–ª—É –∑–∞–ø—Ä–µ—â—ë–Ω"
    else:
        if m.text.lower() == 'help':
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += """
`  help    `- –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.
`  in      `- –≤—ã–≤–æ–¥–∏—Ç –≤–µ—Å—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ë–æ—Ç–∞.
`  eq      `- –≤—ã–≤–æ–¥–∏—Ç –≤—Å–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —á–∏–ø—ã.
`  repair  `- –∑–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫.
`  gather  `- –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é —Å–±–æ—Ä–∞ —Å—Ö–µ–º
`  log     `- –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –ª–æ–≥–æ–≤ –ë–æ—Ç–∞. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
`  log +10 `- –≤—ã–≤–æ–¥–∏—Ç –ø–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫.
`  log -10 `- –≤—ã–≤–æ–¥–∏—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫.
`        `–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è log -10.
`  bot `- –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª, –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å.
`  passwd  `- —Å–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
`  destroy `- —è —Ö–æ—á—É –ø–æ–∫–æ–Ω—á–∏—Ç—å —Å–æ –≤—Å–µ–º —ç—Ç–∏–º.
`  exit    `-  –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Ç–µ—Ä–º–∏–Ω–∞–ª."""
        elif m.text.lower() == 'exit':
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += "\n–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é –∑–∞–∫—Ä—ã—Ç–∏–µ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞"
            await state.finish()
        elif m.text.lower() == 'in':
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += "\n–î–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è —Ä–∞–∑—Ä–µ—à–µ–Ω..."
        elif m.text.lower() == 'eq':
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += "\n–î–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω..."
        elif m.text.lower().startswith('log'):
            order = '+'
            limit = False
            if "+" in m.text or "-" in m.text:
                try:
                    d = m.text.split(" ")[1]
                    order = list(d)[0]
                    limit = list(d)[1]
                    if not limit: _limit = 10
                    try:
                        _limit = int(limit)
                    except:
                        print(limit)
                        _limit = 10
                    if int(_limit) > 100: _limit = 10
                    if order == '+':
                        botLogs = await db.BotLogs.filter(idbot=droid.id).order_by('-id').limit(_limit)
                    elif order == '-':
                        botLogs = await db.BotLogs.filter(idbot=droid.id).order_by('id').limit(_limit)
                except:
                    botLogs = await db.BotLogs.filter(idbot=droid.id).order_by("-id").limit(10)
            else:
                botLogs = await db.BotLogs.filter(idbot=droid.id).order_by("-id").limit(10)
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += "\n–î–æ—Å—Ç—É–ø –∫ –∂—É—Ä–Ω–∞–ª—É –∑–∞–ø–∏—Å–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω..."
            text += f"\n>{m.text}\n"
            if botLogs:
                for log in botLogs:
                    text += f"\nLOG: {log.text}"
            else:
                text += "\nLOG: NULL"
        elif m.text.lower() == 'destroy':
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += f"\n–í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –≤—ã–≤–µ–¥–µ–Ω–∏—é –∏–∑ —Å—Ç—Ä–æ—è –µ–¥–∏–Ω–∏—Ü—É BOT-00{droid.id}-{droid.model}"
            text += "\n–≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å."
            text += "\n\n–í—ã —É–≤–µ—Ä–µ–Ω—ã? (Y/n)"
            await state.finish()
            await BottoStatus.destroy.set()
        elif m.text.lower().startswith("/wear_"):
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += "\n–î–æ—Å—Ç—É–ø –∫ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω."
        elif m.text.lower().startswith("/unwear_"):
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += "\n–î–æ—Å—Ç—É–ø –∫ —ç–∫–∏–ø–∏—Ä–æ–≤–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω."
        elif m.text.lower() == 'bot':
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += "\n–î–æ—Å—Ç—É–ø –∫ –ø—Ä–æ—Ñ–∏–ª—é —Ä–∞–∑—Ä–µ—à–µ–Ω."
            await state.finish()
        elif m.text.lower() == 'repair':
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += "\n–î–æ—Å—Ç—É–ø –∫ –º–æ–¥—É–ª—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω."
        elif m.text.lower() == 'gather':
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += "\n–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–º—É —Å–µ—Ä–≤–µ—Ä—É..."
        elif m.text.lower() == 'passwd':
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += "\n–î–æ—Å—Ç—É–ø –∫ —Å–º–µ–Ω–µ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω."
        elif m.text.lower().startswith('/collect_'):
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += "\n–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã..."
        elif m.text.lower().startswith('/demotion_'):
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += "\n–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–º–∞–Ω–¥—ã..."
        else:
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += "\n–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –î–ª—è –ø–æ–º–æ—â–∏ –≤–≤–µ–¥–∏—Ç–µ help"
    if m.text.lower() == 'help': await bot.send_message(m.chat.id, text, parse_mode='markdown')
    else: await bot.send_message(m.chat.id, text)
    await asyncio.sleep(1)
    if m.text.lower() == 'in': await botInventory(user)
    elif m.text.lower() == 'eq': await botPers(user)
    elif m.text.lower() == 'bot': await botProfile(m, user)
    elif m.text.lower() == 'repair': await botRepair(m, user)
    elif m.text.lower() == 'gather': await bottoShop(m, user)
    elif m.text.lower() == 'passwd': await changePass(m)
    elif m.text.lower().startswith("/wear_"): await botWear(m)
    elif m.text.lower().startswith("/unwear_"): await botUnwear(m)
    elif m.text.lower().startswith("/collect_"): await botBuy(m)
    elif m.text.lower().startswith("/demotion_"): await botDemotion(m)

@dp.message_handler(lambda m: m.chat.id == m.from_user.id, state=BottoStatus.destroy)
async def destroy(m, state=FSMContext):
    user = await db.Users.get_or_none(user_id=m.from_user.id).first()
    if not user: return
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    if not droid:
        droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
        if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    errors = 0
    checkChip = await db.BotInventory.exists(name='–ß–∏–ø –û–°', active=2, idbot=droid.id)
    if droid.status != 0 and checkChip:
        cmdPass = True
    else:
        cmdPass = False
    print(cmdPass)
    if not cmdPass:
        text = "–û–°: –î–æ—Å—Ç—É–ø –∫ —Ç–µ—Ä–º–∏–Ω–∞–ª—É –∑–∞–ø—Ä–µ—â—ë–Ω"
    else:
        if m.text == "Y":
            await state.finish()
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += "\n–ó–∞–ø—Ä–æ—à–µ–Ω–æ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º –µ–¥–∏–Ω–∏—Ü—ã..."
            msg = await bot.send_message(m.chat.id, text)
            await asyncio.sleep(1)
            text += "\n–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞..."
            msg1 = await bot.edit_message_text(text, msg.chat.id, msg.message_id)
            await asyncio.sleep(5)
            text += "\n–î–æ—Å—Ç—É–ø –ø–æ–ª—É—á–µ–Ω, –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤—ã–¥–∞–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞."
            msg2 = await bot.edit_message_text(text, msg1.chat.id, msg1.message_id)
            await asyncio.sleep(1)
            text += "\n–ù–∞—á–∏–Ω–∞—é –ø—Ä–æ—Ü–µ—Å—Å..."
            msg3 = await bot.edit_message_text(text, msg2.chat.id, msg2.message_id)
            await asyncio.sleep(1)
            text += "\n–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—Ç–æ—Ä–∏—á–Ω–æ–π –û–°..."
            msg4 = await bot.edit_message_text(text, msg3.chat.id, msg3.message_id)
            await asyncio.sleep(3)
            await bot.send_message(m.chat.id, "‚ö†Ô∏è–í–Ω–∏–º–∞–Ω–∏–µ! –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ –ë–æ—Ç-00{}-{}".format(droid.id, droid.model))
            await asyncio.sleep(1)
            text += "\n–í—Ç–æ—Ä–∏—á–Ω–∞—è –û–° –æ—Ç–∫–ª—é—á–µ–Ω–∞.\n–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."
            msg5 = await bot.edit_message_text(text, msg4.chat.id, msg4.message_id)
            await asyncio.sleep(3)
            await bot.send_message(m.chat.id, "‚ö†Ô∏è–í–Ω–∏–º–∞–Ω–∏–µ! –í—Ç–æ—Ä–∏—á–Ω–∞—è –û–° –ë–æ—Ç-00{}-{} –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —Å—Ä–æ—á–Ω–∞—è –∑–∞–º–µ–Ω–∞ —á–∏–ø–æ–≤".format(droid.id, droid.model))
            await asyncio.sleep(7)
            text += "\n–î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã. –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–ª—É–∂–±..."
            msg6 = await bot.edit_message_text(text, msg5.chat.id, msg5.message_id)
            await asyncio.sleep(2)
            await bot.send_message(m.chat.id, "‚ö†Ô∏è–í–Ω–∏–º–∞–Ω–∏–µ! –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—à–∏–±–∫–∏ –ø–µ—Ä–≤–∏—á–Ω–æ–π –û–° —É –ë–æ—Ç-00{}-{}. –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞.".format(droid.id, droid.model))
            await asyncio.sleep(3)
            text += "\n–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Å–ª—É–∂–±..."
            msg7 = await bot.edit_message_text(text, msg6.chat.id, msg6.message_id)
            await asyncio.sleep(5)
            text += "\n–ûÃ∂ÃéÃß—ÅÃ∂ÃâÃû–ΩÃ∑ÃïÃ£–æÃ∑ÃÇÕö–≤Ã∂ÃöÕñ–ΩÃ∂ÕùÃ¨—ãÃ¥ÕõÃù–µÃ¥ÃÜÃß Ã∏ÕùÃπ—ÅÃ∂ÃÜÃ°–ªÃ∏ÃíÃ©—ÉÃ¥ÃøÕá–∂Ã∑ÕëÕÖ–±Ã∏ÃøÃ≤—ãÃ∂ÃìÃ™ Ã∏ÕóÃü–æÃ∂ÕóÃ°—ÇÃ∑ÃÑÃ£–∫Ã∑ÕÑÃ°–ªÃ∂ÃîÃ¶—éÃ∏ÕÄÃ≤—áÃ∂ÃõÃ±–µÃµÕ†Ã∞–ΩÃ∑ÃÇÕá—ãÃ∑ÃõÕï.Ã∑ÃõÕâ"
            msg8 = await bot.edit_message_text(text, msg7.chat.id, msg7.message_id)
            await asyncio.sleep(5)
            text += "\n–üÃ∏ÃêÃîÃéÃ∫ÕúÕîÃ®–µÃ∏ÃæÃΩÃöÃ™—ÄÃ∂ÕÜÕëÃ¨Ã®Ã∫–µÃ∂ÕÑÕéÃ©Õú–∑Ã∂ÃìÃâÃ°Ãñ–∞Ã¥ÃÖÃ°ÃüÃ£–≥Ã∏ÃàÃÜÃäÃöÕôÃò—ÄÃ∑ÕùÃíÃÖÕô—ÉÃ∂ÕÅÃêÕÑÕá–∑Ã∂ÕÜÃ∞Ãò–∫Ã¥ÕÑÃéÕóÕÇÃ≥–∞Ã¥ÃÉÕçÕï Ã∑ÕÑÕÅÃíÃèÃ∫Ã§Ã¨–ûÃ∑ÃÑÃíÃâÃôÃ≤ÃûÃ≥–°Ã∂ÃÄÃÇÃÅÃ™ÃüÃûÕá.Ã∑ÃõÕâÃÆÕÖ.."
            msg9 = await bot.edit_message_text(text, msg8.chat.id, msg8.message_id)
            await db.Bot.filter(id=droid.id).update(status=0)
        elif m.text == 'n':
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += "\n–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."
            await state.finish()
            await bot.send_message(m.chat.id, text)
        else:
            text = f"BOT-00{droid.id}-{droid.model} terminal"
            text += f"\n–í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–∏–≤–µ–¥—ë—Ç –∫ –≤—ã–≤–µ–¥–µ–Ω–∏—é –∏–∑ —Å—Ç—Ä–æ—è –µ–¥–∏–Ω–∏—Ü—ã BOT-00{droid.id}-{droid.model}"
            text += "\n–≠—Ç–æ—Ç –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å."
            text += "\n\n–í—ã —É–≤–µ—Ä–µ–Ω—ã? (Y/n)"
            await bot.send_message(m.chat.id, text)


async def botInventory(user):
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    if not droid:
        droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
        if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    inventorySize = 0
    getInventory = await db.BotInventory.filter(idbot=droid.id, active=2).only('size')
    for item in getInventory:
        inventorySize += item.size
    inventorySizeMax = 45 + (droid.lvl * 5)
    if inventorySizeMax > 100: inventorySizeMax = 100
    text = "–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ë–æ—Ç-00{}-{} ({}üì¶/{}üì¶)".format(droid.id, droid.model, inventorySize, inventorySizeMax)
    allInventory = await db.BotInventory.filter(idbot=droid.id, active=1)
    for item in allInventory:
        text += "\n{} | {} | {}üì¶ | /wear_{} (–†–∞–∑–æ–±—Ä–∞—Ç—å /demotion_{})".format(item.name, item.descr, item.size, item.id, item.id)
    await bot.send_message(user.user_id, text)


async def botPers(user):
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    if not droid:
        droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
        if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    inventorySize = 0
    getInventory = await db.BotInventory.filter(idbot=droid.id, active=2).only('size')
    for item in getInventory:
        inventorySize += item.size
    inventorySizeMax = 45 + (droid.lvl * 5)
    if inventorySizeMax > 100: inventorySizeMax = 100
    text = "–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —á–∏–ø—ã –ë–æ—Ç-00{}-{} ({}üì¶/{}üì¶)".format(droid.id, droid.model, inventorySize, inventorySizeMax)
    allInventory = await db.BotInventory.filter(idbot=droid.id, active=2)
    for item in allInventory:
        text += "\n{} | {} | {}üì¶ | /unwear_{}".format(item.name, item.descr, item.size, item.id)
    await bot.send_message(user.user_id, text)


async def botWear(m):
    await asyncio.sleep(1)
    if m.chat.id == m.from_user.id:
        user = await db.Users.get_or_none(user_id=m.from_user.id).first()
        if user and user.ban != 1:
            result = m.text.lower().replace('/wear_', '', 1).replace('@TowerOfHeaven_bot', '', 1)
            droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
            if not droid:
                droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
                if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            item = await db.BotInventory.get_or_none(id=result).first()
            if item and item.idbot == droid.id:
                inventorySize = 0
                getInventory = await db.BotInventory.filter(idbot=droid.id, active=2).only('size')
                for itemInInv in getInventory:
                    inventorySize += itemInInv.size
                inventorySizeMax = 45 + (droid.lvl * 5)
                if inventorySizeMax > 100: inventorySizeMax = 100
                if inventorySize + item.size <= inventorySizeMax:
                    await db.BotInventory.filter(id=item.id).update(active=2)
                    await m.answer("{} —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –û–°".format(item.name))
                else:
                    await m.answer("–û–°: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏")
            else:
                await m.answer("–û–°: –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∏–ø–∞")


async def botUnwear(m):
    await asyncio.sleep(1)
    if m.chat.id == m.from_user.id:
        user = await db.Users.get_or_none(user_id=m.from_user.id).first()
        if user and user.ban != 1:
            result = m.text.lower().replace('/unwear_', '', 1).replace('@TowerOfHeaven_bot', '', 1)
            droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
            if not droid:
                droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
                if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            item = await db.BotInventory.get_or_none(id=result).first()
            if item and item.idbot == droid.id:
                await db.BotInventory.filter(id=item.id).update(active=1)
                await m.answer("{} —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á—ë–Ω –∏–∑ –û–°".format(item.name))
            else:
                await m.answer("–û–°: –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∏–ø–∞")

async def botDemotion(m):
    if m.chat.id == m.from_user.id:
        user = await db.Users.get_or_none(user_id=m.from_user.id).first()
        if user and user.ban != 1:
            result = m.text.lower().replace('/demotion_', '', 1).replace('@TowerOfHeaven_bot', '', 1)
            droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
            if not droid:
                droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
                if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            item = await db.BotInventory.get_or_none(id=result).first()
            if item and item.idbot == droid.id and item.active != 0:
                await db.BotInventory.filter(id=item.id).update(active=0)
                profit = random.randint(20, 70)
                await db.Bot.filter(id=droid.id).update(details=F('details') + profit)
                await m.answer("{} —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–æ–±—Ä–∞–Ω. –ü–æ–ª—É—á–µ–Ω–æ: {} üîß".format(item.name, profit))
            else:
                await m.answer("–û–°: –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∏–ø–∞")


async def botRepair(m, user):
    await asyncio.sleep(1)
    if m.chat.id != m.from_user.id: return
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    if not droid:
        droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
        if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    checkChip = await db.BotInventory.exists(idbot=droid.id, active=2, name='–ß–∏–ø –û–°')
    
    if not checkChip: return await m.answer("–ß–∏–ø –û–° –ø–æ–≤—Ä–µ–∂–¥—ë–Ω. –†–µ–º–æ–Ω—Ç –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.")
    inventorySize = 0
    getInventory = await db.BotInventory.filter(idbot=droid.id, active=2).only('size')
    for item in getInventory:
        inventorySize += item.size
    inventorySizeMax = 45 + (droid.lvl * 5)
    if inventorySizeMax > 100: inventorySizeMax = 100

    text = ""
    checkHpBar = await db.BotInventory.exists(idbot=droid.id, active=2, name='–ß–∏–ø –û–ó')
    if not checkHpBar:
        text += "\n–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —á–∏–ø–∞ –û–ó. –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π..."
        checkChip = await db.BotInventory.get_or_none(idbot=droid.id, active=1, name='–ß–∏–ø –û–ó')
        if checkChip:
            text += "\n–ù–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π —á–∏–ø. "
            if inventorySize + checkChip.size <= inventorySizeMax:
                checkChip.active = 2
                await checkChip.save()
                text += "–ß–∏–ø —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. "
            else:
                text += "–ß–∏–ø –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏. "
        else:
            text += "\n–ü–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —á–∏–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —á–∏–ø —É —Ç–æ—Ä–≥–æ–≤—Ü–∞ —á–∏–ø–∞–º–∏."

    checkExpBar = await db.BotInventory.exists(idbot=droid.id, active=2, name='–ß–∏–ø –û–ü')
    if not checkExpBar:
        text += "\n–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —á–∏–ø–∞ –û–ü. –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π..."
        checkChip = await db.BotInventory.get_or_none(idbot=droid.id, active=1, name='–ß–∏–ø –û–ü')
        if checkChip:
            text += "\n–ù–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π —á–∏–ø. "
            if inventorySize + checkChip.size <= inventorySizeMax:
                checkChip.active = 2
                await checkChip.save()
                text += "–ß–∏–ø —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. "
            else:
                text += "–ß–∏–ø –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏. "
        else:
            text += "\n–ü–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —á–∏–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —á–∏–ø —É —Ç–æ—Ä–≥–æ–≤—Ü–∞ —á–∏–ø–∞–º–∏."

    checkWeapon = await db.BotInventory.exists(type='–û—Ä—É–∂–∏–µ', active=2, idbot=droid.id)
    if not checkWeapon: 
        text += "\n–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —á–∏–ø–∞ –û–ü. –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π..."
        checkChip = await db.BotInventory.get_or_none(idbot=droid.id, active=1, type='–û—Ä—É–∂–∏–µ')
        if checkChip:
            text += "\n–ù–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –æ—Ä—É–∂–∏–µ. "
            if inventorySize + checkChip.size <= inventorySizeMax:
                checkChip.active = 2
                await checkChip.save()
                text += "–û—Ä—É–∂–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. "
            else:
                text += "–û—Ä—É–∂–∏–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ - –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–ª–æ—Ç–æ–≤ –ø–∞–º—è—Ç–∏. "
        else:
            text += "\n–ü–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –æ—Ä—É–∂–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: –Ω–∞–π—Ç–∏ –æ—Ä—É–∂–∏–µ."

    if inventorySize + 5 >= inventorySizeMax:
        text += "\n–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏. –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: –æ—Å–≤–æ–±–æ–¥–∏—Ç–µ –ø–∞–º—è—Ç—å –æ—Ç –ª–∏—à–Ω–∏—Ö —Å–ª–æ—Ç–æ–≤"
    if text == "":
        text = "–ú–æ–¥—É–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞—à—ë–ª –æ—à–∏–±–æ–∫."
    await bot.send_message(m.chat.id, text)



async def bottoShop(m, user):
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    if not droid:
        droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
        if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    checkChip = await db.BotInventory.exists(idbot=droid.id, active=2, name='–ß–∏–ø –û–°')
    if checkChip:
        text = """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ö–µ–º—ã –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–±–æ—Ä–∞:

–ß–∏–ø –û–°. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –æ–∑–Ω–∞—á–∞–µ—Ç —Å–º–µ—Ä—Ç—å | üì¶5 | üîß 50 (/collect_1)
–ß–∏–ø –û–ü. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–ø—ã—Ç, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è. | üì¶3 | üîß 60 (/collect_3)

–ß–∏–ø—ã –∞—Ç–∞–∫–∏:
    –£—Ä–æ–Ω+ (–ø–æ–≤—ã—à–∞–µ—Ç —É—Ä–æ–Ω –Ω–∞ 15üî™) | üì¶5 | üîß 125 (/collect_4)
    –£—Ä–æ–Ω++ (–ø–æ–≤—ã—à–∞–µ—Ç —É—Ä–æ–Ω –Ω–∞ 30üî™) | üì¶9 | üîß 175 (/collect_5)
    –£—Ä–æ–Ω+++ (–ø–æ–≤—ã—à–∞–µ—Ç —É—Ä–æ–Ω –Ω–∞ 50üî™) | üì¶12 | üîß 220 (/collect_6)
    –ö—Ä–∏—Ç+ (–ø–æ–≤—ã—à–∞–µ—Ç —à–∞–Ω—Å –∫—Ä–∏—Ç–∞ –Ω–∞ 3%) | üì¶5 | üîß 145 (/collect_7)
    –ö—Ä–∏—Ç++ (–ø–æ–≤—ã—à–∞–µ—Ç —à–∞–Ω—Å –∫—Ä–∏—Ç–∞ –Ω–∞ 6%) | üì¶9 | üîß 205 (/collect_8)
    –ö—Ä–∏—Ç+++ (–ø–æ–≤—ã—à–∞–µ—Ç —à–∞–Ω—Å –∫—Ä–∏—Ç–∞ –Ω–∞ 9%) | üì¶12 | üîß 250 (/collect_9)

–ß–∏–ø—ã –∑–∞—â–∏—Ç—ã:
    –ó–¥–æ—Ä–æ–≤—å–µ+ (–ø–æ–≤—ã—à–∞–µ—Ç –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å —Ö–ø –±–æ—Ç–∞ –Ω–∞ 3%) | üì¶5 | üîß 130 (/collect_10)
    –ó–¥–æ—Ä–æ–≤—å–µ++ (–ø–æ–≤—ã—à–∞–µ—Ç –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å —Ö–ø –±–æ—Ç–∞ –Ω–∞ 6%) | üì¶9 | üîß 180 (/collect_11)
    –ó–¥–æ—Ä–æ–≤—å–µ+++ (–ø–æ–≤—ã—à–∞–µ—Ç –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å —Ö–ø –±–æ—Ç–∞ –Ω–∞ –Ω–∞ 9%) | üì¶12 | üîß 230 (/collect_12)
    –£–∫–ª–æ–Ω–µ–Ω–∏–µ+ (–ø–æ–≤—ã—à–∞–µ—Ç —à–∞–Ω—Å —É–∫–ª–æ–Ω–µ–Ω–∏—è –Ω–∞ 3%) | üì¶5 | üîß 175 (/collect_13)
    –£–∫–ª–æ–Ω–µ–Ω–∏–µ++ (–ø–æ–≤—ã—à–∞–µ—Ç —à–∞–Ω—Å —É–∫–ª–æ–Ω–µ–Ω–∏—è –Ω–∞ 6%) | üì¶9 | üîß 255 (/collect_14)
    –£–∫–ª–æ–Ω–µ–Ω–∏–µ+++ (–ø–æ–≤—ã—à–∞–µ—Ç —à–∞–Ω—Å —É–∫–ª–æ–Ω–µ–Ω–∏—è –Ω–∞ 9%) | üì¶12 | üîß 325 (/collect_15)
    –ó–∞—â–∏—Ç–∞+ (–≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–≥–ª–æ—â–µ–Ω–∏—è +3%) | üì¶5 | üîß 150 (/collect_16)
    –ó–∞—â–∏—Ç–∞++ (–≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–≥–ª–æ—â–µ–Ω–∏–µ +6%) | üì¶9 | üîß 225 (/collect_17)
    –ó–∞—â–∏—Ç–∞+++ (–≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–≥–ª–æ—â–µ–Ω–∏–µ +9%) | üì¶12 | üîß 300 (/collect_18)

–ü—Ä–æ—á–∏–µ —á–∏–ø—ã:
    –£–¥–∞—á–∞+ (—à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è –î–µ—Ç–∞–ª–µ–π +3%) | üì¶5 | üîß 150 (/collect_19)
    –£–¥–∞—á–∞++ (—à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è –î–µ—Ç–∞–ª–µ–π +6%) | üì¶9 | üîß 225 (/collect_20)
    –£–¥–∞—á–∞+++ (—à–∞–Ω—Å –≤—ã–ø–∞–¥–µ–Ω–∏—è –î–µ—Ç–∞–ª–µ–π +9%) | üì¶12 | üîß 300 (/collect_21)

–ß–∏–ø—ã –æ—Ä—É–∂–∏—è:
    –õ–∞–∑–µ—Ä–Ω—ã–π –≤—ã—Å—Ç—Ä–µ–ª (–Ω–∞–Ω–æ—Å–∏—Ç 500% —É—Ä–æ–Ω–∞, –ö–î - 10 –º–∏–Ω—É—Ç) | üì¶15 | üîß 500 (/collect_22)

–ß–∏–ø—ã PvP:
    –£–∫–ª–æ–Ω+ (–ø–æ–≤—ã—à–∞–µ—Ç —à–∞–Ω—Å —É–∫–ª–æ–Ω–µ–Ω–∏—è –Ω–∞ 3%) | üì¶5 | üîß 200 (/collect_23)
    –£–∫–ª–æ–Ω++ (–ø–æ–≤—ã—à–∞–µ—Ç —à–∞–Ω—Å —É–∫–ª–æ–Ω–µ–Ω–∏—è –Ω–∞ 6%) | üì¶9 | üîß 350 (/collect_24)
    –£–∫–ª–æ–Ω+++ (–ø–æ–≤—ã—à–∞–µ—Ç —à–∞–Ω—Å —É–∫–ª–æ–Ω–µ–Ω–∏—è –Ω–∞ 9%) | üì¶12 | üîß 475 (/collect_25)
    –£–¥–∞—Ä+ (–ø–æ–≤—ã—à–∞–µ—Ç —É—Ä–æ–Ω –Ω–∞ 3%) | üì¶5 | üîß 175 (/collect_26)
    –£–¥–∞—Ä++ (–ø–æ–≤—ã—à–∞–µ—Ç —É—Ä–æ–Ω –Ω–∞ 6%) | üì¶9 | üîß 300 (/collect_27)
    –£–¥–∞—Ä+++ (–ø–æ–≤—ã—à–∞–µ—Ç —É—Ä–æ–Ω –Ω–∞ 9%) | üì¶12 | üîß 425 (/collect_28)
    –í–∞–º–ø–∏—Ä–∏–∑–º+ (–ø–æ–≤—ã—à–∞–µ—Ç –≤–∞–º–ø–∏—Ä–∏–∑–º –Ω–∞ 3%) | üì¶5 | üîß 225 (/collect_29)
    –í–∞–º–ø–∏—Ä–∏–∑–º++ (–ø–æ–≤—ã—à–∞–µ—Ç –≤–∞–º–ø–∏—Ä–∏–∑–º –Ω–∞ 6%) | üì¶9 | üîß 450 (/collect_30)
    –í–∞–º–ø–∏—Ä–∏–∑–º+++ (–ø–æ–≤—ã—à–∞–µ—Ç –≤–∞–º–ø–∏—Ä–∏–∑–º –Ω–∞ 9%) | üì¶12 | üîß 600 (/collect_31)
    """
        await bot.send_message(m.chat.id, text)


async def botBuy(m):
    user = await db.Users.get_or_none(user_id=m.from_user.id).first()
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    if not droid:
        droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
        if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    checkChip = await db.BotInventory.exists(idbot=droid.id, active=2, name='–ß–∏–ø –û–°')
    if checkChip:
        whatBuy = m.text.split("_")[1]
        try:
            lot = int(whatBuy)
        except:
            return
        if lot == 1:
            name = '–ß–∏–ø –û–°'
            price = 50
        #elif lot == 2:
            #name = "–ß–∏–ø –û–ó"
            #price = 65
        elif lot == 3:
            name = "–ß–∏–ø –û–ü"
            price = 60
        elif lot == 4:
            name = "–£—Ä–æ–Ω+"
            price = 125
        elif lot == 5:
            name = "–£—Ä–æ–Ω++"
            price = 175
        elif lot == 6:
            name = "–£—Ä–æ–Ω+++"
            price = 220
        elif lot == 7:
            name = "–ö—Ä–∏—Ç+"
            price = 145
        elif lot == 8:
            name = "–ö—Ä–∏—Ç++"
            price = 205
        elif lot == 9:
            name = "–ö—Ä–∏—Ç+++"
            price = 250
        elif lot == 10:
            name = "–ó–¥–æ—Ä–æ–≤—å–µ+"
            price = 130
        elif lot == 11:
            name = "–ó–¥–æ—Ä–æ–≤—å–µ++"
            price = 180
        elif lot == 12:
            name = "–ó–¥–æ—Ä–æ–≤—å–µ+++"
            price = 230
        elif lot == 13:
            name = "–£–∫–ª–æ–Ω–µ–Ω–∏–µ+"
            price = 175
        elif lot == 14:
            name = "–£–∫–ª–æ–Ω–µ–Ω–∏–µ++"
            price = 255
        elif lot == 15:
            name = "–£–∫–ª–æ–Ω–µ–Ω–∏–µ+++"
            price = 325
        elif lot == 16:
            name = "–ó–∞—â–∏—Ç–∞+"
            price = 150
        elif lot == 17:
            name = "–ó–∞—â–∏—Ç–∞++"
            price = 225
        elif lot == 18:
            name = "–ó–∞—â–∏—Ç–∞+++"
            price = 300
        elif lot == 19:
            name = "–£–¥–∞—á–∞+"
            price = 150
        elif lot == 20:
            name = "–£–¥–∞—á–∞++"
            price = 225
        elif lot == 21:
            name = "–£–¥–∞—á–∞+++"
            price = 300
        elif lot == 22:
            name = "–õ–∞–∑–µ—Ä–Ω—ã–π –≤—ã—Å—Ç—Ä–µ–ª"
            price = 500
        elif lot == 23:
            name = "–£–∫–ª–æ–Ω+"
            price = 200
        elif lot == 24:
            name = "–£–∫–ª–æ–Ω++"
            price = 350
        elif lot == 25:
            name = "–£–∫–ª–æ–Ω+++"
            price = 475
        elif lot == 26:
            name = "–£–¥–∞—Ä+"
            price = 175
        elif lot == 27:
            name = "–£–¥–∞—Ä++"
            price = 300
        elif lot == 28:
            name = "–£–¥–∞—Ä+++"
            price = 300
        elif lot == 29:
            name = "–í–∞–º–ø–∏—Ä–∏–∑–º+"
            price = 225
        elif lot == 30:
            name = "–í–∞–º–ø–∏—Ä–∏–∑–º++"
            price = 450
        elif lot == 31:
            name = "–í–∞–º–ø–∏—Ä–∏–∑–º+++"
            price = 600
        else:
            return
        if droid.details >= price:
            success = await db.addItemBot(name, droid)
            if success:
                await db.Bot.filter(id=droid.id).update(details=F('details') - price)
                await bot.send_message(m.chat.id, "–ß–∏–ø {} —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω.".format(name))
            else:
                await bot.send_message(m.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å —á–∏–ø {}".format(name))
        else:
            await bot.send_message(m.chat.id, "–°–æ–±—Ä–∞—Ç—å —á–∏–ø –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω—ã–º. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ üîß–î–µ—Ç–∞–ª–µ–π")



async def changePass(m):
    user = await db.Users.get_or_none(user_id=m.from_user.id).first()
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    if not droid:
        droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
        if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    checkChip = await db.BotInventory.exists(idbot=droid.id, active=2, name='–ß–∏–ø –û–°')
    if checkChip:
        await BottoStatus.setPassword.set()
        await bot.send_message(m.chat.id, "–ó–∞–ø—É—â–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å. –û–Ω –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 10 —Å–∏–º–≤–æ–ª–æ–≤.")



@dp.message_handler(lambda m: m.chat.id == m.from_user.id, state=BottoStatus.setPassword)
async def changingPassword(m, state=FSMContext):
    if len(m.text) > 10:
        await bot.send_message(m.chat.id, "–û—à–∏–±–∫–∞. –ü–∞—Ä–æ–ª—å –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 10 —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
    else:
        await state.finish()
        user = await db.Users.get_or_none(user_id=m.from_user.id).first()
        droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
        if not droid:
            droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
            if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        checkChip = await db.BotInventory.exists(idbot=droid.id, active=2, name='–ß–∏–ø –û–°')
        if checkChip:
            await db.Bot.filter(id=droid.id).update(password=m.text)
            await bot.send_message(m.chat.id, "–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å...")
            user = await db.Users.get_or_none(id=droid.idplayer)
            await botCMDReturn(m, user)

botsMasterPasswords = {}
hackPool = {}
hackKD = {}
@dp.callback_query_handler(lambda call: call.from_user.id not in bannedUsers and call.data.startswith('hack_'))
async def hack(call):
    user = await db.Users.get_or_none(user_id=call.from_user.id).first()
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    if not droid:
        droid = await db.Bot.get_or_none(idplayer=user.id, status=0).first()
        if not droid: return await m.answer("–ë–æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    if call.from_user.id in hackKD and hackKD[call.from_user.id] >= int(time.time()):
        return await bot.edit_message_text(f"BOT-00{droid.id}-{droid.model}: –í–∑–ª–æ–º –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", call.message.chat.id, call.message.message_id)
    checkChip = await db.BotInventory.exists(idbot=droid.id, active=2, name='–ß–∏–ø –û–°')
    if checkChip:
        enemyBot = await db.Bot.get_or_none(id=call.data.split("_")[1])
        if enemyBot:
            enemyUser =  await db.Users.get_or_none(id=enemyBot.idplayer).first()
            if enemyUser.location == user.location and enemyUser.progLoc == user.progLoc:
                await bot.send_message(call.message.chat.id, f"BOT-00{droid.id}-{droid.model}: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤–∑–ª–æ–º–∞...")
                rand = random.randint(0, 3)
                await asyncio.sleep(rand)
                masterPassword = db.ABC(5)
                if enemyBot.id in botsMasterPasswords:
                    del botsMasterPasswords[enemyBot.id]
                if droid.id in hackPool:
                    del hackPool[droid.id]
                hackPool[droid.id] = enemyBot.id
                hashedpass = ""
                hiddenpass = ""
                textForPlayer = ""
                symbolNum = 0
                botsMasterPasswords[enemyBot.id] = masterPassword
                print(masterPassword)
                for char in masterPassword:
                    rand = random.randint(1, 3)
                    hashedpass += db.ABC(rand)
                    hashedpass += char
                    hiddenpass += char
                    symbolNum += 1
                    rando = rand + 1
                    if hiddenpass == masterPassword:
                        textForPlayer += "{}".format(rando)
                    else:
                        textForPlayer += "{}-".format(rando)
                rand = random.randint(1, 3)
                hashedpass += db.ABC(rand)
                textForPlayer += "\n{}".format(hashedpass)
                await BottoStatus.hacking.set()
                await bot.send_message(call.message.chat.id, "–ú–∞—Å—Ç–µ—Ä-–∫–ª—é—á —Å–ø—Ä—è—Ç–∞–Ω –≤ —Ç–µ–∫—É—â–µ–º —à–∏—Ñ—Ä–µ:\n\n{}\n\n–í—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ –æ–Ω —É –≤–∞—Å –∏–º–µ–µ—Ç—Å—è. –î–ª—è –æ—Ç–º–µ–Ω—ã –≤–∑–ª–æ–º–∞ –≤–≤–µ–¥–∏—Ç–µ 'cancel'".format(textForPlayer))
            else:
                await bot.edit_message_text("–û—à–∏–±–∫–∞.", call.message.chat.id, call.message.message_id)
        else:
            await bot.send_message(call.message.chat.id, "–ë–æ—Ç –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –≤—ã–≤–µ–¥–µ–Ω –∏–∑ —Å—Ç—Ä–æ—è")

@dp.message_handler(lambda m: m.chat.id == m.from_user.id, state=BottoStatus.hacking)
async def hackingStep2(m, state=FSMContext):
    if m.text.lower() == 'cancel':
        await state.finish()
        await bot.send_message(m.chat.id, "–ü—Ä–æ—Ü–µ—Å—Å –≤–∑–ª–æ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
    else:
        user = await db.Users.get_or_none(user_id=m.from_user.id).first()
        droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
        if not droid:
            await bot.send_message(m.chat.id, "–ü—Ä–æ—Ü–µ—Å—Å –≤–∑–ª–æ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
            await state.finish()
        else:
            enemyBot = await db.Bot.get_or_none(id=hackPool[droid.id], status__in=[1, 2]).first()
            if enemyBot:
                if enemyBot.id in botsMasterPasswords:
                    success = False
                    if m.text == enemyBot.password: success = True
                    elif m.text == botsMasterPasswords[enemyBot.id]: success = True
                    await state.finish()
                    if success:
                        hackKD[m.from_user.id] = int(time.time()) + 300
                        enemy = await db.Users.get_or_none(id=enemyBot.idplayer).first()
                        minDamage = int(enemy.hp * 0.1)
                        maxDamage = int(enemy.hp * 0.2)
                        damage = random.randint(minDamage, maxDamage)
                        if damage >= enemy.nowhp:
                            damage -= 1
                        maxStealed = int(enemyBot.details / 20)
                        stealed = random.randint(0, maxStealed)
                        await db.Users.filter(id=enemy.id).update(nowhp=F('nowhp') - damage)
                        if stealed > 0:
                            hackedTime = int(time.time()) + 600
                            await db.Bot.filter(id=enemyBot.id).update(details=F('details') - stealed, hackedTime=hackedTime)
                            await db.Bot.filter(id=droid.id).update(details=F('details') + stealed)
                            bonusText = "–ü–æ–ª—É—á–µ–Ω–æ {}üîß".format(stealed)
                            bonusEnemyText = "–ü–æ—Ç–µ—Ä—è–Ω–æ {}üîß".format(stealed)
                        else:
                            bonusText = ""
                            bonusEnemyText = ""
                        await bot.send_message(m.chat.id, "–í–∑–ª–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω. –í—Ä–∞–∂–µ—Å–∫–∏–π –±–æ—Ç –Ω–∞–Ω—ë—Å {}üî™ –≤–ª–∞–¥–µ–ª—å—Ü—É.\n{}".format(damage, bonusText))
                        try:
                            await bot.send_message(enemy.user_id, "–í–∞—à –±–æ—Ç –±—ã–ª –≤–∑–ª–æ–º–∞–Ω. –í–∞—à –±–æ—Ç –Ω–∞–Ω—ë—Å –≤–∞–º {}üî™\n{}".format(damage, bonusEnemyText))
                        except: pass
                    else:
                        await state.finish()
                        await bot.send_message(m.chat.id, "–í–∑–ª–æ–º –Ω–µ —É–¥–∞–ª—Å—è. –ú–∞—Å—Ç–µ—Ä-–∫–ª—é—á –Ω–µ–≤–µ—Ä–Ω—ã–π. –í–∑–ª–æ–º –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
                else:
                    await state.finish()
                    await bot.send_message(m.chat.id, "–≠—Ç–æ—Ç –±–æ—Ç –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –¥—É—ç–ª–∏.")
            else:
                await state.finish()
                await bot.send_message(m.chat.id, "–ë–æ—Ç –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –≤—ã–≤–µ–¥–µ–Ω –∏–∑ —Å—Ç—Ä–æ—è.")


async def getDroidAtk(attacking):
    droid = await db.Bot.get_or_none(idplayer=attacking.id, status__in=[1, 2]).first()
    atk = 0
    if not droid:
        return atk
    getInventory = await db.BotInventory.filter(idbot=droid.id, active=2, name__in=['–£—Ä–æ–Ω+', '–£—Ä–æ–Ω++', '–£—Ä–æ–Ω+++'])
    for item in getInventory:
        if item.name == '–£—Ä–æ–Ω+': atk += 15
        elif item.name == '–£—Ä–æ–Ω++': atk += 30
        elif item.name == '–£—Ä–æ–Ω+++': atk += 50
    return atk

async def getDroidPvPAtk(attacking):
    droid = await db.Bot.get_or_none(idplayer=attacking.id, status__in=[1, 2]).first()
    atk = 0
    if not droid:
        return atk
    if droid.hackedTime >= int(time.time()): return atk
    getInventory = await db.BotInventory.filter(idbot=droid.id, active=2, name__in=['–£–¥–∞—Ä+', '–£–¥–∞—Ä++', '–£–¥–∞—Ä+++'])
    for item in getInventory:
        if item.name == '–£–¥–∞—Ä+': atk += 3
        elif item.name == '–£–¥–∞—Ä++': atk += 6
        elif item.name == '–£–¥–∞—Ä+++': atk += 9
    return atk

async def getDroidPvPUv(user):
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    uv = 0
    if not droid:
        return uv
    if droid.hackedTime >= int(time.time()): return uv
    getInventory = await db.BotInventory.filter(idbot=droid.id, active=2, name__in=['–£–∫–ª–æ–Ω+', '–£–∫–ª–æ–Ω++', '–£–∫–ª–æ–Ω+++'])
    for item in getInventory:
        if item.name == '–£–∫–ª–æ–Ω+': uv += 3
        elif item.name  == "–£–∫–ª–æ–Ω++": uv += 6
        elif item.name  == "–£–∫–ª–æ–Ω+++": uv += 9
    return uv

async def getDroidPvPHeal(user):
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    heal = 0
    if not droid:
        return heal
    if droid.hackedTime >= int(time.time()): return heal
    getInventory = await db.BotInventory.filter(idbot=droid.id, active=2, name__in=['–í–∞–º–ø–∏—Ä–∏–∑–º+', '–í–∞–º–ø–∏—Ä–∏–∑–º++', '–í–∞–º–ø–∏—Ä–∏–∑–º+++'])
    for item in getInventory:
        if item.name == '–í–∞–º–ø–∏—Ä–∏–∑–º+': heal += 3
        elif item.name  == "–í–∞–º–ø–∏—Ä–∏–∑–º++": heal += 6
        elif item.name  == "–í–∞–º–ø–∏—Ä–∏–∑–º+++": heal += 9
    return heal


async def getDroidCreet(user):
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    creet = 0
    if not droid:
        return creet
    getInventory = await db.BotInventory.filter(idbot=droid.id, active=2, name__in=['–ö—Ä–∏—Ç+', '–ö—Ä–∏—Ç++', '–ö—Ä–∏—Ç+++'])
    for item in getInventory:
        if item.name == '–ö—Ä–∏—Ç+': creet += 3
        elif item.name  == "–ö—Ä–∏—Ç++": creet += 6
        elif item.name  == "–ö—Ä–∏—Ç+++": creet += 9
    return creet

async def getDroidUv(user):
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    uv = 0
    if not droid:
        return uv
    getInventory = await db.BotInventory.filter(idbot=droid.id, active=2, name__in=['–£–∫–ª–æ–Ω–µ–Ω–∏–µ+', '–£–∫–ª–æ–Ω–µ–Ω–∏–µ++', '–£–∫–ª–æ–Ω–µ–Ω–∏–µ+++'])
    for item in getInventory:
        if item.name == '–£–∫–ª–æ–Ω–µ–Ω–∏–µ+': uv += 3
        elif item.name  == "–£–∫–ª–æ–Ω–µ–Ω–∏–µ++": uv += 6
        elif item.name  == "–£–∫–ª–æ–Ω–µ–Ω–∏–µ+++": uv += 9
    return uv

async def getDroidArmor(user):
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    armor = 0
    if not droid:
        return armor
    getInventory = await db.BotInventory.filter(idbot=droid.id, active=2, name__in=['–ó–∞—â–∏—Ç–∞+', '–ó–∞—â–∏—Ç–∞++', '–ó–∞—â–∏—Ç–∞+++'])
    for item in getInventory:
        if item.name == '–ó–∞—â–∏—Ç–∞+': armor += 3
        elif item.name  == "–ó–∞—â–∏—Ç–∞++": armor += 6
        elif item.name  == "–ó–∞—â–∏—Ç–∞+++": armor += 9
    return armor

async def getDroidWeapon(user):
    droid = await db.Bot.get_or_none(idplayer=user.id, status__in=[1, 2]).first()
    weapon = False
    if not droid:
        return weapon, weapon
    getWeapon = await db.BotInventory.filter(idbot=droid.id, active=2, name__in=['–õ–∞–∑–µ—Ä–Ω—ã–π –≤—ã—Å—Ç—Ä–µ–ª'])
    weaponReady = False
    weaponIds = False
    if getWeapon:
        weaponReady = {}
        weaponIds = {}
        for item in getWeapon:
            weaponIds[item.id] = item.name
            if item.lastAtk <= int(time.time()):
                weaponReady[item.id] = True
            else:
                weaponReady[item.id] = False
    return weaponReady, weaponIds
